{"version":3,"sources":["constants/common.ts","Theme.ts","context/CommonContext.ts","pages/Errors/401.tsx","services/api/BaseApi.ts","services/api/Task.ts","modules/TCommentCategoryContent/index.tsx","components/TLabelValue/index.tsx","components/TTitle/index.tsx","services/api/GetOptions.ts","components/TRenderFile/index.tsx","modules/RenderAttachedFile/index.tsx","components/TButton/index.tsx","components/TLabelIcon/index.tsx","constants/defaultValue.ts","utils/util.ts","utils/renderComponent.tsx","constants/mockupData.ts","modules/IViewJobType/index.tsx","modules/IViewStatus/index.tsx","modules/IViewPriority/index.tsx","modules/IViewCompletedTime/index.tsx","modules/IViewReminder/index.tsx","modules/IViewDescription/index.tsx","modules/IViewRelatedTo/index.tsx","modules/IViewLocation/index.tsx","modules/IViewCreatedDate/index.tsx","modules/IViewAssigner/index.tsx","modules/IViewAssignedTo/index.tsx","components/TCommentForm/index.tsx","components/CompleteTaskConfettiPopup/index.tsx","modules/CommentTask/index.tsx","components/TAutocomplete/index.tsx","modules/ISelectJobType/index.tsx","modules/ISelectAssignee/index.tsx","modules/ISelectPriority/index.tsx","modules/Attachment/index.tsx","components/ISelect/index.tsx","components/ISelectOption/index.tsx","modules/TSelectWithNumberFormat/index.tsx","components/ISelectSuggestion/index.tsx","modules/SearchBar/index.tsx","modules/CompletedTime/index.tsx","modules/ISelectRemider/index.tsx","components/ISelectSuggestionFreeText/index.tsx","modules/SelectLocation/index.tsx","components/TextInput/index.tsx","utils/useFormControls.ts","pages/TodoList/TodoForm.tsx","services/taskTrackingService/index.ts","modules/EditTask/index.tsx","utils/useLatestValue.ts","utils/useViewDetailTaskTracking.ts","pages/TodoDetail/index.tsx","modules/CreateTask/index.tsx","modules/ISelectStatus/index.tsx","modules/ISelectTeam/index.tsx","modules/ISelectZone/index.tsx","modules/ISelectDepartment/index.tsx","modules/IFilterAdvance/index.tsx","modules/IFilterHeader/index.tsx","utils/usePreviousValue.ts","utils/useCalendarModeTracking.ts","modules/ICalendar/index.tsx","modules/IAgendaGroup/CustomAgenda.tsx","pages/TodoList/index.tsx","components/ILoading/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DataTypeTextInput","TaskStatusType","Theme","createTheme","palette","primary","main","secondary","CommonContext","createContext","currentUserId","loading","respStatus","checkPermission","act","setLoading","status","setRespStatus","PageError401","className","style","textAlign","color","href","LABEL_DESCRIPTION","LABEL_ASSIGNEE","LABEL_JOB_TYPE","LABEL_JOB_NAME","LABEL_PRIORITY","LABEL_LOCATION","LABEL_REMINDER","LABEL_RELATED_TO","LABEL_ATTACHMENT","LABEL_COMPLETED_TIME","LABEL_STATUS","LABEL_ALL_DAY","TITLE_CREATE_TASK","PLACEHOLDER_JOB_TYPE","DATE_FORMAT","TIME_FORMAT","DATE_FORMAT_MAIN","ERROR_TIME_IN_THE_PAST","PRIORITY_LABEL_MEDIUM","PRIORITY_LABEL_LOW","NO_OPTIONS","EMPTY_STRING","REMIDER_OPTION","icon","id","name","ICON_EXCEL","process","ICON_WORD","ICON_PPT","ICON_PDF","FILE_EXTENSION_ACCEPT","WORD_TYPE","EXCEL_TYPE","POWERPOINT_TYPE","IMAGE_TYPE","PDF_TYPE","ATTACHED_FILES","validationFields","type","label","rule","required","value","assignedTo","priority","description","relatedTo","completionTimeDate","completionTimeFrom","completionTimeTo","RESPONSE_GET_SUCCESS","FeatureCodeType","LANGUAGES","BASE_API","window","CALENDAR_TASK_BASE_API","BACKOFFICE_API","BASE_BACKOFFICE_API","token","getWindow","currentUser","Request","methodHttp","baseUrl","endpoint","body","cancelToken","a","axios","url","baseURL","method","headers","data","JSON","stringify","res","response","RequestHeader","isUpload","Authorization","get","props","embbedHeader","payload","post","submitCreateTask","dataPost","api","submitEditTask","getDetailTask","submitCompletedTask","submitCanceledTask","getCommentCategoryConfig","featureCode","getCommentCategorySuggestions","getEventWithFilter","getEventWithAgendaFilter","page","numberItem","getPemissionOnAction","TCommentCategoryContent","useContext","useState","comments","setComments","open","setOpen","photoIndex","setPhotoIndex","photoList","setPhotoList","commentTitle","setCommentTitle","clsTitle","setClsTitle","useEffect","COMPLETED","CANCELED","fetchComments","taskId","code","renderPhotos","photoString","photoLinks","parse","Array","isArray","length","ImageList","cols","map","p","i","ImageListItem","onClick","index","pList","pLink","link","src","alt","Typography","component","c","photo","categoryItemName","items","comment","join","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","TLabelValue","variant","TTitle","title","getTypeList","getAssigneeToList","getTaskPriorityList","getRelatedTypeList","getRelatedDealListingList","isDeal","linkApi","getStatusList","getRelatedList","getTeamList","zoneIds","getUserListFiltered","TRenderFile","attachedFileType","filename","mimetype","toLowerCase","RenderAttachedFile","size","clickOnImage","indexOf","download","TButton","disabled","startIcon","Button","TLabelIcon","startDay","moment","startOf","unix","endDay","endOf","startWeek","endWeek","startMonth","endMonth","currentTime","TODO_TASK_UPDATE_DEFAULT_VALUE","Date","toDate","assignorId","undefined","attachedFiles","completionAllDay","createdBy","location","mode","relatedType","reminderTime","view","TASK_DETAIL_DEFAULT_VALUE","typeName","DEFAULT_VIEWS","day","week","month","agenda","TODO_TASK_COMMENT_DEFAULT_VALUE","dataId","OPTIONS_GROUP_BY","FILTER_ADVANCE_DEFAULT_VALUE","fromDate","groupBy","TODO_TASK_FILTER_DEFAULT_VALUE","assignedToIds","departmentIds","teamIds","types","DEFAULT_ATTACHED_FILES","image","mFile","getStartDate","d","typeDate","getEndDate","renderDateFromTo","date","prevView","renderEventTime","timeFrom","timeTo","isAllDay","isMoreEvent","timeFromTo","formatTimeFrom","format","formatTimeTo","getUserInfo","userSessionId","userId","isNotEmpty","Object","keys","convertDateText","reduce","f","s","replace","renderTrangThai","clsName","Chip","renderPriority","renderLienQuanDen","rel","target","renderFile","fileItems","cls","toggleLightBox","item","k","renderAttachedFiles","listFiles","push","renderFileList","renderImageList","listFile","renderDateTime","dt","renderLightbox","images","PRIORITY_ICON_OPTION","width","parseOptions","itemName","options","icons","itemIcon","parseItems","key","parseAssigneddOptions","parseLocationTcOptions","tcId","parseRelatedListingOptions","phone","address","parseRelatedDealOptions","listingType","propertyType","price","parseZoneOptions","departmentId","departmentName","parseTeamOptions","parseDepartmentOptions","parseCalendarItem","end","start","allDay","resource","parseGroupByOptions","renderStatusColor","clsEventStatus","INCOMPLETE","MyCustomHeader","toCapitalStr","upperFirst","MyEvent","event","renderTooltipLabel","Tooltip","MyMoreEvent","events","currentMode","classes","makeStyles","taskName","cursor","marginRight","useStyles","localStorage","setItem","source","handleClickTaskName","DefaultData","JobTypeResponse","AssignerResponse","userName","now","IViewJobType","setHours","getHours","defItems","optionItems","setOptionItems","fetchData","useCallback","parseData","concat","IViewStatus","setTitle","filterItem","filter","IViewPriority","IViewCompletedTime","timeDate","classIsThePast","formatDate","displayDateTime","IViewReminder","IViewDescription","IViewRelatedTo","setData","resp","dataConvert","IViewLocation","IViewCreatedDate","IViewAssigner","assignorName","matchedUser","find","IViewAssignedTo","assignedToName","TCommentForm","displayModal","handleSubmitForm","handleCloseModal","categoryConfig","listCommentSuggestion","errorsConfig","setErrorsConfig","setDataPost","errorsCfg","config","requiredInput","showTextInput","requiredTextInput","errorInput","requiredImage","showPhoto","requiredPhoto","errorImage","Dialog","fullWidth","maxWidth","scroll","onClose","Toolbar","IconButton","DialogContent","dividers","onDataChange","errorsConfigAfterCheck","photos","categoryConfigData","commentSuggestionResponse","onCommentPriceTagChange","DialogActions","autoFocus","validation","theme","confettiTitle","fontWeight","marginBottom","spacing","CompleteTaskConfettiPopup","show","handleClose","confettiRef","useRef","timeoutRef","confettiIntervalId","createConfetti","myConfetti","confetti","create","current","resize","angles","originX","getConfettiRandom","particleCount","angle","spread","startVelocity","decay","ticks","origin","y","x","setInterval","document","visibilityState","random","min","max","Math","floor","awaitDomReady","setTimeout","clearInterval","fontSize","ref","CommentTask","setDisplayModal","commentTask","setCommentTask","setCategoryConfig","setListCommentSuggestion","displayConfettiPopup","setDisplayConfettiPopup","resetAll","fetchCategoryConfig","result","fetchCategorySuggestion","modal","handleCommentTask","commentData","completedComment","canceledComment","reload","TAutocomplete","selectedOptions","error","option","placeholder","onChange","multiple","fValue","values","el","includes","Autocomplete","limitTags","eValue","getOptionLabel","renderOption","otp","renderInput","params","TextField","filterSelectedOptions","FormHelperText","ISelectJobType","errMsg","memoPlaceholder","useMemo","hasData","fieldName","val","ISelectAssignee","setAssignedToIds","optsId","Number","changeAssignorName","selectedAssignor","eName","ISelectPriority","Attachment","fileList","onSetFile","setError","clsUploadBtn","handleFileChange","e","preventDefault","files","newMergedFiles","dataForm","FormData","append","fileName","message","renderFileIcon","file","iconPath","toLowercaseType","getIconPath","list","getListFile","Box","Grid","container","xs","toFixed","newList","handleDeleteFile","accept","toString","display","htmlFor","ISelect","native","revertValue","Select","defaultValue","displayEmpty","margin","MenuItem","ISelectOption","FormControl","TSelectWithNumberFormat","getPlaceholder","autoWidth","ISelectSuggestion","onInputChange","getRelatedValue","setGetRalatedValue","getValue","opt","getOptionSelected","noOptionsText","InputProps","startAdornment","InputAdornment","position","kw","listOpts","handleInputChange","currentTarget","inputValue","parts","split","RegExp","part","clsHighlight","SearchBar","onChangeRelatedTo","onChangeRelatedType","itemRelatedTypeName","parseRelatedType","optionsRelatedType","setOptionsRelatedType","setInputValue","fn","search","totalElements","content","fetchRelatedType","respRelatedType","relatedTypeOptions","getRalatedType","CompletedTime","memo","onChangeCompletedTimeAllDay","onChangeCompletedTimeDate","onChangeCompletedTimeFrom","onChangeCompletedTimeTo","checkTimeDate","checkTimeFrom","checkTimeTo","validateTimeFrom","setValidateTimeFrom","validateTimeTo","setValidateTimeTo","hasError","clsDateTime","clsStartTime","clsFinishTime","alignItems","FormControlLabel","control","Checkbox","checked","handleCheckAllDay","labelPlacement","utils","DateFnsUtils","disableToolbar","helperText","inputVariant","minDate","getDate","ampm","keyboardIcon","errorFrom","handleStartTimeChange","minTime","errorTo","isBefore","handleEndTimeChange","ISelectRemider","ISelectSuggestionFreeText","freeSolo","onBlur","SelectLocation","BootstrapInput","withStyles","createStyles","root","marginTop","input","borderRadius","backgroundColor","common","white","border","padding","transition","transitions","InputBase","TextInput","maxLength","multiline","rows","rowsMax","inputProps","useFormControls","initialFormValues","validateFields","setValues","validatedFields","setValidatedFields","errors","setErrors","validate","fieldValues","temp","getKey","prev","handleSuccess","formSubmitted","success","handleError","formIsValid","isValid","arrKeys","forEach","form","every","handleInputValue","fieldValue","updatedValidateFields","handleFormSubmit","handleListValue","listFields","handleReset","handleResetValidationFields","fields","TodoForm","isRequired","cloneDeep","onHandleCloseModal","handleChangeLocation","saveTodoTask","alert","isDisabled","validateSubmitForm","URL","REACT_APP_TASK_TRACKING_URL","TaskTrackingService","client","isConnected","isConnecting","waitForOpenConnection","Promise","resolve","reject","currentAttempt","interval","maxNumberOfAttempts","Error","rs","rj","Stomp","over","SockJS","debug","connect","this","disconnect","eventName","timestamp","eventTransactionId","eventData","send","accessToken","requestId","uuidv4","eventTypeCode","eventSourceCode","eventAppCode","uuid","EditTask","todoTask","setTodoTask","isAddOrUpdate","taskTrackingService","sendEvent","useLatestValue","useViewDetailTaskTracking","task","eventSource","getItem","currentTask","trackingEvent","handleVisibilitychange","removeItem","addEventListener","removeEventListener","TodoDetail","modalTaskCompleted","setModalTaskCompleted","modalTaskCanceled","setModalTaskCanceled","displayEditModal","setDisplayEditModal","setIsAddOrUpdate","setListFiles","filterRemainFiles","filterImages","useParams","getPermission","handleCompletedTask","handleCancelTask","toggleEditModal","taskTitle","isUpdate","handleUpdateTask","Paper","elevation","direction","createdDate","updatedDate","CreateTask","ISelectStatus","ISelectTeam","convertToNumber","ISelectZone","ISelectDepartment","buttonGroup","agendaButton","groupByButton","minWidth","IFilterAdvance","onChangeAgenda","onToggleModal","toggleDatePicker","setToggleDatePicker","dateRange","setDateRange","startDate","endDate","renderLabelPicker","clsFlexContainer","toggleClsAgendaNavigation","justifyContent","months","moveRangeOnFirstSelection","ranges","selection","ButtonGroup","viewMode","updateView","renderButtonType","Add","IFilterHeader","onApplyAdvanceFilter","onCancel","onChangeDateAgenda","onReset","onSearch","toggleHeaderFilter","setToggleHeaderFilter","classFilter","showStatus","onChangeFilter","usePreviousValue","prevValue","useCalendarModeTracking","prevMode","latestMode","handleModeChange","locale","mlocalizer","momentLocalizer","messages","vi","showMore","total","ICalendar","filterMode","listViews","onCreateEvent","onNavigate","toggleModal","setToggleModal","eventsMore","setEventsMore","dateMore","setDateMore","language","sort","b","components","header","toolbar","navigateButton","navigateButtonRight","todayButton","onHandleNavigate","getLabel","dateToNavigate","setDate","setMonth","getMonth","CustomToolbar","timeGutterHeader","defaultDate","doShowMoreDrillDown","eventPropGetter","background","formats","dayHeaderFormat","monthHeaderFormat","dayRangeHeaderFormat","range","formatStart","formatEnd","convertFormatEnd","localizer","resourceIdAccessor","resourceTitleAccessor","selectable","tooltipAccessor","views","onSelectEvent","onSelectSlot","onShowMore","onToggleShowMore","onView","AgendaView","renderGroupAgent","idx","countItems","renderTime","renderAgent","TableCell","rowSpan","TableRow","align","renderEvent","ev","renderDate","scope","renderGroupDate","TableContainer","Table","TableBody","add","navigate","action","sDate","subtract","TodoList","initialCreateTaskData","setListViews","setEvents","defaultCreateTaskData","setDefaultCreateTaskData","agendaPage","setAgendaPage","toggleLoadMore","setToggleLoadMore","latestEventsValue","defaultFilterData","assignedToIdsToDataPost","getData","toggleLoadMoreBtn","totalPages","isOpen","getMode","getView","getFromDate","getToDate","onHandleFilter","slotInfo","ILoading","clsLoading","App","dataItemContext","ThemeProvider","Provider","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.36c5b61b.chunk.js","sourcesContent":["export const PAGE_DETAIL = 'Chi tiết công việc'\r\n\r\nexport const LABLE_DETAIL = 'Hẹn gặp khách hàng'\r\nexport const LABEL_DESCRIPTION = 'Mô tả'\r\nexport const LABEL_ASSIGNEE = 'Người phụ trách'\r\nexport const LABEL_JOB_TYPE = 'Loại công việc'\r\nexport const LABEL_JOB_NAME = 'Tên công việc'\r\nexport const LABEL_PRIORITY = 'Độ ưu tiên'\r\nexport const LABEL_LOCATION = 'Địa điểm'\r\nexport const LABEL_REMINDER = 'Nhắc nhở'\r\nexport const LABEL_RELATED_TO = 'Liên quan đến'\r\nexport const LABEL_ATTACHMENT = 'Đính kèm'\r\nexport const LABEL_SUGGESTION = 'Tìm theo ID, tên khách hàng, sđt'\r\nexport const LABEL_COMPLETED_TIME = 'Thời gian hoàn tất'\r\nexport const LABEL_STATUS = 'Trạng thái'\r\nexport const LABEL_ASSIGNED_DATE = 'Ngày chuyển'\r\nexport const LABEL_ASSIGNED_UPDATED_DATE = 'Ngày cập nhật gần nhất'\r\nexport const LABEL_ASSIGNER = 'Người chuyển'\r\nexport const LABEL_ZONE = 'Zone'\r\nexport const LABEL_TEAM = 'Team'\r\nexport const LABEL_DEPARTMENT = 'Phòng ban'\r\nexport const LABEL_ALL_DAY = 'Cả ngày'\r\n\r\nexport const LABEL_DAY = 'Ngày'\r\nexport const LABEL_WEEK = 'Tuần'\r\nexport const LABEL_MONTH = 'Tháng'\r\nexport const LABEL_LIST = 'Danh sách'\r\nexport const LABEL_GROUP = 'Agenda'\r\nexport const LABEL_TODAY = 'Hôm nay'\r\nexport const LABEL_STATUS_COMPLETED = 'Hoàn tất'\r\nexport const LABEL_STATUS_IN_COMPLETED = 'Chưa hòan tất'\r\nexport const LABEL_STATUS_CANCELLED = 'Đã hủy'\r\n\r\nexport const LABEL_GROUP_BY_USER = 'Nhóm theo nhân viên'\r\nexport const LABEL_GROUP_BY_DATE = 'Nhóm theo ngày'\r\n\r\nexport const BTN_CREATE_TODO = 'Tạo công việc'\r\nexport const BTN_UPDATE_TODO = 'Sửa'\r\nexport const BTN_CANCEL_TODO = 'Huỷ'\r\nexport const BTN_CANCEL = 'Hủy'\r\nexport const BTN_SAVE = 'Lưu'\r\nexport const BTN_UPLOAD = 'Tải lên'\r\nexport const BTN_COMPLETE_TODO = 'Hoàn tất'\r\nexport const BTN_CLOSE_COMMENT = 'Bỏ qua'\r\nexport const BTN_LOAD_MORE = 'Xem thêm'\r\n\r\nexport const EDIT_CREATE_TASK = 'Cập nhật công việc'\r\nexport const TITLE_CREATE_TASK = 'Tạo công việc'\r\nexport const TITLE_COMMENT_COMPLETED = 'Kết quả công việc'\r\nexport const SUBTITLE_COMMENT_COMPLETED = 'Công việc hoàn thành tốt'\r\nexport const TITLE_COMMENT_COMPLETED_RESULT = 'Hoàn tất công việc'\r\nexport const TITLE_COMMENT_CANCELED = 'Hủy công việc'\r\nexport const TITLE_COMMENT_CANCELED_RESULT = 'Công việc đã hủy'\r\nexport const SUBTITLE_COMMENT_CANCELED_REASON = 'Lý do hủy'\r\nexport const TITLE_NOTED = 'Ghi chú:'\r\n\r\nexport const PLACEHOLDER_ASSIGNEE = '-- Tất cả nhân viên --'\r\nexport const PLACEHOLDER_ASSIGNEE_HAS_VALUE = 'Chọn nhân viên'\r\nexport const PLACEHOLDER_ASSIGNEE_SINGLE = '-- Chọn nhân viên --'\r\nexport const PLACEHOLDER_DEPARTMENT = '-- Tất cả phòng ban --'\r\nexport const PLACEHOLDER_DEPARTMENT_HAS_VALUE = 'Chọn phòng ban'\r\nexport const PLACEHOLDER_JOB_TYPE = '-- Tất cả loại công việc --'\r\nexport const PLACEHOLDER_JOB_TYPE_HAS_VALUE = 'Chọn loại công việc'\r\nexport const PLACEHOLDER_JOB_TYPE_SINGLE = '-- Chọn loại công việc --'\r\nexport const PLACEHOLDER_PRIORITY = '-- Tất cả độ ưu tiên --'\r\nexport const PLACEHOLDER_PRIORITY_HAS_VALUE = 'Chọn độ ưu tiên'\r\nexport const PLACEHOLDER_PRIORITY_SINGLE = '-- Chọn độ ưu tiên --'\r\nexport const PLACEHOLDER_STATUS = '-- Tất cả trạng thái --'\r\nexport const PLACEHOLDER_STATUS_HAS_VALUE = 'Chọn trạng thái'\r\nexport const PLACEHOLDER_TEAM = '-- Tất cả Team --'\r\nexport const PLACEHOLDER_TEAM_HAS_VALUE = 'Chọn Team'\r\nexport const PLACEHOLDER_ZONE = '-- Tất cả Zone --'\r\nexport const PLACEHOLDER_ZONE_HAS_VALUE = 'Chọn Zone'\r\n\r\nexport const PLACEHOLDER_JOB_NAME = 'Nhập tên công việc'\r\nexport const PLACEHOLDER_RELATED_TYPE = '-- Chọn loại liên quan --'\r\n\r\nexport const DATE_FORMAT = 'dd/MM/yyyy'\r\nexport const MOMENT_DATE_FORMAT = 'DD/MM/yyyy'\r\nexport const TIME_FORMAT = 'HH:mm'\r\nexport const DATE_FORMAT_MAIN = 'DD/MM/yyyy'\r\nexport const DAY_HEADER_FORMAT = 'dddd, DD MMMM'\r\nexport const MONTH_HEADER_FORMAT = 'MMMM, YYYY'\r\n\r\nexport const ERROR_TIME_IN_THE_PAST = 'Không nhập thời gian trong quá khứ.'\r\nexport const ERROR_TIMETO_LESS_TIMEFROM = 'Thời gian kết thúc không được nhỏ hơn thời gian bắt đầu.'\r\nexport const ERROR_MAX_ATTACHMENT_FILE = 'Tối đa 10 file'\r\nexport const ERROR_MAX_FILE_SIZE = 'Kích cỡ file tối đa là 5Mb'\r\nexport const MAX_FILE_SIZE = 10\r\n\r\nexport const MAX_LENGTH_INPUT = 100\r\n\r\nexport const PRIORITY_LABEL_HIGHEST = 'Cao'\r\nexport const PRIORITY_LABEL_MEDIUM = 'Trung bình'\r\nexport const PRIORITY_LABEL_LOW = 'Thấp'\r\n\r\nexport const NO_OPTIONS = 'Không có kết quả nào'\r\n\r\nexport const EMPTY_STRING = ''\r\nexport const TASK = 'công việc'\r\n\r\nexport const RELATED_TYPE_OPTION = [\r\n  {\r\n    id: 9,\r\n    name: 'Listing',\r\n    value: 9,\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'Deal',\r\n    value: 13,\r\n  },\r\n]\r\nexport const RELATED_TO_OPTION = [\r\n  {\r\n    address: '123 Truong Dinh, Q1',\r\n    id: '12',\r\n    label: '12 - Tuan - 09099099000',\r\n    name: '12 - Tuan - 09099099000',\r\n    phone: '09099099000',\r\n    price: EMPTY_STRING,\r\n    propertyType: EMPTY_STRING,\r\n    value: '12',\r\n  },\r\n  {\r\n    address: '34 Ba Huyen Thanh Quan, Q1',\r\n    phone: '09099099000',\r\n    price: EMPTY_STRING,\r\n    propertyType: EMPTY_STRING,\r\n    value: '34',\r\n    id: '34',\r\n    label: '34 - Tu - 09009988766',\r\n    name: '34 - Tu - 09009988766',\r\n  },\r\n]\r\n\r\nexport const REMIDER_OPTION = [\r\n  {\r\n    icon: EMPTY_STRING,\r\n    id: 1,\r\n    name: 'Không nhắc nhở',\r\n  },\r\n  {\r\n    icon: EMPTY_STRING,\r\n    id: 2,\r\n    name: 'Vào giờ đến hạn',\r\n  },\r\n  {\r\n    icon: EMPTY_STRING,\r\n    id: 3,\r\n    name: 'Trước 10 phút',\r\n  },\r\n  {\r\n    icon: EMPTY_STRING,\r\n    id: 4,\r\n    name: 'Trước 30 phút',\r\n  },\r\n  {\r\n    icon: EMPTY_STRING,\r\n    id: 5,\r\n    name: 'Trước 1 giờ',\r\n  },\r\n  {\r\n    icon: EMPTY_STRING,\r\n    id: 6,\r\n    name: 'Trước 2 giờ',\r\n  },\r\n]\r\n\r\nexport const ICON_EXCEL = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-excel.png`\r\nexport const ICON_WORD = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-word.png`\r\nexport const ICON_PPT = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-ppt.png`\r\nexport const ICON_PDF = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-pdf.svg`\r\nexport const ICON_DONE = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-done.png`\r\n\r\nexport const FILE_EXTENSION_ACCEPT = [\r\n  '.csv',\r\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n  'application/vnd.ms-excel',\r\n  '.docx',\r\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\r\n  '.doc',\r\n  'application/msword',\r\n  '.ppt',\r\n  '.pptx',\r\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n  'application/vnd.ms-powerpoint',\r\n  '.jpg',\r\n  '.png',\r\n  '.pdf',\r\n]\r\n\r\nexport const WORD_TYPE = ['word', 'docx']\r\nexport const EXCEL_TYPE = ['excel', 'xlsx', 'xls', 'csv']\r\nexport const POWERPOINT_TYPE = ['ppt', 'pptx']\r\nexport const IMAGE_TYPE = ['jpg', 'png', 'jpeg']\r\nexport const PDF_TYPE = ['pdf']\r\nexport const ATTACHED_FILES = [...WORD_TYPE, ...EXCEL_TYPE, ...POWERPOINT_TYPE, ...PDF_TYPE]\r\n\r\nexport const ACCEPT_FILE_SIZE = 5 * 1024 * 1024\r\n\r\nexport const validationFields = {\r\n  type: {\r\n    name: 'type',\r\n    label: LABEL_JOB_TYPE,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  name: {\r\n    name: 'name',\r\n    label: LABEL_JOB_NAME,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  assignedTo: {\r\n    name: 'assignedTo',\r\n    label: LABEL_ASSIGNEE,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  priority: {\r\n    name: 'priority',\r\n    label: LABEL_PRIORITY,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  description: {\r\n    name: 'description',\r\n    label: LABEL_DESCRIPTION,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  relatedTo: {\r\n    name: 'relatedTo',\r\n    label: LABEL_RELATED_TO,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  completionTimeDate: {\r\n    name: 'completionTimeDate',\r\n    label: LABEL_COMPLETED_TIME,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  completionTimeFrom: {\r\n    name: 'completionTimeFrom',\r\n    label: LABEL_COMPLETED_TIME,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n  completionTimeTo: {\r\n    name: 'completionTimeTo',\r\n    label: LABEL_COMPLETED_TIME,\r\n    rule: {\r\n      required: true,\r\n    },\r\n    value: null,\r\n  },\r\n}\r\n\r\n// Pagination\r\nexport const PAGINATION_LIMIT = 5\r\nexport const SUGGESTION_LIMIT = 20\r\n\r\n// api response\r\nexport const RESPONSE_GET_SUCCESS = '200'\r\n\r\nexport const FeatureCodeType = {\r\n  COMPLETED: 'TODO_TASK_COMPLETED',\r\n  CANCELED: 'TODO_TASK_CANCELED',\r\n}\r\n\r\nexport enum DataTypeTextInput {\r\n  // eslint-disable-next-line no-unused-vars\r\n  TAG = 'Tag',\r\n  // eslint-disable-next-line no-unused-vars\r\n  TEXT = 'Text',\r\n}\r\n\r\nexport enum TaskStatusType {\r\n  // eslint-disable-next-line no-unused-vars\r\n  INCOMPLETE = 1,\r\n  // eslint-disable-next-line no-unused-vars\r\n  COMPLETED = 2,\r\n  // eslint-disable-next-line no-unused-vars\r\n  CANCELED = 3,\r\n}\r\n\r\nexport const VIETNAMESE = 'vi'\r\nexport const ENGLISH = 'en'\r\nexport const LANGUAGES = [VIETNAMESE, ENGLISH]\r\n\r\nexport const BASE_API = window?.CALENDAR_TASK_BASE_API || process.env.REACT_APP_BASE_API || EMPTY_STRING\r\nexport const BACKOFFICE_API =\r\n  window?.BASE_BACKOFFICE_API || process.env.REACT_APP_BACKOFFICE_API || EMPTY_STRING\r\n","import { createTheme } from '@material-ui/core'\r\n\r\nexport const Theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#00a93c',\r\n    },\r\n    secondary: {\r\n      main: '#fff'\r\n    },\r\n  },\r\n})\r\n","import { createContext } from 'react'\r\n\r\ntype TCommonContext = {\r\n  currentUserId: number\r\n  loading: boolean\r\n  respStatus: boolean\r\n  // eslint-disable-next-line no-unused-vars\r\n  checkPermission: (act: string) => any\r\n  // eslint-disable-next-line no-unused-vars\r\n  setLoading: (status: boolean) => any\r\n  // eslint-disable-next-line no-unused-vars\r\n  setRespStatus: (status: boolean) => any\r\n}\r\nexport const CommonContext = createContext<TCommonContext>({\r\n  currentUserId: 159,\r\n  loading: false,\r\n  respStatus: false,\r\n  // eslint-disable-next-line no-unused-vars\r\n  checkPermission: (act: string) => {},\r\n  // eslint-disable-next-line no-unused-vars\r\n  setLoading: (status: boolean) => {},\r\n  // eslint-disable-next-line no-unused-vars\r\n  setRespStatus: (status: boolean) => {},\r\n})\r\n","import React from 'react'\r\n\r\nimport 'pages/Errors/index.scss'\r\n\r\nexport const PageError401 = (): JSX.Element => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content\">\r\n        <div className=\"title\">401 Forbidden.</div>\r\n        <p style={{ textAlign: 'center', color: 'black' }}>\r\n          Bạn không có quyền truy cập tính năng này. <a href=\"/\">Quay trở lại</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios, { CancelToken } from 'axios'\r\n\r\nimport { EHttpMethods, FullResponse, TPropsApi } from 'services/api/api.d'\r\n\r\nlet token = '02c2057ad9872ae252cae49f230932964b3d4729d620077de43162c6f40532ed'\r\nif (process.env.NODE_ENV === 'production') {\r\n  const getWindow: any = (window as any).window\r\n  token = getWindow.currentUser.token\r\n}\r\n\r\nconst Request = async (\r\n  methodHttp: EHttpMethods,\r\n  baseUrl: string,\r\n  endpoint: string,\r\n  body: any,\r\n  cancelToken: CancelToken,\r\n): Promise<FullResponse<any> | any> => {\r\n  try {\r\n    const res = await axios({\r\n      url: endpoint,\r\n      baseURL: `${baseUrl}?access_token=${token}`,\r\n      method: methodHttp,\r\n      headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      data: JSON.stringify(body),\r\n      cancelToken,\r\n    })\r\n    if (res.status === 401) {\r\n      return res\r\n    }\r\n    return res.data\r\n  } catch (err: any) {\r\n    return err.response.data\r\n  }\r\n}\r\nconst RequestHeader: any = async (\r\n  methodHttp: EHttpMethods,\r\n  baseUrl: string,\r\n  endpoint: string,\r\n  body: any,\r\n  cancelToken: CancelToken,\r\n  isUpload?: boolean,\r\n): Promise<FullResponse<any> | any> => {\r\n  let headers = {\r\n    'Content-Type': 'application/json; charset=utf-8',\r\n    Authorization: `Bearer ${token}`,\r\n  }\r\n  let data = JSON.stringify(body)\r\n  if (isUpload) {\r\n    data = body\r\n    headers = {\r\n      ...headers,\r\n      'Content-Type': 'multipart/form-data',\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await axios({\r\n      url: endpoint,\r\n      baseURL: baseUrl,\r\n      method: methodHttp,\r\n      headers,\r\n      data,\r\n      cancelToken,\r\n    })\r\n    if (res.status === 401) {\r\n      return res\r\n    }\r\n    return res.data\r\n  } catch (err: any) {\r\n    return err.response.data\r\n  }\r\n}\r\n\r\nexport const get: any = (props: TPropsApi) => {\r\n  const { cancelToken, embbedHeader, endpoint, payload, url } = props\r\n  if (embbedHeader) {\r\n    return RequestHeader('GET', url, endpoint, payload, cancelToken)\r\n  }\r\n\r\n  return Request('GET', url, endpoint, payload, cancelToken)\r\n}\r\n\r\nexport const post: any = (props: TPropsApi) => {\r\n  const { cancelToken, embbedHeader, endpoint, isUpload, payload, url } = props\r\n\r\n  if (embbedHeader) {\r\n    return RequestHeader('POST', url, endpoint, payload, cancelToken, isUpload)\r\n  }\r\n\r\n  return Request('POST', url, endpoint, payload, cancelToken)\r\n}\r\n\r\nexport const put: any = (props: TPropsApi) => {\r\n  const { cancelToken, embbedHeader, endpoint, payload, url } = props\r\n  if (embbedHeader) {\r\n    return RequestHeader('PUT', url, endpoint, payload, cancelToken)\r\n  }\r\n\r\n  return Request('PUT', url, endpoint, payload, cancelToken)\r\n}\r\n\r\nexport const patch: any = (props: TPropsApi) => {\r\n  const { cancelToken, embbedHeader, endpoint, payload, url } = props\r\n  if (embbedHeader) {\r\n    return RequestHeader('PATCH', url, endpoint, payload, cancelToken)\r\n  }\r\n\r\n  return Request('PATCH', url, endpoint, payload, cancelToken)\r\n}\r\n\r\nexport const deleteRequest: any = (props: TPropsApi) => {\r\n  const { cancelToken, embbedHeader, endpoint, payload, url } = props\r\n  if (embbedHeader) {\r\n    return RequestHeader('DELETE', url, endpoint, payload, cancelToken)\r\n  }\r\n\r\n  return Request('DELETE', url, endpoint, payload, cancelToken)\r\n}\r\n","import * as api from 'services/api/BaseApi'\r\nimport { FullResponse, ITodoResponse } from 'services/api/api.d'\r\n\r\nimport { ITaskCanceledPost, ITaskCompletedPost, IToDoTaskDataPost } from 'utils/form'\r\nimport { IFilterHeaderValues } from 'modules/IFilterHeader/index.d'\r\nimport { CategoryConfigResponse, CommentSuggestionResponse } from 'model/comment'\r\nimport { BASE_API, BACKOFFICE_API, PAGINATION_LIMIT } from 'constants/common'\r\n\r\nexport const uploadFile = (fileName: FormData): Promise<FullResponse<any>> => {\r\n  return api.post({\r\n    embbedHeader: true,\r\n    url: `${BASE_API}file/upload`,\r\n    payload: fileName,\r\n    isUpload: true,\r\n  })\r\n}\r\n\r\nexport const submitCreateTask = (dataPost: IToDoTaskDataPost): Promise<FullResponse<any>> => {\r\n  return api.post({ embbedHeader: true, url: `${BASE_API}task`, payload: dataPost })\r\n}\r\n\r\nexport const submitEditTask = (dataPost: IToDoTaskDataPost): Promise<FullResponse<any>> => {\r\n  return api.put({ embbedHeader: true, url: `${BASE_API}task`, payload: dataPost })\r\n}\r\n\r\nexport const getDetailTask = (id: number): Promise<FullResponse<any>> => {\r\n  return api.get({ url: `${BASE_API}task/${id}`, embbedHeader: true })\r\n}\r\n\r\nexport const submitCompletedTask = (dataPost: ITaskCompletedPost): Promise<FullResponse<any>> => {\r\n  return api.post({\r\n    embbedHeader: true,\r\n    url: `${BASE_API}task/complete`,\r\n    payload: dataPost,\r\n  })\r\n}\r\n\r\nexport const submitCanceledTask = (dataPost: ITaskCanceledPost): Promise<FullResponse<any>> => {\r\n  return api.post({\r\n    embbedHeader: true,\r\n    url: `${BASE_API}task/cancel`,\r\n    payload: dataPost,\r\n  })\r\n}\r\n\r\nexport const getCommentCategoryConfig = (featureCode: string): Promise<FullResponse<CategoryConfigResponse>> => {\r\n  return api.get({\r\n    url: `${BACKOFFICE_API}get-comment-category-config/${featureCode}`,\r\n    embbedHeader: true,\r\n  })\r\n}\r\n\r\nexport const getCommentCategorySuggestions = (\r\n  featureCode: string,\r\n): Promise<FullResponse<CommentSuggestionResponse[]>> => {\r\n  return api.get({\r\n    url: `${BACKOFFICE_API}get-comment-suggestions/${featureCode}`,\r\n    embbedHeader: true,\r\n  })\r\n}\r\n\r\nexport const getCommentByTaskId = (taskId: number): Promise<FullResponse<CommentSuggestionResponse[]>> => {\r\n  return api.get({\r\n    url: `${BACKOFFICE_API}get-comment-category/${taskId}`,\r\n    embbedHeader: true,\r\n  })\r\n}\r\n\r\nexport const getEventWithFilter = (dataPost: IFilterHeaderValues): Promise<FullResponse<any>> => {\r\n  return api.post({ embbedHeader: true, url: `${BASE_API}task/list`, payload: dataPost })\r\n}\r\nexport const getEventWithAgendaFilter = (\r\n  dataPost: IFilterHeaderValues,\r\n  page = 0,\r\n  numberItem = PAGINATION_LIMIT,\r\n): Promise<FullResponse<any>> => {\r\n  return api.post({ embbedHeader: true, url: `${BASE_API}task/agenda/${page}/${numberItem}`, payload: dataPost })\r\n}\r\n\r\nexport const getPemissionOnAction = (act: string): Promise<ITodoResponse<any>> => {\r\n  return api.get({ embbedHeader: true, url: `${BASE_API}task/checkPermission/${act}` })\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { ImageList, ImageListItem, Typography } from '@material-ui/core'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport Lightbox from 'react-image-lightbox'\r\n\r\nimport { TCommentCategoryProps } from 'modules/TCommentCategoryContent/index.d'\r\n\r\nimport 'modules/TCommentCategoryContent/index.scss'\r\nimport { CommentData, CommentDataItem } from 'model/comment'\r\nimport {\r\n  TaskStatusType,\r\n  RESPONSE_GET_SUCCESS,\r\n  TITLE_COMMENT_COMPLETED_RESULT,\r\n  TITLE_COMMENT_CANCELED_RESULT,\r\n} from 'constants/common'\r\nimport { getCommentByTaskId } from 'services/api/Task'\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nexport const TCommentCategoryContent = (props: TCommentCategoryProps): JSX.Element => {\r\n  const { status, id } = props\r\n\r\n  const { setLoading } = useContext(CommonContext)\r\n  const [comments, setComments] = useState<CommentData[]>([])\r\n  const [open, setOpen] = useState(false)\r\n  const [photoIndex, setPhotoIndex] = useState(0)\r\n  const [photoList, setPhotoList] = useState<string[]>([])\r\n  const [commentTitle, setCommentTitle] = useState<string>('')\r\n  const [clsTitle, setClsTitle] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    if (status === TaskStatusType.COMPLETED) {\r\n      setClsTitle('primary')\r\n      setCommentTitle(TITLE_COMMENT_COMPLETED_RESULT)\r\n    }\r\n\r\n    if (status === TaskStatusType.CANCELED) {\r\n      setCommentTitle(TITLE_COMMENT_CANCELED_RESULT)\r\n      setClsTitle('secondary')\r\n    }\r\n  }, [status])\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async (): Promise<void> => {\r\n      setLoading(true)\r\n      const response = await getCommentByTaskId(id)\r\n      setLoading(false)\r\n      if (response.code === RESPONSE_GET_SUCCESS) {\r\n        if (response.data) {\r\n          setComments(response.data)\r\n        }\r\n      }\r\n    }\r\n    fetchComments()\r\n  }, [])\r\n\r\n  const getCommentItemString = (items: CommentDataItem[]): string => {\r\n    return items.map((i: CommentDataItem) => i.comment).join(', ')\r\n  }\r\n\r\n  const renderLightbox = (): JSX.Element | false => {\r\n    return (\r\n      open && (\r\n        <Lightbox\r\n          mainSrc={photoList[photoIndex]}\r\n          nextSrc={photoList[(photoIndex + 1) % photoList.length]}\r\n          prevSrc={photoList[(photoIndex + photoList.length - 1) % photoList.length]}\r\n          onCloseRequest={() => setOpen(false)}\r\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + photoList.length - 1) % photoList.length)}\r\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % photoList.length)}\r\n        />\r\n      )\r\n    )\r\n  }\r\n\r\n  const previewPhoto = (index: number, pList: string[]): void => {\r\n    setPhotoIndex(index)\r\n    setOpen(true)\r\n    setPhotoList(pList)\r\n  }\r\n\r\n  const renderPhotos = (photoString: string): JSX.Element => {\r\n    const photoLinks = JSON.parse(photoString)\r\n    if (Array.isArray(photoLinks) && photoLinks.length > 0) {\r\n      return (\r\n        <ImageList className=\"image-list\" cols={12}>\r\n          {photoLinks.map((p: any, i: number) => (\r\n            <ImageListItem\r\n              key={p.link}\r\n              onClick={() => {\r\n                previewPhoto(\r\n                  i,\r\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                  photoLinks.map((pLink: any) => pLink.link),\r\n                )\r\n              }}\r\n              aria-hidden=\"true\"\r\n            >\r\n              <img key={p.link} src={p.link} alt=\"\" />\r\n            </ImageListItem>\r\n          ))}\r\n        </ImageList>\r\n      )\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  const renderLayout = (data: CommentData[]): JSX.Element | false => {\r\n    return (\r\n      data.length > 0 && (\r\n        <div className={`mt-40 comment-data-container status-${status}`}>\r\n          <div className=\"comment-category-content\">\r\n            <CheckCircleIcon className={`icon ${clsTitle}`} />\r\n            <div className=\"comment-items\">\r\n              <Typography className={`title ${clsTitle}`} component=\"div\">\r\n                {commentTitle}\r\n              </Typography>\r\n              {data.map((c) => (\r\n                <div key={`comment-item-${c.id}`} className=\"comment-item\">\r\n                  <div className=\"files-container\">{renderPhotos(c.photo)}</div>\r\n                  <Typography className=\"comment-note\" component=\"div\">\r\n                    <Typography className=\"comment-note-label\" component=\"div\">\r\n                      {c.categoryItemName}\r\n                    </Typography>\r\n                    <Typography className=\"comment-note-value\" component=\"div\">\r\n                      {getCommentItemString(c.items)}\r\n                    </Typography>\r\n                  </Typography>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderLayout(comments)}\r\n      {renderLightbox()}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TLabelValueProps } from 'components/TLabelValue/index.d'\r\n\r\nimport 'components/TLabelValue/index.scss'\r\n\r\nexport const TLabelValue = (props: TLabelValueProps): JSX.Element => {\r\n  const { className, label, value, variant } = props\r\n\r\n  return (\r\n    <Typography className={`style-label-container ${className}`} component=\"div\">\r\n      {label && (\r\n        <Typography className=\"style-label\" variant={variant}>\r\n          {label}\r\n        </Typography>\r\n      )}\r\n\r\n      <Typography className=\"style-value\" component=\"div\" variant={variant}>\r\n        {value}\r\n      </Typography>\r\n    </Typography>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TTitleProps } from 'components/TTitle/index.d'\r\n\r\nexport const TTitle = (props: TTitleProps): JSX.Element => {\r\n  const { className, title, variant } = props\r\n\r\n  return (\r\n    <Typography component=\"div\" className={`title ${className}`} variant={variant}>\r\n      {title}\r\n    </Typography>\r\n  )\r\n}\r\n","import { BASE_API, PAGINATION_LIMIT } from 'constants/common'\r\n\r\nimport * as api from 'services/api/BaseApi'\r\nimport { FullResponse, ITodoResponse } from 'services/api/api'\r\n\r\nimport {\r\n  TAssigneeToResp,\r\n  TDataPost,\r\n  TFilterAssignee,\r\n  TPriorityResp,\r\n  TRelatedDealListingResp,\r\n  TRelatedToResponse,\r\n  TRelatedTypeResp,\r\n  TStatusResp,\r\n  TTypeListResp,\r\n} from 'services/api/GetOptions.d'\r\n\r\nexport const getTypeList = (): Promise<FullResponse<TTypeListResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getTaskTypeList`, embbedHeader: true })\r\n}\r\n\r\nexport const getAssigneeToList = (): Promise<FullResponse<TAssigneeToResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getUserList`, embbedHeader: true, payload: null })\r\n}\r\n\r\nexport const getTaskPriorityList = (): Promise<FullResponse<TPriorityResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getTaskPriorityList`, embbedHeader: true })\r\n}\r\nexport const getRelatedTypeList = (assignedTo?: number): Promise<ITodoResponse<TRelatedTypeResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getRelatedTypeList/${assignedTo}`, embbedHeader: true })\r\n}\r\n\r\nexport const getLocationTcList = (): Promise<FullResponse<TAssigneeToResp[]>> => {\r\n  return api.get({\r\n    url: `${BASE_API}task/getTcList/1/${PAGINATION_LIMIT}`,\r\n    embbedHeader: true,\r\n  })\r\n}\r\n\r\nexport const getRelatedDealListingList = (\r\n  isDeal: boolean,\r\n  dataPost: TDataPost,\r\n): Promise<FullResponse<TRelatedDealListingResp[]>> => {\r\n  let linkApi = 'getListingRelatedList'\r\n  if (isDeal) {\r\n    linkApi = 'getDealRelatedList'\r\n  }\r\n\r\n  return api.post({\r\n    url: `${BASE_API}task/${linkApi}`,\r\n    embbedHeader: true,\r\n    payload: dataPost,\r\n  })\r\n}\r\n\r\nexport const getStatusList = (): Promise<FullResponse<TStatusResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getTaskStatusList`, embbedHeader: true })\r\n}\r\n\r\nexport const getReminderList = (): Promise<FullResponse<TStatusResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getTaskReminderList`, embbedHeader: true })\r\n}\r\n\r\nexport const getRelatedList = (isDeal: boolean, id?: number | string): Promise<FullResponse<TRelatedToResponse>> => {\r\n  let linkApi = 'getListingRelatedList'\r\n  if (isDeal) {\r\n    linkApi = 'getDealRelatedList'\r\n  }\r\n\r\n  return api.get({\r\n    url: `${BASE_API}task/${linkApi}/${id}`,\r\n    embbedHeader: true,\r\n  })\r\n}\r\n\r\nexport const getZoneList = (): Promise<FullResponse<TStatusResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getZoneList`, embbedHeader: true })\r\n}\r\n\r\nexport const getTeamList = (zoneIds?: number[]): Promise<FullResponse<TStatusResp[]>> => {\r\n  return api.post({ url: `${BASE_API}task/getTeamList`, embbedHeader: true, payload: { zoneIds } })\r\n}\r\n\r\nexport const getDepartmentList = (): Promise<FullResponse<TStatusResp[]>> => {\r\n  return api.get({ url: `${BASE_API}task/getDepartmentList`, embbedHeader: true })\r\n}\r\n\r\nexport const getUserListFiltered = (dataPost: TFilterAssignee): Promise<FullResponse<TAssigneeToResp[]>> => {\r\n  return api.post({ url: `${BASE_API}task/getUserListFiltered`, embbedHeader: true, payload: dataPost })\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TRenderFileProps } from 'components/TRenderFile/index.d'\r\n\r\nimport 'components/TRenderFile/index.scss'\r\n\r\nexport const TRenderFile = (props: TRenderFileProps): JSX.Element => {\r\n  const { className, component, filename, mimetype, src } = props\r\n\r\n  let attachedFileType\r\n  switch (mimetype.toLowerCase()) {\r\n    case 'ppt': {\r\n      attachedFileType = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-ppt.png`\r\n      break\r\n    }\r\n    case 'excel': {\r\n      attachedFileType = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-excel.png`\r\n      break\r\n    }\r\n    case 'word': {\r\n      attachedFileType = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-word.png`\r\n      break\r\n    }\r\n    case 'pdf': {\r\n      attachedFileType = `${process.env.REACT_APP_PUBLIC_ICON_PATH}/icon-pdf.svg`\r\n      break\r\n    }\r\n    default:\r\n      attachedFileType = src\r\n      break\r\n  }\r\n\r\n  return (\r\n    <Typography className={`file-type ${className}`} component={component}>\r\n      <img src={attachedFileType} alt={filename} />\r\n    </Typography>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TFile } from 'pages/TodoDetail/index.d'\r\n\r\nimport 'modules/RenderAttachedFile/index.scss'\r\nimport { TRenderFile } from 'components/TRenderFile'\r\nimport { IMAGE_TYPE } from 'constants/common'\r\n\r\nexport const RenderAttachedFile = (props: TFile): JSX.Element => {\r\n  const { className, name, type, url, size, onClick } = props\r\n\r\n  const renderContentFile = (src?: string): JSX.Element => {\r\n    if (IMAGE_TYPE.indexOf(type.toLowerCase()) > -1) {\r\n      return <TRenderFile component=\"div\" filename={name} mimetype={type} src={src} />\r\n    }\r\n\r\n    return (\r\n      <a href={src} title=\"Download\" download>\r\n        <TRenderFile component=\"div\" filename={name} mimetype={type} src={src} />\r\n        <Typography className=\"file-info\" component=\"div\">\r\n          <Typography className=\"filename\">{name}</Typography>\r\n          <Typography className=\"filesize\">{size}</Typography>\r\n        </Typography>\r\n      </a>\r\n    )\r\n  }\r\n\r\n  const clickOnImage = (): string | number => {\r\n    if (onClick) {\r\n      return onClick()\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n  return (\r\n    <Typography className={`file-container ${className}`} component=\"div\" onClick={() => clickOnImage()}>\r\n      {renderContentFile(url)}\r\n    </Typography>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport { TButtonProps } from 'components/TButton/index.d'\r\n\r\nimport 'components/TButton/index.scss'\r\n\r\nexport const TButton = (props: TButtonProps): JSX.Element => {\r\n  const { className, color, disabled, label, startIcon, variant, onClick } = props\r\n\r\n  return (\r\n    <Button className={`def-btn ${className}`} color={color} disabled={disabled} variant={variant} onClick={onClick}>\r\n      {startIcon} {label}\r\n    </Button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { TLabelIconProps } from 'components/TLabelIcon/index.d'\r\n\r\nimport 'components/TLabelIcon/index.scss'\r\n\r\nexport const TLabelIcon = (props: TLabelIconProps): JSX.Element => {\r\n  const { className, icon, label, variant } = props\r\n\r\n  return (\r\n    <Typography className={`label-icon-container ${className}`} component=\"div\">\r\n      <img alt={label} className=\"style-icon\" src={icon} />\r\n      <Typography className=\"style-icon-label\" variant={variant}>\r\n        {label}\r\n      </Typography>\r\n    </Typography>\r\n  )\r\n}\r\n","import moment from 'moment'\r\n\r\nimport { TAttachedFile } from 'pages/TodoDetail/index.d'\r\n\r\nimport { ITask } from 'model/task'\r\n\r\nimport { IFilterMode } from 'modules/ICalendar/index.d'\r\nimport { IFilterHeaderValues } from 'modules/IFilterHeader/index.d'\r\nimport { TGroupBy } from 'modules/IFilterAdvance/index.d'\r\n\r\nimport { ICompletedTime, ITodoMappingLabel, IToDoTask, ITaskCommentData, IToDoTaskDataPost } from 'utils/form'\r\nimport {\r\n  LABEL_ASSIGNEE,\r\n  LABEL_ATTACHMENT,\r\n  LABEL_COMPLETED_TIME,\r\n  LABEL_DESCRIPTION,\r\n  LABEL_GROUP_BY_DATE,\r\n  LABEL_GROUP_BY_USER,\r\n  LABEL_JOB_NAME,\r\n  LABEL_JOB_TYPE,\r\n  LABEL_LOCATION,\r\n  LABEL_PRIORITY,\r\n  LABEL_RELATED_TO,\r\n  LABEL_REMINDER,\r\n} from 'constants/common'\r\n\r\nexport const startDay = moment().startOf('day').unix() * 1000\r\nexport const endDay = moment().endOf('day').unix() * 1000\r\nexport const startWeek = moment().startOf('week').unix() * 1000\r\nexport const endWeek = moment().endOf('week').unix() * 1000\r\nexport const startMonth = moment().startOf('month').unix() * 1000\r\nexport const endMonth = moment().endOf('month').unix() * 1000\r\nexport const currentTime = moment().unix() * 1000\r\nexport const pastTime = moment(new Date(2015, 3, 1)).toDate()\r\n\r\nexport const TYPE_ID_DEFAFULT_VALUE = ''\r\nexport const JOB_NAME_DEFAFULT_VALUE = ''\r\nexport const JOB_DESCRIPTION_DEFAFULT_VALUE = ''\r\nexport const ASSIGN_TO_DEFAULT_VALUE = 0\r\nexport const PRIORITY_DEFAULT_VALUE = 0\r\nexport const RELATED_TYPE_IS_LISTING = 9\r\nexport const RELATED_TYPE_IS_DEAL = 13\r\nexport const RELATED_TO_DEFAULT_VALUE = 0\r\nexport const COMPLETED_TIME_DEFAULT_VALUE: ICompletedTime = {\r\n  assignedTo: '',\r\n  completionAllDay: false,\r\n  completionTimeDate: '',\r\n  completionTimeFrom: '',\r\n  completionTimeTo: '',\r\n}\r\nexport const REMINDER_DEFAULT_VALUE = 0\r\nexport const LOCATION_DEFAULT_VALUE = ''\r\n\r\nexport const TODO_TASK_DEFAULT_VALUE: IToDoTask = {\r\n  assignedTo: ASSIGN_TO_DEFAULT_VALUE,\r\n  attachedFiles: [],\r\n  completedTime: COMPLETED_TIME_DEFAULT_VALUE,\r\n  description: JOB_DESCRIPTION_DEFAFULT_VALUE,\r\n  location: LOCATION_DEFAULT_VALUE,\r\n  name: JOB_NAME_DEFAFULT_VALUE,\r\n  priority: PRIORITY_DEFAULT_VALUE,\r\n  relatedTo: RELATED_TO_DEFAULT_VALUE,\r\n  relatedType: RELATED_TYPE_IS_LISTING,\r\n  reminderTime: REMINDER_DEFAULT_VALUE,\r\n  type: TYPE_ID_DEFAFULT_VALUE,\r\n}\r\nexport const TODO_TASK_MAPPING_LABEL: ITodoMappingLabel = {\r\n  assignedTo: LABEL_ASSIGNEE,\r\n  attachedFiles: LABEL_ATTACHMENT,\r\n  completedTime: LABEL_COMPLETED_TIME,\r\n  description: LABEL_DESCRIPTION,\r\n  location: LABEL_LOCATION,\r\n  name: LABEL_JOB_NAME,\r\n  priority: LABEL_PRIORITY,\r\n  relatedTo: LABEL_RELATED_TO,\r\n  reminderTime: LABEL_REMINDER,\r\n  type: LABEL_JOB_TYPE,\r\n}\r\nexport const TODO_TASK_UPDATE_DEFAULT_VALUE: IToDoTaskDataPost = {\r\n  assignedTo: '',\r\n  assignorId: undefined,\r\n  attachedFiles: [],\r\n  completionAllDay: false,\r\n  completionTimeDate: '',\r\n  completionTimeFrom: '',\r\n  completionTimeTo: '',\r\n  createdBy: undefined,\r\n  description: JOB_DESCRIPTION_DEFAFULT_VALUE,\r\n  location: LOCATION_DEFAULT_VALUE,\r\n  mode: 'list',\r\n  name: JOB_NAME_DEFAFULT_VALUE,\r\n  priority: 2,\r\n  relatedTo: undefined,\r\n  relatedType: undefined,\r\n  reminderTime: 3,\r\n  type: undefined,\r\n  view: 'day',\r\n}\r\n\r\nexport const TASK_DETAIL_DEFAULT_VALUE: ITask = {\r\n  assignedTo: undefined,\r\n  assignorId: undefined,\r\n  attachedFiles: [],\r\n  completionAllDay: false,\r\n  completionTimeDate: undefined,\r\n  completionTimeFrom: undefined,\r\n  completionTimeTo: undefined,\r\n  createdBy: undefined,\r\n  description: JOB_DESCRIPTION_DEFAFULT_VALUE,\r\n  location: LOCATION_DEFAULT_VALUE,\r\n  name: JOB_NAME_DEFAFULT_VALUE,\r\n  priority: undefined,\r\n  relatedTo: undefined,\r\n  relatedType: RELATED_TYPE_IS_LISTING,\r\n  reminderTime: undefined,\r\n  type: undefined,\r\n  typeName: '',\r\n  status: 1,\r\n}\r\n\r\nexport const DEFAULT_VIEWS = { day: true, week: true, month: true, agenda: true }\r\nexport const navigate = {\r\n  PREVIOUS: 'PREV',\r\n  NEXT: 'NEXT',\r\n  TODAY: 'TODAY',\r\n  DATE: 'DATE',\r\n}\r\n\r\nexport const views = {\r\n  MONTH: 'month',\r\n  WEEK: 'week',\r\n  WORK_WEEK: 'work_week',\r\n  DAY: 'day',\r\n  AGENDA: 'agenda',\r\n}\r\n\r\nexport const TODO_TASK_COMMENT_DEFAULT_VALUE: ITaskCommentData = {\r\n  comments: [],\r\n  createdBy: undefined,\r\n  dataId: undefined,\r\n}\r\n\r\nexport const OPTIONS_GROUP_BY: TGroupBy[] = [\r\n  {\r\n    label: LABEL_GROUP_BY_USER,\r\n    value: 'assignee',\r\n  },\r\n  {\r\n    label: LABEL_GROUP_BY_DATE,\r\n    value: 'date',\r\n  },\r\n]\r\n\r\nexport const FILTER_ADVANCE_DEFAULT_VALUE: IFilterMode = {\r\n  fromDate: startDay,\r\n  groupBy: OPTIONS_GROUP_BY[0].value,\r\n  mode: 'list',\r\n  toDate: endDay,\r\n  view: 'day',\r\n}\r\n\r\nexport const TODO_TASK_FILTER_DEFAULT_VALUE: IFilterHeaderValues & IFilterMode = {\r\n  ...FILTER_ADVANCE_DEFAULT_VALUE,\r\n  assignedToIds: [],\r\n  departmentIds: [],\r\n  location: '',\r\n  name: '',\r\n  priority: undefined,\r\n  status: [],\r\n  teamIds: [],\r\n  types: [],\r\n  zoneIds: [],\r\n}\r\n\r\n// render attached files\r\nexport const DEFAULT_ATTACHED_FILES: TAttachedFile = {\r\n  image: [],\r\n  mFile: [],\r\n}\r\n","import { stringOrDate } from 'react-big-calendar'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { DATE_FORMAT_MAIN, LABEL_ALL_DAY, TIME_FORMAT } from 'constants/common'\r\nimport { endDay, endMonth, endWeek, startDay, startMonth, startWeek } from 'constants/defaultValue'\r\n\r\nimport { TNavigate } from 'utils/renderComponent.d'\r\n\r\nexport const encode = (component: []): string => {\r\n  return encodeURIComponent(JSON.stringify(component))\r\n}\r\n\r\nexport const timeoutPromiseResolve = (interval: number): Promise<string> => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(function () {\r\n      resolve('successful')\r\n    }, interval)\r\n  })\r\n}\r\n\r\nexport type VALIDATION_FIELD = {\r\n  [x: string]: {\r\n    name: string\r\n    label: string\r\n    value: unknown\r\n    rule: {\r\n      email?: {\r\n        maxLength?: number\r\n        minLength?: number\r\n      }\r\n      lessThan?: boolean\r\n      maxLength?: number\r\n      minLength?: number\r\n      required?: boolean\r\n    }\r\n  }\r\n}\r\n\r\nexport type VALIDATION_RESPONSE = {\r\n  [x: string]: string\r\n}\r\n\r\nexport const getStartDate = (d: Date | stringOrDate, typeDate: 'day' | 'week' | 'month'): number => {\r\n  return moment(d).startOf(typeDate).unix() * 1000\r\n}\r\nexport const getEndDate = (d: Date | stringOrDate, typeDate: 'day' | 'week' | 'month'): number => {\r\n  return moment(d).endOf(typeDate).unix() * 1000\r\n}\r\n\r\nexport const renderDateFromTo = (props: TNavigate): TNavigate => {\r\n  const { date, mode, prevView, view } = props\r\n  let { fromDate, toDate } = props\r\n\r\n  switch (view) {\r\n    case 'day':\r\n      fromDate = startDay\r\n      toDate = endDay\r\n      if (date) {\r\n        fromDate = getStartDate(date, 'day')\r\n        toDate = getEndDate(date, 'day')\r\n      }\r\n      break\r\n    case 'week':\r\n      fromDate = startWeek\r\n      toDate = endWeek\r\n      if (date) {\r\n        fromDate = getStartDate(date, 'week')\r\n        toDate = getEndDate(date, 'week')\r\n      }\r\n      break\r\n    case 'month':\r\n      fromDate = startMonth\r\n      toDate = endMonth\r\n      if (date) {\r\n        fromDate = getStartDate(date, 'month')\r\n        toDate = getEndDate(date, 'month')\r\n      }\r\n      break\r\n    default:\r\n      switch (prevView) {\r\n        case 'week':\r\n          fromDate = startWeek\r\n          toDate = endWeek\r\n          break\r\n        case 'month':\r\n          fromDate = startMonth\r\n          toDate = endMonth\r\n          break\r\n        default:\r\n          fromDate = startDay\r\n          toDate = endDay\r\n          break\r\n      }\r\n\r\n      break\r\n  }\r\n\r\n  if (mode) {\r\n    switch (prevView) {\r\n      case 'week':\r\n        fromDate = startWeek\r\n        toDate = endWeek\r\n        break\r\n      case 'month':\r\n        fromDate = startMonth\r\n        toDate = endMonth\r\n        break\r\n      default:\r\n        fromDate = startDay\r\n        toDate = endDay\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    fromDate,\r\n    prevView,\r\n    toDate,\r\n    view,\r\n  }\r\n}\r\n\r\nexport const renderEventTime = (timeFrom: number, timeTo?: number, isAllDay?: boolean, isMoreEvent?: boolean): string => {\r\n  if (isAllDay) {\r\n    if (isMoreEvent) {\r\n      return LABEL_ALL_DAY\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n  let timeFromTo = ``\r\n  const formatTimeFrom = moment(timeFrom).format(TIME_FORMAT)\r\n  if (timeTo) {\r\n    const formatTimeTo = moment(timeTo).format(TIME_FORMAT)\r\n\r\n    timeFromTo = `${formatTimeFrom} - ${formatTimeTo}`\r\n  }\r\n\r\n  return timeFromTo\r\n}\r\n\r\nexport function randomInRange(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport const getTimestamp = (date: number, time: number, defaultFormat = `${DATE_FORMAT_MAIN} ${TIME_FORMAT}`): number => {\r\n  const getDate = moment(date).format(DATE_FORMAT_MAIN)\r\n  const timeFrom = moment(time).format(TIME_FORMAT)\r\n\r\n  return moment(`${getDate} ${timeFrom}`, defaultFormat).unix() * 1000\r\n}\r\n\r\nexport const getUserInfo = (): {\r\n  userSessionId: string\r\n  token: string\r\n} => {\r\n  const getWindow: any = (window as any).window\r\n  let userSessionId = 'test'\r\n  let token = '2f0905fbc8ea0ef116211dba7b66925e0d03f22538ccab512577a9c078c08b22'\r\n\r\n  if (process.env.NODE_ENV === 'production') {\r\n    userSessionId = getWindow.currentUser.userId\r\n    token = getWindow.currentUser.token\r\n  }\r\n\r\n  return {\r\n    userSessionId,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const isNotEmpty = (value: any): boolean => {\r\n  if (value && typeof value === 'object') {\r\n    return !!Object.keys(value).length\r\n  }\r\n\r\n  if (value === 0) {\r\n    return true\r\n  }\r\n\r\n  return !!value\r\n}\r\n\r\nexport const convertDateText = (label: string): string => {\r\n  const mapDayMonthToVn: any = [\r\n    { 'thứ': 'Thứ' },\r\n    { 'tháng': 'Tháng' }\r\n  ]\r\n\r\n  return mapDayMonthToVn.reduce((f: string, s: any) => `${f}`.replace(Object.keys(s)[0], s[Object.keys(s)[0]]), label)\r\n}","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nimport { Button, Chip, Grid, Tooltip, Typography } from '@material-ui/core'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { Event, HeaderProps } from 'react-big-calendar'\r\n\r\nimport Lightbox from 'react-image-lightbox'\r\n\r\nimport { upperFirst } from 'lodash'\r\n\r\nimport { TAttachedFile, TFile } from 'pages/TodoDetail/index.d'\r\n\r\nimport { IResponseTask } from 'model/task'\r\nimport { RenderAttachedFile } from 'modules/RenderAttachedFile'\r\n\r\nimport { TButton } from 'components/TButton'\r\nimport { TLabelIcon } from 'components/TLabelIcon'\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport {\r\n  LABEL_STATUS_CANCELLED,\r\n  LABEL_STATUS_COMPLETED,\r\n  LABEL_STATUS_IN_COMPLETED,\r\n  LABEL_TODAY,\r\n  PRIORITY_LABEL_HIGHEST,\r\n  PRIORITY_LABEL_LOW,\r\n  PRIORITY_LABEL_MEDIUM,\r\n  TaskStatusType,\r\n} from 'constants/common'\r\n\r\nimport { TGroupBy } from 'modules/IFilterAdvance/index.d'\r\n\r\nimport { TAssigneeToResp, TLocationTcResp, TRelatedDealListingResp, TZoneResp } from 'services/api/GetOptions.d'\r\n\r\nimport { convertDateText, getEndDate, getStartDate, renderDateFromTo, renderEventTime } from 'utils/util'\r\nimport { IOption } from 'utils/form'\r\nimport { ILienQuanDenProps, TOptionInput, TToolbar } from 'utils/renderComponent.d'\r\n\r\nimport 'react-image-lightbox/style.css' // This only needs to be imported once in your app\r\n\r\nexport const renderTrangThai = (status?: number, title?: string): JSX.Element => {\r\n  let clsName = ''\r\n  let label = title\r\n  switch (status) {\r\n    case 2:\r\n      clsName = 'completed'\r\n      if (!title) {\r\n        label = LABEL_STATUS_COMPLETED\r\n      }\r\n      break\r\n    case 1:\r\n      clsName = 'in-completed'\r\n      if (!title) {\r\n        label = LABEL_STATUS_IN_COMPLETED\r\n      }\r\n      break\r\n    case 3:\r\n      clsName = 'cancelled'\r\n      if (!title) {\r\n        label = LABEL_STATUS_CANCELLED\r\n      }\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  return <Chip className={`status-highlight ${clsName}`} label={label} />\r\n}\r\n\r\nexport const renderPriority = (status?: number | string, title?: string): JSX.Element => {\r\n  let icon = ''\r\n  let label = title\r\n  switch (status) {\r\n    case 1:\r\n      icon = 'lowest.svg'\r\n      if (!title) {\r\n        label = PRIORITY_LABEL_LOW\r\n      }\r\n      break\r\n    case 2:\r\n      icon = 'medium.svg'\r\n      if (!title) {\r\n        label = PRIORITY_LABEL_MEDIUM\r\n      }\r\n      break\r\n    case 3:\r\n      icon = 'highest.svg'\r\n      if (!title) {\r\n        label = PRIORITY_LABEL_HIGHEST\r\n      }\r\n      break\r\n\r\n    default:\r\n      icon = 'lowest.svg'\r\n      if (!title) {\r\n        label = PRIORITY_LABEL_LOW\r\n      }\r\n      break\r\n  }\r\n\r\n  return <TLabelIcon className=\"item-value\" icon={`${process.env.REACT_APP_PUBLIC_ICON_PATH}/${icon}`} label={label} />\r\n}\r\n\r\nexport const renderLienQuanDen = (props: ILienQuanDenProps): JSX.Element => {\r\n  const { name, id, label } = props\r\n  let link = ''\r\n  if (label === 'Deal') {\r\n    link = `/deal/detail/${id}`\r\n  }\r\n  if (label === 'Listing') {\r\n    link = `/pos/sa/detail/${id}`\r\n  }\r\n\r\n  return (\r\n    <Typography className=\"deal\" component=\"div\">\r\n      {label}{' '}\r\n      <a className=\"highlight-id\" href={link} rel=\"noreferrer\" target=\"_blank\">\r\n        {id}\r\n      </a>{' '}\r\n      - <Typography component=\"span\">{name}</Typography>\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport const renderFile = (fileItems: TFile[], cls: string, toggleLightBox?: (id: number) => number): JSX.Element[] => {\r\n  let onClick: () => number | string\r\n\r\n  return fileItems.map((item, k) => {\r\n    if (toggleLightBox) {\r\n      onClick = () => toggleLightBox(k)\r\n    }\r\n\r\n    return (\r\n      <RenderAttachedFile\r\n        className={cls}\r\n        key={`${item.url}`}\r\n        name={item.name}\r\n        size={item.size}\r\n        type={item.type}\r\n        url={item.url}\r\n        onClick={onClick}\r\n      />\r\n    )\r\n  })\r\n}\r\n\r\nexport const renderFileList = (items: TFile[]): JSX.Element => {\r\n  return (\r\n    <TLabelValue key=\"file\" className=\"mt-20\" label={`Files (${items.length})`} value={renderFile(items, 'two-cols')} />\r\n  )\r\n}\r\nexport const renderImageList = (items: TFile[], toggleLightBox?: (i: number) => number): JSX.Element => {\r\n  return (\r\n    <TLabelValue\r\n      key=\"image\"\r\n      className=\"mt-20\"\r\n      label={`Hình ảnh (${items.length})`}\r\n      value={renderFile(items, 'two-cols hide-info mt-10', toggleLightBox)}\r\n    />\r\n  )\r\n}\r\nexport const renderAttachedFiles = (items: TAttachedFile, toggleLightBox: (i: number) => number): JSX.Element[] => {\r\n  const listFiles = []\r\n  if (items.mFile.length > 0) {\r\n    listFiles.push(renderFileList(items.mFile))\r\n  }\r\n  if (items.image.length > 0) {\r\n    listFiles.push(renderImageList(items.image, toggleLightBox))\r\n  }\r\n\r\n  return listFiles.map((listFile) => listFile)\r\n}\r\n\r\nexport const renderDateTime = (dt: string): JSX.Element => {\r\n  /**\r\n   * TODO need to define dt object to compare with now time()\r\n   */\r\n  let clsName = 'item-value error'\r\n  if (dt) {\r\n    clsName = 'item-value'\r\n  }\r\n\r\n  return <TTitle className={clsName} title={dt} />\r\n}\r\n\r\nexport const renderLightbox = (\r\n  open: boolean,\r\n  images: TFile[],\r\n  i: number,\r\n  setOpen: (_: boolean) => void,\r\n  setPhotoIndex: (_: number) => void,\r\n): JSX.Element => {\r\n  if (open) {\r\n    return (\r\n      <Lightbox\r\n        mainSrc={images[i].url}\r\n        nextSrc={images[(i + 1) % images.length].url}\r\n        prevSrc={images[(i + images.length - 1) % images.length].url}\r\n        onCloseRequest={() => setOpen(!open)}\r\n        onMovePrevRequest={() => setPhotoIndex((i + images.length - 1) % images.length)}\r\n        onMoveNextRequest={() => setPhotoIndex((i + 1) % images.length)}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <p />\r\n}\r\n\r\nexport const PRIORITY_ICON_OPTION = [\r\n  <img src={`${process.env.REACT_APP_PUBLIC_ICON_PATH}/lowest.svg`} alt={PRIORITY_LABEL_LOW} width={15} />,\r\n  <img src={`${process.env.REACT_APP_PUBLIC_ICON_PATH}/medium.svg`} alt={PRIORITY_LABEL_MEDIUM} width={15} />,\r\n  <img src={`${process.env.REACT_APP_PUBLIC_ICON_PATH}/highest.svg`} alt={PRIORITY_LABEL_HIGHEST} width={15} />,\r\n]\r\n\r\nexport const parseOptions = (itemName: string, options: TOptionInput[], icons?: JSX.Element[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n  let itemIcon: JSX.Element\r\n\r\n  options.map((item, k) => {\r\n    itemIcon = <></>\r\n    if (icons && icons[k]) {\r\n      itemIcon = icons[k]\r\n    }\r\n\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: itemIcon,\r\n        key: `${itemName}-${item.id}`,\r\n        label: item.name,\r\n        value: item.id,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseAssigneddOptions = (itemName: string, options: TAssigneeToResp[]): any => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.userId}`,\r\n        label: item.name,\r\n        value: item.userId,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseLocationTcOptions = (itemName: string, options: TLocationTcResp[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.tcId}`,\r\n        label: item.name,\r\n        value: item.tcId,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseRelatedListingOptions = (itemName: string, options: TRelatedDealListingResp[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.id}`,\r\n        label: `${item.id} ${item.name} ${item.phone} ${item.address}`,\r\n        value: item.id,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseRelatedDealOptions = (itemName: string, options: TRelatedDealListingResp[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.id}`,\r\n        label: `${item.id} ${item.name} - ${item.phone} - ${item.listingType} - ${item.propertyType} - ${item.price} `,\r\n        value: item.id,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseZoneOptions = (itemName: string, options: TZoneResp[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.departmentId}`,\r\n        label: `${item.departmentName}`,\r\n        value: item.departmentId,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseTeamOptions = (itemName: string, options: TZoneResp[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.departmentId}`,\r\n        label: `${item.departmentName}`,\r\n        value: item.departmentId,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseDepartmentOptions = (itemName: string, options: TZoneResp[]): IOption[] => {\r\n  let parseItems: IOption[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        icon: '',\r\n        key: `${itemName}-${item.departmentId}`,\r\n        label: `${item.departmentName}`,\r\n        value: item.departmentId,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseCalendarItem = (data: IResponseTask[], groupBy: number, fromDate?: Date, toDate?: Date): Event[] => {\r\n  let parseItems: Event[] = []\r\n\r\n  data.map((item) => {\r\n    let end = moment(item.completionTimeTo).toDate()\r\n    let start = moment(item.completionTimeFrom).toDate()\r\n    if (item.completionAllDay) {\r\n      end = moment(getEndDate(moment(item.completionTimeDate).toDate(), 'day')).toDate()\r\n      start = moment(getStartDate(moment(item.completionTimeDate).toDate(), 'day')).toDate()\r\n    }\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        allDay: item.completionAllDay,\r\n        end,\r\n        resource: { ...item, groupBy, fromDate, toDate },\r\n        start,\r\n        title: item.name,\r\n      },\r\n    ]\r\n\r\n    return item\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const parseGroupByOptions = (options: TGroupBy[]): IOption[] => {\r\n  let parseItems: TGroupBy[] = []\r\n\r\n  options.map((item) => {\r\n    parseItems = [\r\n      ...parseItems,\r\n      {\r\n        key: `group-by-${item.value}`,\r\n        label: item.label,\r\n        value: item.value,\r\n      },\r\n    ]\r\n\r\n    return parseItems\r\n  })\r\n\r\n  return parseItems\r\n}\r\n\r\nexport const renderStatusColor = (status: number): string => {\r\n  let clsEventStatus = ''\r\n  if (status === TaskStatusType.COMPLETED) {\r\n    clsEventStatus = 'completed'\r\n  }\r\n  if (status === TaskStatusType.INCOMPLETE) {\r\n    clsEventStatus = 'in-completed'\r\n  }\r\n  if (status === TaskStatusType.CANCELED) {\r\n    clsEventStatus = 'cancel'\r\n  }\r\n\r\n  return clsEventStatus\r\n}\r\nexport const MyCustomHeader = ({ date }: HeaderProps): JSX.Element => {\r\n  const toCapitalStr = upperFirst(moment(date).format('dddd'))\r\n  return <Typography className=\"custom-header\" component=\"div\">{toCapitalStr}</Typography>\r\n}\r\n\r\nexport const MyEvent = (props: any): JSX.Element => {\r\n  const { event } = props\r\n  const { resource } = event\r\n\r\n  const renderTooltipLabel = `${renderEventTime(resource.completionTimeFrom, resource.completionTimeTo, resource.completionAllDay)} ${resource.name}`\r\n\r\n  return (\r\n    <Tooltip title={renderTooltipLabel} aria-label={renderTooltipLabel}>\r\n      <Typography className=\"event-item\" component=\"div\">\r\n        <Typography className={`status-highlight ${renderStatusColor(resource.status)}`} component=\"span\">\r\n          &nbsp;\r\n        </Typography>\r\n        <Typography className=\"priority\" component=\"div\">\r\n          {renderPriority(resource.priority)}\r\n        </Typography>\r\n        <Typography className=\"time\" component=\"span\">\r\n          {renderEventTime(resource.completionTimeFrom, resource.completionTimeTo, resource.completionAllDay)}\r\n        </Typography>\r\n        <Typography className=\"title\" component=\"span\">\r\n          {resource.name}\r\n        </Typography>\r\n      </Typography>\r\n    </Tooltip>\r\n  )\r\n}\r\nexport const MyMoreEvent = (props: any): JSX.Element => {\r\n  const { events, currentMode } = props\r\n\r\n  const handleClickTaskName = ({ id }: { id: number }): void => {\r\n    localStorage.setItem(\r\n      'view_detail_task_tracking',\r\n      JSON.stringify({\r\n        source: 'calendar-view-more',\r\n        mode: currentMode || '',\r\n      }),\r\n    )\r\n\r\n    window.open(`/calendar-task/detail/${id}`, '_blank')\r\n  }\r\n\r\n  const useStyles = makeStyles(() => ({\r\n    taskName: {\r\n      cursor: 'pointer',\r\n      marginRight: '6px',\r\n    },\r\n  }))\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Typography className=\"event-item-list\" component=\"div\">\r\n      {events.map((event: Event) => {\r\n        const { resource } = event\r\n\r\n        return (\r\n          <Typography key={`event-item-${resource.id}`} className=\"event-item\" component=\"div\">\r\n            <Typography className=\"priority\" component=\"div\">\r\n              {renderPriority(resource.priority)}\r\n            </Typography>\r\n            <Typography className=\"time\" component=\"div\">\r\n              {renderEventTime(resource.completionTimeFrom, resource.completionTimeTo, resource.completionAllDay, true)}\r\n            </Typography>\r\n            <Typography\r\n              onClick={() => handleClickTaskName({ id: resource.id })}\r\n              className={classes.taskName}\r\n              component=\"a\"\r\n            >\r\n              {resource.name}\r\n            </Typography>\r\n            <Typography className=\"status-highlight-container\" component=\"div\">\r\n              {renderTrangThai(resource.status)}\r\n            </Typography>\r\n          </Typography>\r\n        )\r\n      })}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport const CustomToolbar = (props: TToolbar): JSX.Element | null => {\r\n  const { mode } = props\r\n\r\n  const useStyles = makeStyles(() => ({\r\n    navigateButton: {\r\n      padding: '5px',\r\n      minWidth: 'initial'\r\n    },\r\n    navigateButtonRight: {\r\n      marginRight: '16px'\r\n    },\r\n    todayButton: {\r\n      padding: '5px 15px'\r\n    },\r\n  }))\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  // not render Toolbar Navigation if mode is agenda\r\n  if (mode === 'agenda') {\r\n    return null\r\n  }\r\n\r\n  const { toolbar, prevView, onHandleNavigate } = props\r\n  const { date, label, view, onNavigate } = toolbar\r\n\r\n  const getLabel = convertDateText(label)\r\n\r\n  const goToBack = (): void => {\r\n    const dateToNavigate = date.setDate(date.getDate())\r\n\r\n    if (view === 'day') {\r\n      date.setDate(date.getDate() - 1)\r\n    }\r\n    if (view === 'week') {\r\n      date.setDate(date.getDate() - 7)\r\n    }\r\n    if (view === 'month') {\r\n      date.setMonth(date.getMonth() - 1)\r\n      // dateToNavigate = date.setMonth(date.getMonth())\r\n    }\r\n\r\n    const { fromDate, toDate } = renderDateFromTo({ date, prevView, view })\r\n    onNavigate('PREV', dateToNavigate)\r\n    onHandleNavigate({ fromDate, toDate })\r\n  }\r\n\r\n  const goToNext = (): void => {\r\n    const dateToNavigate = date.setDate(date.getDate())\r\n    if (view === 'day') {\r\n      date.setDate(date.getDate() + 1)\r\n    }\r\n    if (view === 'week') {\r\n      date.setDate(date.getDate() + 7)\r\n    }\r\n    if (view === 'month') {\r\n      date.setMonth(date.getMonth() + 1)\r\n      // dateToNavigate = date.setMonth(date.getMonth())\r\n    }\r\n\r\n    const { fromDate, toDate } = renderDateFromTo({ date, prevView, view })\r\n    onNavigate('NEXT', dateToNavigate)\r\n    onHandleNavigate({ fromDate, toDate })\r\n  }\r\n\r\n  const goToCurrent = (): void => {\r\n    date.setDate(date.getDate())\r\n    const { fromDate, toDate } = renderDateFromTo({ date, prevView: 'day', view: 'agenda' })\r\n\r\n    onNavigate('TODAY', date)\r\n    onHandleNavigate({ fromDate, toDate })\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Typography className=\"toolbar-container\" component=\"div\">\r\n        <TButton className={classes.navigateButton} startIcon={<NavigateBeforeIcon />} variant=\"outlined\" onClick={goToBack} />\r\n        <TButton className={classes.todayButton} label={LABEL_TODAY} variant=\"outlined\" onClick={goToCurrent} />\r\n        <TButton className={`${classes.navigateButton} ${classes.navigateButtonRight}`} startIcon={<NavigateNextIcon />} variant=\"outlined\" onClick={goToNext} />\r\n\r\n        <Typography component=\"label\" className=\"label-date\">\r\n          {getLabel}\r\n        </Typography>\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n}\r\n","import { PLACEHOLDER_JOB_TYPE } from 'constants/common'\r\nimport { currentTime, endDay, startDay, TODO_TASK_DEFAULT_VALUE } from 'constants/defaultValue'\r\n\r\nimport { IResponseTask } from 'model/task'\r\n\r\nimport { TAssigneeToResp, TTeamResp, TZoneResp } from 'services/api/GetOptions.d'\r\n\r\nimport { IToDoTask } from 'utils/form'\r\n\r\nexport const CategoryConfig = [\r\n  {\r\n    categoryId: 1,\r\n    categoryName: 'BPO Comment',\r\n    description: null,\r\n    platform: null,\r\n    placeHolderTextInput: null,\r\n    dataTypeTextInput: 'Tag',\r\n    parentId: null,\r\n    createdBy: null,\r\n    createdDate: 1613724529000,\r\n    updatedDate: null,\r\n    lsoDraftListingCommentId: null,\r\n    dataTextInputs: null,\r\n    dataPhotos: null,\r\n    comments: null,\r\n    showPhoto: false,\r\n    showTextInput: true,\r\n    requiredPhoto: true,\r\n    requiredTextInput: true,\r\n    requiredTakePhoto: false,\r\n  },\r\n  {\r\n    categoryId: 24,\r\n    categoryName: 'BPO Comment test',\r\n    description: null,\r\n    platform: null,\r\n    placeHolderTextInput: null,\r\n    dataTypeTextInput: 'Tag',\r\n    parentId: null,\r\n    createdBy: null,\r\n    createdDate: 1615359897000,\r\n    updatedDate: null,\r\n    lsoDraftListingCommentId: null,\r\n    dataTextInputs: null,\r\n    dataPhotos: null,\r\n    comments: null,\r\n    showPhoto: true,\r\n    showTextInput: true,\r\n    requiredPhoto: true,\r\n    requiredTextInput: false,\r\n    requiredTakePhoto: false,\r\n  },\r\n]\r\n\r\nexport const CommentSuggestionResponse = [\r\n  {\r\n    categoryId: 1,\r\n    comments: [\r\n      {\r\n        id: 1,\r\n        comment: 'Nhà tóp nhẹ',\r\n        unsignedComment: 'Nha top nhe',\r\n        commentUsed: 10,\r\n        createdDate: 1615284551000,\r\n      },\r\n      {\r\n        id: 4,\r\n        comment: 'Nhà cũ có thể sửa chữa lại, hoặc xây mới. Đường hơn 5m thông thoáng',\r\n        unsignedComment: 'Nha cu co the sua chua lai, hoac xay moi. Duong hon 5m thong thoang',\r\n        commentUsed: 9,\r\n        createdDate: 1615284557000,\r\n      },\r\n      {\r\n        id: 6,\r\n        comment: 'Đang cho thuê có sẵn nguồn thu nhập. Vị trí đẹp tương lai tăng giá cao, cho thuê tốt',\r\n        unsignedComment: 'Dang cho thue co san nguon thu nhap. Vi tri dep tuong lai tang gia cao, cho thue tot',\r\n        commentUsed: 6,\r\n        createdDate: 1615284559000,\r\n      },\r\n      {\r\n        id: 9,\r\n        comment:\r\n          'Nhà còn khá mới, kết cấu 1 trệt + 1 lửng + 2 lầu + 1ST (4pn + 5wc) nhà nội thất gỗ. Trên mái nhà có cho thuê trụ phát sóng có thu nhập thụ động thêm hằng tháng',\r\n        unsignedComment:\r\n          'Nha con kha moi, ket cau 1 tret + 1 lung + 2 lau + 1ST (4pn + 5wc) nha noi that go. Tren mai nha co cho thue tru phat song co thu nhap thu dong them hang thang',\r\n        commentUsed: 4,\r\n        createdDate: 1615284642000,\r\n      },\r\n      {\r\n        id: 2,\r\n        comment: 'Nhà đúc giả',\r\n        unsignedComment: 'Nha duc gia',\r\n        commentUsed: 3,\r\n        createdDate: 1615284552000,\r\n      },\r\n      {\r\n        id: 5,\r\n        comment: 'Nhà đẹp vào ở liền',\r\n        unsignedComment: 'Nha dep vao o lien',\r\n        commentUsed: 3,\r\n        createdDate: 1615284558000,\r\n      },\r\n      {\r\n        id: 15,\r\n        comment:\r\n          'Giá hơi cao, hẻm 4m nhưng ko thẳng, nhà 2 sẹc, lộ giới bị xén nghiêng ko phù hợp phong thủy, bề ngang nhỏ',\r\n        unsignedComment:\r\n          'Gia hoi cao, hem 4m nhung ko thang, nha 2 sec, lo gioi bi xen nghieng ko phu hop phong thuy, be ngang nho',\r\n        commentUsed: 2,\r\n        createdDate: 1615284935000,\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport const TCDataResponse = [\r\n  {\r\n    tcId: 1,\r\n    tcName: 'Test#1',\r\n  },\r\n]\r\n\r\nexport const DefaultData = {\r\n  icon: '',\r\n  name: '-- Chọn --',\r\n  id: '',\r\n}\r\nexport const JobTypeResponse = [{ ...DefaultData, name: PLACEHOLDER_JOB_TYPE }]\r\n\r\nexport const AssignerResponse: TAssigneeToResp[] = [{ name: 'Chọn nhân viên', userId: '', userName: '' }]\r\nexport const ZoneResponse: TZoneResp[] = [{ departmentId: '', departmentName: '-- Tất cả Zone --' }]\r\nexport const TeamResponse: TTeamResp[] = [{ departmentId: '', departmentName: '-- Tất cả Team --' }]\r\nexport const DepartmentResponse: TTeamResp[] = [{ departmentId: '', departmentName: '-- Tất cả Phòng ban --' }]\r\n\r\nexport const attachedFiles = {\r\n  mFile: [\r\n    {\r\n      id: 'file-1',\r\n      size: 64553,\r\n      url: '/aaa/bbb/cc/file1.ppt',\r\n      name: 'test 1',\r\n      type: 'ppt',\r\n    },\r\n    {\r\n      id: 'file-2',\r\n      size: 64553,\r\n      url: '/aaa/bbb/dd/file2.excel',\r\n      name: 'test 2',\r\n      type: 'excel',\r\n    },\r\n  ],\r\n  image: [\r\n    {\r\n      id: 'image-1',\r\n      size: 64553,\r\n      url: `${process.env.REACT_APP_PUBLIC_IMAGE_PATH}/image-property-1.jpeg`,\r\n      name: 'test 3',\r\n      type: 'image',\r\n    },\r\n    {\r\n      id: 'image-2',\r\n      size: 64553,\r\n      url: `${process.env.REACT_APP_PUBLIC_IMAGE_PATH}/image-property-2.jpeg`,\r\n      name: 'test 3',\r\n      type: 'image',\r\n    },\r\n  ],\r\n}\r\nexport const TODO_TASK_EDIT_VALUE: IToDoTask = TODO_TASK_DEFAULT_VALUE\r\n\r\nexport const myEventsList: IResponseTask[] = [\r\n  {\r\n    completionAllDay: false,\r\n    completionTimeDate: currentTime,\r\n    completionTimeFrom: startDay,\r\n    completionTimeTo: endDay,\r\n    createdDate: currentTime,\r\n    id: 27,\r\n    name: 'Admin tao task dev 01 ',\r\n    priority: 1,\r\n    status: 1,\r\n    type: 3,\r\n  },\r\n]\r\nconst now = new Date()\r\nexport const myEventsListEExp = [\r\n  {\r\n    id: 0,\r\n    title: 'All Day Event very long title',\r\n    allDay: true,\r\n    start: new Date(2021, 3, 0),\r\n    end: new Date(2021, 3, 1),\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Long Event',\r\n    start: new Date(2021, 3, 7),\r\n    end: new Date(2021, 3, 10),\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: 'DTS STARTS',\r\n    start: new Date(2022, 2, 13, 5, 0, 0),\r\n    end: new Date(2022, 2, 20, 10, 10, 0),\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    title: 'DTS ENDS',\r\n    start: new Date(2022, 10, 6, 0, 0, 0),\r\n    end: new Date(2022, 10, 13, 0, 0, 0),\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    title: 'Some Event',\r\n    start: new Date(2021, 3, 9, 0, 0, 0),\r\n    end: new Date(2021, 3, 10, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Conference',\r\n    start: new Date(2021, 3, 11),\r\n    end: new Date(2021, 3, 13),\r\n    desc: 'Big conference for important people',\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Meeting',\r\n    start: new Date(2021, 3, 12, 10, 30, 0, 0),\r\n    end: new Date(2021, 3, 12, 12, 30, 0, 0),\r\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Lunch',\r\n    start: new Date(2021, 3, 12, 12, 0, 0, 0),\r\n    end: new Date(2021, 3, 12, 13, 0, 0, 0),\r\n    desc: 'Power lunch',\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Meeting',\r\n    start: new Date(2021, 3, 12, 14, 0, 0, 0),\r\n    end: new Date(2021, 3, 12, 15, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 9,\r\n    title: 'Happy Hour',\r\n    start: new Date(2021, 3, 12, 17, 0, 0, 0),\r\n    end: new Date(2021, 3, 12, 17, 30, 0, 0),\r\n    desc: 'Most important meal of the day',\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Dinner',\r\n    start: new Date(2021, 3, 12, 20, 0, 0, 0),\r\n    end: new Date(2021, 3, 12, 21, 0, 0, 0),\r\n  },\r\n  {\r\n    id: 11,\r\n    userId: 1,\r\n    title: 'Planning Meeting with Paige',\r\n    start: new Date(2021, 9, 13, 8, 0, 0),\r\n    end: new Date(2021, 9, 13, 10, 30, 0),\r\n  },\r\n  {\r\n    id: 11.1,\r\n    userId: 1,\r\n    title: 'Inconvenient Conference Call',\r\n    start: new Date(2021, 9, 13, 9, 30, 0),\r\n    end: new Date(2021, 9, 13, 12, 0, 0),\r\n  },\r\n  {\r\n    id: 11.2,\r\n    userId: 1,\r\n    title: \"Project Kickoff - Lou's Shoes\",\r\n    start: new Date(2021, 9, 13, 11, 30, 0),\r\n    end: new Date(2021, 9, 13, 14, 0, 0),\r\n  },\r\n  {\r\n    id: 11.3,\r\n    userId: 1,\r\n    title: 'Quote Follow-up - Tea by Tina',\r\n    start: new Date(2021, 9, 13, 15, 30, 0),\r\n    end: new Date(2021, 9, 13, 16, 0, 0),\r\n  },\r\n  {\r\n    id: 12,\r\n    userId: 2,\r\n    title: 'Late Night Event',\r\n    start: new Date(2021, 9, 17, 19, 30, 0),\r\n    end: new Date(2021, 9, 18, 2, 0, 0),\r\n  },\r\n  {\r\n    id: 12.5,\r\n    title: 'Late Same Night Event',\r\n    start: new Date(2021, 3, 17, 19, 30, 0),\r\n    end: new Date(2021, 3, 17, 23, 30, 0),\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Multi-day Event',\r\n    start: new Date(2021, 3, 20, 19, 30, 0),\r\n    end: new Date(2021, 3, 22, 2, 0, 0),\r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Today',\r\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\r\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'Point in Time Event',\r\n    start: now,\r\n    end: now,\r\n  },\r\n  {\r\n    id: 16,\r\n    title: 'Video Record',\r\n    start: new Date(2021, 3, 14, 15, 30, 0),\r\n    end: new Date(2021, 3, 14, 19, 0, 0),\r\n  },\r\n  {\r\n    id: 17,\r\n    title: 'Dutch Song Producing',\r\n    start: new Date(2021, 3, 14, 16, 30, 0),\r\n    end: new Date(2021, 3, 14, 20, 0, 0),\r\n  },\r\n  {\r\n    id: 18,\r\n    title: 'Itaewon Halloween Meeting',\r\n    start: new Date(2021, 3, 14, 16, 30, 0),\r\n    end: new Date(2021, 3, 14, 17, 30, 0),\r\n  },\r\n  {\r\n    id: 19,\r\n    title: 'Online Coding Test',\r\n    start: new Date(2021, 3, 14, 17, 30, 0),\r\n    end: new Date(2021, 3, 14, 20, 30, 0),\r\n  },\r\n  {\r\n    id: 20,\r\n    title: 'An overlapped Event',\r\n    start: new Date(2021, 3, 14, 17, 0, 0),\r\n    end: new Date(2021, 3, 14, 18, 30, 0),\r\n  },\r\n  {\r\n    id: 21,\r\n    title: 'Phone Interview',\r\n    start: new Date(2021, 3, 14, 17, 0, 0),\r\n    end: new Date(2021, 3, 14, 18, 30, 0),\r\n  },\r\n  {\r\n    id: 22,\r\n    title: 'Cooking Class',\r\n    start: new Date(2021, 3, 14, 17, 30, 0),\r\n    end: new Date(2021, 3, 14, 19, 0, 0),\r\n  },\r\n  {\r\n    id: 23,\r\n    title: 'Go to the gym',\r\n    start: new Date(2021, 1, 14, 18, 30, 0),\r\n    end: new Date(2021, 3, 14, 20, 0, 0),\r\n  },\r\n]\r\nexport const events = [\r\n  {\r\n    name: 'All Day Event very long title',\r\n    allDay: true,\r\n    start: new Date(2015, 3, 0),\r\n    end: new Date(2015, 3, 1),\r\n  },\r\n  {\r\n    name: 'Long Event',\r\n    start: new Date(2015, 3, 7),\r\n    end: new Date(2015, 3, 10),\r\n  },\r\n\r\n  {\r\n    name: 'DTS STARTS',\r\n    start: new Date(2016, 2, 13, 0, 0, 0),\r\n    end: new Date(2016, 2, 20, 0, 0, 0),\r\n  },\r\n\r\n  {\r\n    name: 'DTS ENDS',\r\n    start: new Date(2016, 10, 6, 0, 0, 0),\r\n    end: new Date(2016, 10, 13, 0, 0, 0),\r\n  },\r\n\r\n  {\r\n    name: 'Some Event',\r\n    start: new Date(2015, 3, 9, 0, 0, 0),\r\n    end: new Date(2015, 3, 9, 0, 0, 0),\r\n  },\r\n  {\r\n    name: 'Conference',\r\n    start: new Date(2015, 3, 11),\r\n    end: new Date(2015, 3, 13),\r\n    desc: 'Big conference for important people',\r\n  },\r\n  {\r\n    name: 'Meeting',\r\n    start: new Date(2015, 3, 12, 10, 30, 0, 0),\r\n    end: new Date(2015, 3, 12, 12, 30, 0, 0),\r\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\r\n  },\r\n  {\r\n    name: 'Lunch',\r\n    start: new Date(2015, 3, 12, 12, 0, 0, 0),\r\n    end: new Date(2015, 3, 12, 13, 0, 0, 0),\r\n    desc: 'Power lunch',\r\n  },\r\n  {\r\n    name: 'Meeting',\r\n    start: new Date(2015, 3, 12, 14, 0, 0, 0),\r\n    end: new Date(2015, 3, 12, 15, 0, 0, 0),\r\n  },\r\n  {\r\n    name: 'Happy Hour',\r\n    start: new Date(2015, 3, 12, 17, 0, 0, 0),\r\n    end: new Date(2015, 3, 12, 17, 30, 0, 0),\r\n    desc: 'Most important meal of the day',\r\n  },\r\n  {\r\n    name: 'Dinner',\r\n    start: new Date(2015, 3, 12, 20, 0, 0, 0),\r\n    end: new Date(2015, 3, 12, 21, 0, 0, 0),\r\n  },\r\n  {\r\n    name: 'Birthday Party',\r\n    start: new Date(2015, 3, 13, 7, 0, 0),\r\n    end: new Date(2015, 3, 13, 10, 30, 0),\r\n  },\r\n  {\r\n    name: 'Birthday Party 2',\r\n    start: new Date(2015, 3, 13, 7, 0, 0),\r\n    end: new Date(2015, 3, 13, 10, 30, 0),\r\n  },\r\n  {\r\n    name: 'Birthday Party 3',\r\n    start: new Date(2015, 3, 13, 7, 0, 0),\r\n    end: new Date(2015, 3, 13, 10, 30, 0),\r\n  },\r\n  {\r\n    name: 'Late Night Event',\r\n    start: new Date(2015, 3, 17, 19, 30, 0),\r\n    end: new Date(2015, 3, 18, 2, 0, 0),\r\n  },\r\n  {\r\n    name: 'Multi-day Event',\r\n    start: new Date(2015, 3, 20, 19, 30, 0),\r\n    end: new Date(2015, 3, 22, 2, 0, 0),\r\n  },\r\n]\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewJobTypeProps } from 'modules/IViewJobType/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { getTypeList } from 'services/api/GetOptions'\r\n\r\nimport { parseOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\n\r\nimport { JobTypeResponse } from 'constants/mockupData'\r\nimport { LABEL_JOB_TYPE, RESPONSE_GET_SUCCESS } from 'constants/common'\r\n\r\nexport const IViewJobType = (props: IViewJobTypeProps): JSX.Element => {\r\n  const { value } = props\r\n\r\n  const itemName = 'type'\r\n\r\n  const defItems = parseOptions(itemName, JobTypeResponse)\r\n  const [optionItems, setOptionItems] = useState<IOption[]>(defItems)\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const items = await getTypeList()\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        let parseData = parseOptions(itemName, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={LABEL_JOB_TYPE}\r\n      value={<TTitle className=\"item-value\" title={<span>{value}</span>} />}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewStatusProps } from 'modules/IViewStatus/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\n\r\nimport { getStatusList } from 'services/api/GetOptions'\r\n\r\nimport { parseOptions, renderTrangThai } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\n\r\nimport { LABEL_STATUS, RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { JobTypeResponse } from 'constants/mockupData'\r\n\r\nexport const IViewStatus = (props: IViewStatusProps): JSX.Element => {\r\n  const { value } = props\r\n  const [title, setTitle] = useState('')\r\n\r\n  const itemName = 'status'\r\n\r\n  const defItems = parseOptions(itemName, JobTypeResponse)\r\n  const [optionItems, setOptionItems] = useState<IOption[]>(defItems)\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const items = await getStatusList()\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        let parseData = parseOptions(itemName, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const filterItem = optionItems.filter((item) => item.value === value)\r\n    if (filterItem.length > 0) {\r\n      setTitle(filterItem[0].label)\r\n    }\r\n  }, [optionItems])\r\n\r\n  return <TLabelValue className=\"no-padding\" label={LABEL_STATUS} value={renderTrangThai(value, title)} />\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewPriorityProps } from 'modules/IViewPriority/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\n\r\nimport { getTaskPriorityList } from 'services/api/GetOptions'\r\n\r\nimport { parseOptions, renderPriority } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\n\r\nimport { LABEL_PRIORITY, RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { JobTypeResponse } from 'constants/mockupData'\r\n\r\nexport const IViewPriority = (props: IViewPriorityProps): JSX.Element => {\r\n  const { value } = props\r\n  const [title, setTitle] = useState('')\r\n\r\n  const itemName = 'priority'\r\n\r\n  const defItems = parseOptions(itemName, JobTypeResponse)\r\n  const [optionItems, setOptionItems] = useState<IOption[]>(defItems)\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const items = await getTaskPriorityList()\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        let parseData = parseOptions(itemName, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const filterItem = optionItems.filter((item) => item.value === value)\r\n    if (filterItem.length > 0) {\r\n      setTitle(filterItem[0].label)\r\n    }\r\n  }, [optionItems])\r\n\r\n  return <TLabelValue className=\"no-padding\" label={LABEL_PRIORITY} value={renderPriority(value, title)} />\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nimport { IViewCompletedTimeProps } from 'modules/IViewCompletedTime/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\n\r\nimport { DATE_FORMAT_MAIN, LABEL_COMPLETED_TIME, TIME_FORMAT } from 'constants/common'\r\n\r\nimport { renderDateTime } from 'utils/renderComponent'\r\nimport { currentTime } from 'constants/defaultValue'\r\n\r\nexport const IViewCompletedTime = (props: IViewCompletedTimeProps): JSX.Element => {\r\n  const { isAllDay, timeDate, timeFrom, timeTo } = props\r\n  let classIsThePast = ''\r\n  // if selected allday\r\n  if (timeFrom && timeFrom < currentTime) {\r\n    classIsThePast = 'is-the-past'\r\n  }\r\n\r\n  const formatDate = moment(timeDate).format(DATE_FORMAT_MAIN)\r\n  let formatTimeFrom = null\r\n  let formatTimeTo = null\r\n\r\n  let displayDateTime = formatDate\r\n  if (!isAllDay) {\r\n    if (timeFrom && timeFrom < currentTime) {\r\n      classIsThePast = 'is-the-past'\r\n    }\r\n\r\n\r\n    formatTimeFrom = moment(timeFrom).format(TIME_FORMAT)\r\n    formatTimeTo = moment(timeTo).format(TIME_FORMAT)\r\n\r\n    displayDateTime = `${formatDate} ${formatTimeFrom} - ${formatTimeTo}`\r\n  }\r\n\r\n  return <TLabelValue className={`no-padding ${classIsThePast}`} label={LABEL_COMPLETED_TIME} value={renderDateTime(displayDateTime)} />\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewReminderProps } from 'modules/IViewReminder/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { getReminderList } from 'services/api/GetOptions'\r\n\r\nimport { parseOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\n\r\nimport { LABEL_REMINDER, RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { JobTypeResponse } from 'constants/mockupData'\r\n\r\nexport const IViewReminder = (props: IViewReminderProps): JSX.Element => {\r\n  const { value } = props\r\n  const [title, setTitle] = useState('')\r\n\r\n  const itemName = 'reminderTime'\r\n\r\n  const defItems = parseOptions(itemName, JobTypeResponse)\r\n  const [optionItems, setOptionItems] = useState<IOption[]>(defItems)\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const items = await getReminderList()\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        let parseData = parseOptions(itemName, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const filterItem = optionItems.filter((item) => item.value === value)\r\n    if (filterItem.length > 0) {\r\n      setTitle(filterItem[0].label)\r\n    }\r\n  }, [optionItems])\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={LABEL_REMINDER}\r\n      value={<TTitle className=\"item-value\" title={title} />}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { IViewDescriptionProps } from 'modules/IViewDescription/index.d'\r\n\r\nimport { LABEL_DESCRIPTION } from 'constants/common'\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nexport const IViewDescription = (props: IViewDescriptionProps): JSX.Element => {\r\n  const { value } = props\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={LABEL_DESCRIPTION}\r\n      value={<TTitle className=\"item-value\" title={<p>{value}</p>} variant=\"subtitle1\" />}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewRelatedToProps } from 'modules/IViewRelatedTo/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { getRelatedList } from 'services/api/GetOptions'\r\n\r\nimport { LABEL_RELATED_TO, RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { RELATED_TYPE_IS_DEAL } from 'constants/defaultValue'\r\nimport { renderLienQuanDen } from 'utils/renderComponent'\r\n\r\nexport const IViewRelatedTo = (props: IViewRelatedToProps): JSX.Element => {\r\n  const { relatedTo, relatedType } = props\r\n  const [data, setData] = useState({\r\n    id: '',\r\n    name: '',\r\n    label: 'Listing',\r\n  })\r\n\r\n  let isDeal = false\r\n  if (relatedType === RELATED_TYPE_IS_DEAL) {\r\n    isDeal = true\r\n  }\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const resp = await getRelatedList(isDeal, relatedTo)\r\n\r\n    if (resp && resp.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (Object.keys(resp.data).length > 0) {\r\n        const dataConvert = {\r\n          ...data,\r\n          id: resp.data.id,\r\n          name: resp.data.name,\r\n        }\r\n        if (isDeal) {\r\n          dataConvert.label = 'Deal'\r\n        }\r\n        // update options\r\n        setData(dataConvert)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={LABEL_RELATED_TO}\r\n      value={<TTitle className=\"item-value\" title={renderLienQuanDen(data)} />}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { IViewLocationProps } from 'modules/IViewLocation/index.d'\r\n\r\nimport { LABEL_LOCATION } from 'constants/common'\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nexport const IViewLocation = (props: IViewLocationProps): JSX.Element => {\r\n  const { value } = props\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={LABEL_LOCATION}\r\n      value={<TTitle className=\"item-value\" title={<span>{value}</span>} />}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { IViewCreatedDateProps } from 'modules/IViewCreatedDate/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { MOMENT_DATE_FORMAT, TIME_FORMAT } from 'constants/common'\r\n\r\nexport const IViewCreatedDate = (props: IViewCreatedDateProps): JSX.Element => {\r\n  const { label, value } = props\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={label}\r\n      value={\r\n        <TTitle\r\n          className=\"item-value\"\r\n          title={<span>{moment(value).format(`${MOMENT_DATE_FORMAT} ${TIME_FORMAT}`)}</span>}\r\n        />\r\n      }\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewAssignerProps } from 'modules/IViewAssigner/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { AssignerResponse } from 'constants/mockupData'\r\nimport { IOption } from 'utils/form'\r\nimport { parseAssigneddOptions } from 'utils/renderComponent'\r\nimport { getAssigneeToList } from 'services/api/GetOptions'\r\n\r\nexport const IViewAssigner = (props: IViewAssignerProps): JSX.Element => {\r\n  const { label, value, assignorName } = props\r\n  const [title, setTitle] = useState(assignorName || '')\r\n\r\n  const itemName = 'createdBy'\r\n\r\n  const defItems = parseAssigneddOptions(itemName, AssignerResponse)\r\n  const [optionItems, setOptionItems] = useState<IOption[]>(defItems.parseItems)\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const items = await getAssigneeToList()\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        const parseData = parseAssigneddOptions(itemName, items.data)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [optionItems])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (optionItems?.length) {\r\n      const matchedUser = optionItems.find(item => item.value === value)\r\n\r\n      setTitle(matchedUser?.label || assignorName || '')\r\n    }\r\n  }, [optionItems])\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={label}\r\n      value={<TTitle className=\"item-value\" title={<span>{title}</span>} />}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport { IViewAssignedToProps } from 'modules/IViewAssignedTo/index.d'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { AssignerResponse } from 'constants/mockupData'\r\nimport { IOption } from 'utils/form'\r\nimport { parseAssigneddOptions } from 'utils/renderComponent'\r\nimport { getAssigneeToList } from 'services/api/GetOptions'\r\n\r\nexport const IViewAssignedTo = (props: IViewAssignedToProps): JSX.Element => {\r\n  const { label, value, assignedToName } = props\r\n  const [title, setTitle] = useState(assignedToName || '')\r\n\r\n  const itemName = 'assignedTo'\r\n\r\n  const defItems = parseAssigneddOptions(itemName, AssignerResponse)\r\n  const [optionItems, setOptionItems] = useState<IOption[]>(defItems)\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    const items = await getAssigneeToList()\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        const parseData = parseAssigneddOptions(itemName, items.data)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [optionItems])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (optionItems?.length) {\r\n      const matchedUser = optionItems.find(item => item.value === value)\r\n\r\n      setTitle(matchedUser?.label || assignedToName || '')\r\n    }\r\n  }, [optionItems])\r\n\r\n  return (\r\n    <TLabelValue\r\n      className=\"no-padding\"\r\n      label={label}\r\n      value={<TTitle className=\"item-value\" title={<span>{title}</span>} />}\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, IconButton, Toolbar, Typography } from '@material-ui/core'\r\n\r\nimport { ICommentForm } from 'components/TCommentForm/index.d'\r\n\r\nimport { CommentView } from 'my-comment-category/lib'\r\n\r\nimport { BTN_CLOSE_COMMENT, BTN_SAVE } from 'constants/common'\r\n\r\nimport { ITaskCommentData } from 'utils/form'\r\nimport { Category } from 'model/comment'\r\n\r\nimport 'components/TCommentForm/styles.scss'\r\n\r\nexport const TCommentForm = (props: ICommentForm): JSX.Element => {\r\n  const {\r\n    displayModal,\r\n    id,\r\n    title,\r\n    handleSubmitForm,\r\n    handleCloseModal,\r\n    createdBy,\r\n    categoryConfig,\r\n    listCommentSuggestion,\r\n  } = props\r\n\r\n  const [errorsConfig, setErrorsConfig] = useState<any>([])\r\n\r\n  const [dataPost, setDataPost] = useState<ITaskCommentData>({\r\n    dataId: id,\r\n    comments: [],\r\n    createdBy,\r\n  })\r\n\r\n  useEffect(() => {\r\n    const errorsCfg = categoryConfig.map((config) => ({\r\n      requiredInput: config.showTextInput ? !!config.requiredTextInput : false,\r\n      errorInput: false,\r\n      requiredImage: config.showPhoto ? !!config.requiredPhoto : false,\r\n      errorImage: false,\r\n    }))\r\n    setErrorsConfig(errorsCfg)\r\n  }, [categoryConfig])\r\n\r\n  const handleSubmitData = (): void => {\r\n    const validation = {\r\n      config: false,\r\n    }\r\n    const errorsConfigAfterCheck = errorsConfig.map((item: any, index: number) => ({\r\n      ...item,\r\n      errorInput: item.requiredInput ? dataPost.comments[index].comments.length === 0 : false,\r\n      errorImage: item.requiredImage ? dataPost.comments[index].photos.length === 0 : false,\r\n    }))\r\n    setErrorsConfig(errorsConfigAfterCheck)\r\n\r\n    validation.config = !!errorsConfigAfterCheck.find((item: any) => item.errorInput || item.errorImage)\r\n\r\n    if (!validation.config) {\r\n      handleSubmitForm(dataPost)\r\n    }\r\n  }\r\n  const onDataCommentChange = (data: Category[]): void => {\r\n    if (data && data.length) {\r\n      const errorsConfigAfterCheck = errorsConfig.map((item: any, index: number) => ({\r\n        ...item,\r\n        errorInput: data[index].comments.length > 0 ? false : item.errorInput,\r\n        errorImage: data[index].photos.length > 0 ? false : item.errorImage,\r\n      }))\r\n      setErrorsConfig(errorsConfigAfterCheck)\r\n      setDataPost({ ...dataPost, comments: data })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      className=\"comment-input-container\"\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n      open={displayModal}\r\n      scroll=\"body\"\r\n      onClose={() => {}}\r\n    >\r\n      <Toolbar className=\"comment-input-toolbar\">\r\n        <Typography className=\"title\" variant=\"h6\">\r\n          {title}\r\n        </Typography>\r\n        <IconButton className=\"icon-close\" onClick={() => handleCloseModal(displayModal)}>\r\n          &times;\r\n        </IconButton>\r\n      </Toolbar>\r\n      <DialogContent className=\"comment-input-content\" dividers>\r\n        <CommentView\r\n          onDataChange={onDataCommentChange}\r\n          categoryConfigData={categoryConfig}\r\n          commentSuggestionResponse={listCommentSuggestion}\r\n          errorsConfig={errorsConfig}\r\n          onCommentPriceTagChange={() => {\r\n            /* Do nothing */\r\n          }}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions className=\"comment-input-actions\">\r\n        <Button autoFocus variant=\"outlined\" onClick={() => handleCloseModal(displayModal)}>\r\n          {BTN_CLOSE_COMMENT}\r\n        </Button>\r\n        <Button autoFocus color=\"primary\" variant=\"contained\" onClick={handleSubmitData}>\r\n          {BTN_SAVE}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport confetti from 'canvas-confetti'\r\nimport { Dialog, Typography, IconButton } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport { randomInRange } from 'utils/util'\r\n\r\nimport { ICompleteTaskConfettiPopup } from 'components/CompleteTaskConfettiPopup/index.d'\r\n\r\nimport 'components/CompleteTaskConfettiPopup/styles.scss'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  confettiTitle: {\r\n    fontWeight: 400,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nexport const CompleteTaskConfettiPopup = (props: ICompleteTaskConfettiPopup): JSX.Element => {\r\n  const { show, handleClose } = props\r\n\r\n  const confettiRef = useRef<HTMLCanvasElement>(null)\r\n  const timeoutRef = useRef<NodeJS.Timeout>()\r\n  const confettiIntervalId = useRef<NodeJS.Timeout>()\r\n\r\n  const createConfetti = (): void => {\r\n    const myConfetti = confetti.create(confettiRef.current as HTMLCanvasElement, { resize: true })\r\n\r\n    const angles = [135, 90, 45]\r\n    const originX = [1, 0.5, 0]\r\n\r\n    const getConfettiRandom = (index: number): any => ({\r\n      particleCount: 500,\r\n      angle: angles[index],\r\n      spread: 90,\r\n      startVelocity: 45,\r\n      decay: 0.9,\r\n      ticks: 60,\r\n      origin: {\r\n        y: 1.2,\r\n        x: originX[index],\r\n      },\r\n    })\r\n\r\n    myConfetti(getConfettiRandom(1))\r\n\r\n    confettiIntervalId.current = setInterval(() => {\r\n      if (document.visibilityState === 'visible') {\r\n        const random = randomInRange(0, 2)\r\n        myConfetti(getConfettiRandom(random))\r\n      }\r\n    }, 1500)\r\n  }\r\n\r\n  const awaitDomReady = (): void => {\r\n    timeoutRef.current = setTimeout(() => {\r\n      if (confettiRef.current) {\r\n        createConfetti()\r\n      } else {\r\n        awaitDomReady()\r\n      }\r\n    }, 500)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      awaitDomReady()\r\n    }\r\n\r\n    return () => {\r\n      if (confettiIntervalId.current) {\r\n        clearInterval(confettiIntervalId.current)\r\n      }\r\n\r\n      if (timeoutRef.current) {\r\n        clearInterval(timeoutRef.current)\r\n      }\r\n    }\r\n  }, [show])\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={show} onClose={() => handleClose()}>\r\n      <div className=\"complete-task-confetti\">\r\n        <IconButton className=\"complete-task-confetti__close\" onClick={() => handleClose()}>\r\n          <CloseIcon fontSize=\"large\" />\r\n        </IconButton>\r\n\r\n        <Typography className={classes.confettiTitle} variant=\"h2\" color=\"primary\">\r\n          Chúc mừng!\r\n        </Typography>\r\n\r\n        <Typography variant=\"h4\">Bạn vừa hoàn tất công việc</Typography>\r\n\r\n        <canvas className=\"confetti\" ref={confettiRef} />\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\n\r\nimport { ICommentTask } from 'modules/CommentTask/index.d'\r\n\r\nimport { TODO_TASK_COMMENT_DEFAULT_VALUE } from 'constants/defaultValue'\r\n\r\nimport { ITaskCommentData } from 'utils/form'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport {\r\n  getCommentCategoryConfig,\r\n  getCommentCategorySuggestions,\r\n  submitCanceledTask,\r\n  submitCompletedTask,\r\n} from 'services/api/Task'\r\nimport { FeatureCodeType, RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { CategoryConfig, CommentSuggestion } from 'model/comment'\r\nimport { TCommentForm } from 'components/TCommentForm'\r\nimport { CompleteTaskConfettiPopup } from 'components/CompleteTaskConfettiPopup'\r\n\r\nconst CommentTask = (props: ICommentTask): JSX.Element => {\r\n  const { setLoading } = useContext(CommonContext)\r\n\r\n  const { displayModal, createdBy, id, setDisplayModal, featureCode, title } = props\r\n  const [commentTask, setCommentTask] = useState<ITaskCommentData>(TODO_TASK_COMMENT_DEFAULT_VALUE)\r\n  const [categoryConfig, setCategoryConfig] = useState<CategoryConfig[]>([])\r\n  const [listCommentSuggestion, setListCommentSuggestion] = useState<CommentSuggestion[]>([])\r\n  const [displayConfettiPopup, setDisplayConfettiPopup] = useState<boolean>(false)\r\n\r\n  // callback reset all function\r\n  const resetAll = useCallback((): void => {\r\n    // Reset all select child\r\n    setCommentTask(TODO_TASK_COMMENT_DEFAULT_VALUE)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetAll()\r\n    }\r\n  }, [displayModal, resetAll])\r\n\r\n  useEffect(() => {\r\n    const fetchCategoryConfig = async (): Promise<void> => {\r\n      const response = await getCommentCategoryConfig(featureCode)\r\n      if (response.result) setCategoryConfig(response.data)\r\n    }\r\n\r\n    const fetchCategorySuggestion = async (): Promise<void> => {\r\n      const response = await getCommentCategorySuggestions(featureCode)\r\n      if (response.result) setListCommentSuggestion(response.data)\r\n    }\r\n\r\n    if (featureCode) {\r\n      fetchCategoryConfig()\r\n      fetchCategorySuggestion()\r\n    }\r\n  }, [featureCode])\r\n\r\n  const handleCloseModal = (modal: boolean): void => {\r\n    setDisplayModal(modal)\r\n  }\r\n\r\n  const handleClosePopup = (): void => {\r\n    setDisplayConfettiPopup(false)\r\n    window.location.reload()\r\n  }\r\n\r\n  const handleCommentTask = async (commentData: ITaskCommentData): Promise<void> => {\r\n    // set Loading\r\n    setLoading(true)\r\n\r\n    // For complete\r\n    if (featureCode === FeatureCodeType.COMPLETED) {\r\n      const dataPost = {\r\n        completedComment: commentData,\r\n        taskId: id,\r\n      }\r\n      const response = await submitCompletedTask(dataPost)\r\n\r\n      setLoading(false)\r\n\r\n      if (response && response.code === RESPONSE_GET_SUCCESS) {\r\n        handleCloseModal(displayModal)\r\n        setDisplayConfettiPopup(true)\r\n      }\r\n    }\r\n\r\n    // For cancel\r\n    if (featureCode === FeatureCodeType.CANCELED) {\r\n      const dataPost = {\r\n        canceledComment: commentData,\r\n        taskId: id,\r\n      }\r\n      const response = await submitCanceledTask(dataPost)\r\n      setLoading(false)\r\n\r\n      if (response && response.code === RESPONSE_GET_SUCCESS) {\r\n        // close modal\r\n        handleCloseModal(displayModal)\r\n        window.location.reload()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TCommentForm\r\n        displayModal={displayModal}\r\n        id={id}\r\n        item={commentTask}\r\n        createdBy={createdBy}\r\n        categoryConfig={categoryConfig}\r\n        listCommentSuggestion={listCommentSuggestion}\r\n        handleCloseModal={handleCloseModal}\r\n        handleSubmitForm={handleCommentTask}\r\n        setDisplayModal={setDisplayModal}\r\n        title={title}\r\n      />\r\n      <CompleteTaskConfettiPopup show={displayConfettiPopup} handleClose={handleClosePopup} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CommentTask\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react'\r\nimport { TextField, FormHelperText, Typography } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { TAutocompleteProps } from 'components/TAutocomplete/index.d'\r\n\r\nimport 'components/ISelect/index.scss'\r\nimport isArray from 'lodash/isArray'\r\nimport { IOption } from 'utils/form'\r\n\r\nexport const TAutocomplete: React.FC<TAutocompleteProps> = (props) => {\r\n  const {\r\n    error,\r\n    label,\r\n    required,\r\n    className,\r\n    disabled,\r\n    id,\r\n    option,\r\n    placeholder,\r\n    value = null,\r\n    name,\r\n    onChange,\r\n    multiple,\r\n  } = props\r\n\r\n  let fValue = value\r\n\r\n  if (multiple) {\r\n    if (!isArray(value)) {\r\n      fValue = []\r\n    }\r\n  } else {\r\n    // eslint-disable-next-line no-lonely-if\r\n    if (isArray(value)) {\r\n      ;[fValue] = value\r\n    }\r\n  }\r\n\r\n  let selectedOptions: IOption[] | IOption | null\r\n\r\n  if (multiple) {\r\n    const values = fValue as number[]\r\n    selectedOptions = option && option.length > 0 && option.filter((el) => values.includes(+el.value)) || []\r\n  } else {\r\n    selectedOptions = option.find((el) => el.value === fValue) || null\r\n  }\r\n\r\n  const handleChange = (event: any, eValue: any): void => {\r\n    let payload\r\n\r\n    if (multiple) {\r\n      payload = (eValue as IOption[]).map((el) => el.value)\r\n    } else {\r\n      payload = eValue?.value || ''\r\n    }\r\n    onChange(name, payload)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && (\r\n        <Typography className={`${required ? 'required' : ''}`} component=\"p\" variant=\"subtitle2\">\r\n          {label}\r\n        </Typography>\r\n      )}\r\n\r\n      <Autocomplete\r\n        limitTags={3}\r\n        size=\"small\"\r\n        className={className}\r\n        multiple={multiple}\r\n        id={id}\r\n        value={selectedOptions}\r\n        disabled={disabled}\r\n        onChange={handleChange}\r\n        getOptionLabel={(options: IOption) => {\r\n          return options.label || ''\r\n        }}\r\n        renderOption={(otp) => (\r\n          <>\r\n            {otp.icon && <span style={{ marginRight: '8px' }}>{otp.icon}</span>}\r\n            <span>{otp.label}</span>\r\n          </>\r\n        )}\r\n        options={option}\r\n        renderInput={(params) => <TextField {...params} placeholder={placeholder} variant=\"outlined\" />}\r\n        filterSelectedOptions\r\n      />\r\n\r\n      <FormHelperText id=\"component-error-text\">{error}</FormHelperText>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo } from 'react'\r\n\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\nimport { ISelectJobTypeProps } from 'modules/ISelectJobType/index.d'\r\n\r\nimport { getTypeList } from 'services/api/GetOptions'\r\n\r\nimport { parseOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nimport {\r\n  LABEL_JOB_TYPE,\r\n  RESPONSE_GET_SUCCESS,\r\n  PLACEHOLDER_JOB_TYPE,\r\n  PLACEHOLDER_JOB_TYPE_HAS_VALUE,\r\n} from 'constants/common'\r\n\r\nexport const ISelectJobType = (props: ISelectJobTypeProps): JSX.Element => {\r\n  const { errMsg, multiple, name = 'type', placeholder = PLACEHOLDER_JOB_TYPE, required, value, onChange } = props\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_JOB_TYPE_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    let hasData = false\r\n    const items = await getTypeList()\r\n\r\n    if (!hasData && items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        hasData = true\r\n        // parse response items\r\n        let parseData = parseOptions(name, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [optionItems])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleChange = (fieldName: string, val: null | number | number[]): void => {\r\n    if (multiple) {\r\n      onChange(fieldName, val as number[])\r\n    } else {\r\n      onChange(fieldName, val || '')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TAutocomplete\r\n      multiple={multiple}\r\n      error={errMsg}\r\n      id={name}\r\n      label={LABEL_JOB_TYPE}\r\n      name={name}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      required={required}\r\n      value={value}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useCallback, useContext, useEffect, useState, useMemo } from 'react'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { ISelectAssigneeProps } from 'modules/ISelectAssignee/index.d'\r\n\r\nimport {\r\n  LABEL_ASSIGNEE,\r\n  RESPONSE_GET_SUCCESS,\r\n  PLACEHOLDER_ASSIGNEE,\r\n  PLACEHOLDER_ASSIGNEE_HAS_VALUE,\r\n} from 'constants/common'\r\n\r\nimport { parseAssigneddOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nimport { getUserListFiltered } from 'services/api/GetOptions'\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\n\r\nexport const ISelectAssignee: React.FC<ISelectAssigneeProps> = (props) => {\r\n  const { setLoading } = useContext(CommonContext)\r\n  const {\r\n    departmentIds,\r\n    errMsg,\r\n    multiple,\r\n    name,\r\n    placeholder = PLACEHOLDER_ASSIGNEE,\r\n    required,\r\n    teamIds,\r\n    value,\r\n    zoneIds,\r\n    onChange,\r\n    setAssignedToIds\r\n  } = props\r\n\r\n  let itemName = 'assignedTo'\r\n  if (name) {\r\n    itemName = name\r\n  }\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_ASSIGNEE_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    let parseData = []\r\n\r\n    // if ((zoneIds && zoneIds.length > 0) || (departmentIds && departmentIds.length > 0)) {\r\n    setLoading(true)\r\n    const dataPost = {\r\n      departmentIds,\r\n      teamIds,\r\n      zoneIds,\r\n    }\r\n    const resp = await getUserListFiltered(dataPost)\r\n    setLoading(false)\r\n\r\n    if (resp.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (resp.data.length > 0) {\r\n        // parse response items\r\n        parseData = parseAssigneddOptions(itemName, resp.data)\r\n      }\r\n    }\r\n    // }\r\n\r\n    // update options\r\n    if (setAssignedToIds) {\r\n      let optsId: number[] = []\r\n      parseData.map((item: IOption) => {\r\n        optsId = optsId.concat(Number(item.value))\r\n\r\n        return optsId\r\n      })\r\n      setAssignedToIds(optsId)\r\n    }\r\n    setOptionItems(parseData)\r\n  }, [departmentIds, teamIds, zoneIds])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [departmentIds, teamIds, zoneIds])\r\n\r\n  const changeAssignorName = (assignorId: number): void => {\r\n    const selectedAssignor = optionItems.find((el) => el.value === assignorId)\r\n\r\n    if (selectedAssignor) {\r\n      onChange('assignedToName', selectedAssignor.label)\r\n    } else {\r\n      onChange('assignedToName', '')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!multiple && typeof value === 'number') {\r\n      changeAssignorName(value)\r\n    }\r\n  }, [optionItems])\r\n\r\n  const handleChange = (eName: string, val: null | number | number[]): void => {\r\n    if (multiple) {\r\n      onChange(eName, val as number[])\r\n    } else {\r\n      onChange(eName, val || '')\r\n      changeAssignorName(val as number)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TAutocomplete\r\n      multiple={multiple}\r\n      error={errMsg}\r\n      required={required}\r\n      label={LABEL_ASSIGNEE}\r\n      id={itemName}\r\n      name={itemName}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      value={value}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState, useMemo } from 'react'\r\n\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\nimport { ISelectPriorityProps } from 'modules/ISelectPriority/index.d'\r\n\r\nimport { parseOptions, PRIORITY_ICON_OPTION } from 'utils/renderComponent'\r\n\r\nimport {\r\n  LABEL_PRIORITY,\r\n  RESPONSE_GET_SUCCESS,\r\n  PLACEHOLDER_PRIORITY,\r\n  PLACEHOLDER_PRIORITY_HAS_VALUE,\r\n} from 'constants/common'\r\nimport { CommonContext } from 'context/CommonContext'\r\nimport { getTaskPriorityList } from 'services/api/GetOptions'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nexport const ISelectPriority = (props: ISelectPriorityProps): JSX.Element => {\r\n  const { setLoading } = useContext(CommonContext)\r\n  const { errMsg, multiple, placeholder = PLACEHOLDER_PRIORITY, required, value, onChange } = props\r\n\r\n  const itemName = 'priority'\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_PRIORITY_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  // parse response items\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  let hasData = false\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    setLoading(true)\r\n    const resp = await getTaskPriorityList()\r\n    setLoading(false)\r\n\r\n    if (!hasData && resp.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (resp.data.length > 0) {\r\n        hasData = true\r\n        // parse response resp\r\n        let parseData = parseOptions(itemName, resp.data, PRIORITY_ICON_OPTION)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <TAutocomplete\r\n      error={errMsg}\r\n      id={itemName}\r\n      label={LABEL_PRIORITY}\r\n      multiple={multiple}\r\n      name={itemName}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      required={required}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n","import React, { ChangeEvent, useContext, useState } from 'react'\r\nimport { AttachmentProps } from 'modules/Attachment/index.d'\r\nimport { Box, Button, FormHelperText, Grid, IconButton, Typography } from '@material-ui/core'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\n\r\nimport {\r\n  ACCEPT_FILE_SIZE,\r\n  BTN_UPLOAD,\r\n  ERROR_MAX_FILE_SIZE,\r\n  ERROR_MAX_ATTACHMENT_FILE,\r\n  EXCEL_TYPE,\r\n  FILE_EXTENSION_ACCEPT,\r\n  LABEL_ATTACHMENT,\r\n  ICON_EXCEL,\r\n  ICON_PDF,\r\n  ICON_PPT,\r\n  ICON_WORD,\r\n  MAX_FILE_SIZE,\r\n  PDF_TYPE,\r\n  POWERPOINT_TYPE,\r\n  RESPONSE_GET_SUCCESS,\r\n  WORD_TYPE,\r\n} from 'constants/common'\r\n\r\nimport 'modules/Attachment/styles.scss'\r\nimport { uploadFile } from 'services/api/Task'\r\nimport { AttachedFile } from 'utils/form'\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nconst Attachment: React.FC<AttachmentProps> = (props) => {\r\n  const { setLoading } = useContext(CommonContext)\r\n\r\n  const { fileList, id, name, onSetFile } = props\r\n\r\n  // const [totalFile, setTotalFile] = useState<number>(0)\r\n  const [error, setError] = useState<string | null>('')\r\n\r\n  let clsUploadBtn = 'upload-label'\r\n  if (fileList?.length === MAX_FILE_SIZE) {\r\n    clsUploadBtn += ' hide'\r\n  }\r\n\r\n  const handleFileChange = async (e: ChangeEvent<HTMLInputElement>): Promise<void> => {\r\n    e.preventDefault()\r\n\r\n    const { files }: any = e.target\r\n\r\n    // check file is existed\r\n    if (files && files.length > 0) {\r\n      let newMergedFiles: any = files\r\n      if (fileList && fileList.length > 0) {\r\n        newMergedFiles = [\r\n          ...files,\r\n          ...fileList\r\n        ]\r\n      }\r\n\r\n      // validate max length \r\n      if (newMergedFiles.length > MAX_FILE_SIZE) {\r\n        setError(ERROR_MAX_ATTACHMENT_FILE)\r\n        return\r\n      }\r\n\r\n      for (let f = 0; f < files.length; f += 1) {\r\n        // size validation\r\n        if (files[f].size > ACCEPT_FILE_SIZE) {\r\n          setError(ERROR_MAX_FILE_SIZE)\r\n\r\n          return\r\n        }\r\n      }\r\n\r\n      // reset error, validated files\r\n      newMergedFiles = []\r\n      setError('')\r\n\r\n      // toggle loading\r\n      setLoading(true)\r\n\r\n      const dataForm = new FormData()\r\n      for (let f = 0; f < files.length; f += 1) {\r\n        dataForm.append('files', files[f], files[f].name)\r\n      }\r\n\r\n      const resp = await uploadFile(dataForm)\r\n      if (resp.code === RESPONSE_GET_SUCCESS) {\r\n        // toggle loading\r\n        setLoading(false)\r\n\r\n        if (fileList) {\r\n          newMergedFiles = fileList.concat(resp.data)\r\n        } else {\r\n          newMergedFiles = newMergedFiles.concat(resp.data)\r\n        }\r\n\r\n        // setTotalFile(newMergedFiles.length)\r\n        onSetFile(name, newMergedFiles)\r\n      } else {\r\n        // toggle loading\r\n        setLoading(false)\r\n\r\n        // validate from BE response\r\n        setError(resp.message)\r\n      }\r\n    }\r\n  }\r\n  const handleDeleteFile = (url: string): void => {\r\n    if (fileList && fileList.length > 0) {\r\n      const newList = fileList.filter((item) => item.url !== url)\r\n\r\n      // setTotalFile(newList.length)\r\n      onSetFile(name, newList)\r\n    }\r\n  }\r\n\r\n  const convertToMb = (size: number): string => {\r\n    return `${(size / (1024 * 1024)).toFixed(2)} MB`\r\n  }\r\n\r\n  const getIconPath = (file: AttachedFile): string => {\r\n    const toLowercaseType = file.type.toLowerCase()\r\n    if (toLowercaseType) {\r\n      if (WORD_TYPE.includes(toLowercaseType)) {\r\n        return ICON_WORD\r\n      }\r\n\r\n      if (EXCEL_TYPE.includes(toLowercaseType)) {\r\n        return ICON_EXCEL\r\n      }\r\n\r\n      if (POWERPOINT_TYPE.includes(toLowercaseType)) {\r\n        return ICON_PPT\r\n      }\r\n\r\n      if (PDF_TYPE.includes(toLowercaseType)) {\r\n        return ICON_PDF\r\n      }\r\n    }\r\n\r\n    return file.url\r\n  }\r\n\r\n  const renderFileIcon = (file: AttachedFile): JSX.Element => {\r\n    const iconPath = getIconPath(file)\r\n    return <img className=\"fileIcon\" src={iconPath} alt={iconPath} />\r\n  }\r\n\r\n  const getListFile = (list: AttachedFile[]): AttachedFile[] => {\r\n    if (!list) {\r\n      return []\r\n    }\r\n    return Object.keys(list).map((i) => {\r\n      const index: number = +i\r\n      return list[index]\r\n    })\r\n  }\r\n  const renderFileList = (): JSX.Element => {\r\n    if (!fileList || fileList.length === 0) {\r\n      return <></>\r\n    }\r\n\r\n    const list = getListFile(fileList)\r\n    return (\r\n      <Box className=\"fileBox\">\r\n        <Grid container spacing={2} className=\"fileContainer\">\r\n          {list.map((f) => {\r\n            return (\r\n              <Grid className=\"fileGrid\" item xs={6} key={`${f.size}-${f.url}`} container>\r\n                <Grid item xs={4} className=\"iconBox\">\r\n                  {renderFileIcon(f)}\r\n                </Grid>\r\n                <Grid item xs={8} className=\"fileItem\">\r\n                  <Typography className=\"fileName\" component=\"p\">\r\n                    {f.name}\r\n                  </Typography>\r\n                  <Typography className=\"fileSize\" component=\"p\">\r\n                    {convertToMb(f.size || 0)}\r\n                  </Typography>\r\n                  <IconButton className=\"icon-close\" onClick={() => handleDeleteFile(f.url)}>\r\n                    <HighlightOffIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"attachment-files\">\r\n      <Typography variant=\"subtitle2\" component=\"p\">\r\n        {`${LABEL_ATTACHMENT} (${fileList?.length || 0})`}{' '}\r\n      </Typography>\r\n      {error && <FormHelperText error>{error}</FormHelperText>}\r\n      <div className=\"upload-btn\">\r\n        {renderFileList()}\r\n        <input\r\n          accept={FILE_EXTENSION_ACCEPT.toString()}\r\n          id={id}\r\n          multiple\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n\r\n        <label className={clsUploadBtn} htmlFor={id}>\r\n          <Button component=\"span\" variant=\"outlined\" color=\"primary\">\r\n            {BTN_UPLOAD}\r\n          </Button>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Attachment\r\n","import React from 'react'\r\nimport { MenuItem, Select, Typography } from '@material-ui/core'\r\n\r\nimport { ISelectProps } from 'components/ISelect/index.d'\r\n\r\nimport 'components/ISelect/index.scss'\r\n\r\nexport const ISelect: React.FC<ISelectProps> = (props) => {\r\n  const { className, disabled, id, name, native, option, value, onChange } = props\r\n\r\n  let revertValue = value\r\n  if (!value) {\r\n    revertValue = ''\r\n  }\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return option.map((item) => {\r\n      return (\r\n        <MenuItem className=\"style-menu-item\" key={item.key} value={item.value}>\r\n          {item.icon}\r\n          <Typography variant=\"inherit\" component=\"span\">\r\n            {item.label}\r\n          </Typography>\r\n        </MenuItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  const handleChange = (e: any): void => {\r\n    if (e.target.name) {\r\n      onChange(e.target.name, e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      className={`style-select-option ${className}`}\r\n      defaultValue=\"\"\r\n      displayEmpty\r\n      disabled={disabled}\r\n      id={id}\r\n      name={name}\r\n      margin=\"dense\"\r\n      native={native}\r\n      variant=\"outlined\"\r\n      value={revertValue}\r\n      onChange={handleChange}\r\n    >\r\n      {renderOptions()}\r\n    </Select>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, Typography } from '@material-ui/core'\r\n\r\nimport { ISelect } from 'components/ISelect'\r\nimport { ISelectOptionProps } from 'components/ISelectOption/index.d'\r\n\r\nexport const ISelectOption: React.FC<ISelectOptionProps> = (props) => {\r\n  const { className, disabled, id, label, name, option, placeholder, required, value, onChange } = props\r\n\r\n  let clsName = ''\r\n  if (required) {\r\n    clsName = 'required'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography className={clsName} component=\"p\" variant=\"subtitle2\">\r\n        {label}\r\n      </Typography>\r\n      <FormControl fullWidth>\r\n        <ISelect\r\n          className={className}\r\n          disabled={disabled}\r\n          id={id}\r\n          name={name}\r\n          option={option}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FormHelperText } from '@material-ui/core'\r\n\r\nimport { TSelectWithNumberFormatProps } from 'modules/TSelectWithNumberFormat/index.d'\r\nimport { ISelectOption } from 'components/ISelectOption'\r\n\r\nexport const TSelectWithNumberFormat = (props: TSelectWithNumberFormatProps): JSX.Element => {\r\n  const { className, error, disabled, id, label, name, options, placeholder, required, value, onChange } = props\r\n\r\n  let getPlaceholder = placeholder\r\n  if (!placeholder) {\r\n    getPlaceholder = options[0].label\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ISelectOption\r\n        autoWidth={false}\r\n        className={className}\r\n        disabled={disabled}\r\n        id={id}\r\n        label={label}\r\n        name={name}\r\n        option={options}\r\n        placeholder={getPlaceholder}\r\n        required={required}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <FormHelperText id=\"component-error-text\">{error}</FormHelperText>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { InputAdornment, TextField, Typography } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nimport { ISelectSuggestionProps } from 'components/ISelectSuggestion/index.d'\r\n\r\nimport { LABEL_SUGGESTION, NO_OPTIONS } from 'constants/common'\r\nimport { IOption } from 'utils/form'\r\n\r\nimport 'components/ISelect/index.scss'\r\n\r\nexport const ISelectSuggestion = (props: ISelectSuggestionProps): JSX.Element => {\r\n  const { id, name, value, options, onChange, onInputChange } = props\r\n  const [getRelatedValue, setGetRalatedValue] = useState<IOption>()\r\n\r\n  useEffect(() => {\r\n    let getValue\r\n    if (value) {\r\n      options.map((opt) => {\r\n        if (Number(opt.value) === value) {\r\n          getValue = opt\r\n        }\r\n\r\n        return opt\r\n      })\r\n    }\r\n    setGetRalatedValue(getValue)\r\n  }, [value, options])\r\n\r\n  let selectedOpt: IOption\r\n\r\n  const getOptionLabel = (option: any): string => {\r\n    if (typeof option === 'object') {\r\n      return option.label\r\n    }\r\n\r\n    return ''\r\n  }\r\n\r\n  const handleInputChange = (e: any, val: any): void => {\r\n    let kw = val\r\n\r\n    // while fill text to search\r\n    if (e) {\r\n      // while press enter key\r\n      if (e.code === 'Enter') {\r\n        const listOpts = options.filter((opt) => opt.label.indexOf(e.target.value) > -1)\r\n\r\n        if (selectedOpt) {\r\n          kw = selectedOpt.value?.toString()\r\n        } else {\r\n          kw = listOpts[0] && listOpts[0].label || kw\r\n        }\r\n      }\r\n      if (!val) {\r\n        kw = val\r\n      }\r\n    }\r\n\r\n    // on select suggestion\r\n    if (val && typeof val === 'object') {\r\n      kw = val.label\r\n    }\r\n\r\n    // debounceFunc(setSearchTerm(kw), 800)\r\n    onInputChange(name, kw)\r\n  }\r\n\r\n  const getOptionSelected = (opt: IOption): boolean => {\r\n    return Number(opt.value) === value\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      className=\"autocomplete-container\"\r\n      fullWidth\r\n      getOptionLabel={getOptionLabel}\r\n      id={id}\r\n      // inputValue={getRelatedValue?.label || ''}\r\n      getOptionSelected={getOptionSelected}\r\n      noOptionsText={NO_OPTIONS}\r\n      options={options}\r\n      value={getRelatedValue || null}\r\n      onChange={(event, val) => onChange(name, Number(val?.value))}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          // eslint-disable-next-line react/jsx-props-no-spreading\r\n          {...params}\r\n          className=\"input-content\"\r\n          margin=\"dense\"\r\n          placeholder={LABEL_SUGGESTION}\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            startAdornment: (\r\n              <InputAdornment component=\"div\" position=\"start\">\r\n                <SearchIcon className=\"icon-style\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={e => handleInputChange(e, e.currentTarget.value)}\r\n        />\r\n      )}\r\n      renderOption={(option, { inputValue }) => {\r\n        if (typeof option !== 'object') {\r\n          return option\r\n        }\r\n\r\n        const parts = option.label.split(new RegExp(`(${inputValue})`, 'gi'))\r\n\r\n        return (\r\n          <Typography component=\"div\">\r\n            {parts.map((part: string, i: number) => {\r\n              const key = `highlight-${part}-${i}`\r\n              const clsHighlight = part.toLowerCase() === inputValue.toLowerCase() ? 'highlight' : ''\r\n\r\n              return (\r\n                <Typography component=\"span\" key={key} className={clsHighlight}>\r\n                  {part}\r\n                </Typography>\r\n              )\r\n            })}\r\n          </Typography>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { FC, useCallback, useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormHelperText, Grid, Typography } from '@material-ui/core'\r\n\r\nimport { TSearchBar } from 'modules/SearchBar/index.d'\r\nimport { TSelectWithNumberFormat } from 'modules/TSelectWithNumberFormat'\r\n\r\nimport { ISelectSuggestion } from 'components/ISelectSuggestion'\r\n\r\nimport { LABEL_RELATED_TO, RESPONSE_GET_SUCCESS, SUGGESTION_LIMIT } from 'constants/common'\r\nimport { RELATED_TYPE_IS_DEAL } from 'constants/defaultValue'\r\nimport { DefaultData } from 'constants/mockupData'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { IOption } from 'utils/form'\r\nimport { parseOptions, parseRelatedDealOptions, parseRelatedListingOptions } from 'utils/renderComponent'\r\nimport { getRelatedDealListingList, getRelatedTypeList } from 'services/api/GetOptions'\r\n\r\nimport 'modules/SearchBar/styles.scss'\r\n\r\nexport const SearchBar: FC<TSearchBar> = (props) => {\r\n  const { setLoading } = useContext(CommonContext)\r\n  const { assignedTo, errMsg, relatedTo, relatedType, onChangeRelatedTo, onChangeRelatedType } = props\r\n\r\n  const itemRelatedTypeName = 'relatedType'\r\n  // parse response items\r\n  const parseRelatedType = parseOptions(itemRelatedTypeName, [DefaultData])\r\n  const [optionsRelatedType, setOptionsRelatedType] = useState<IOption[]>(parseRelatedType)\r\n\r\n  const itemName = 'relatedTo'\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const [inputValue, setInputValue] = useState<string | undefined>('')\r\n  const handleInputChange = (name: string, val: string): void => {\r\n    setInputValue(val)\r\n  }\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    if (!relatedType || !assignedTo) {\r\n      setOptionItems([])\r\n      onChangeRelatedTo(itemName, undefined)\r\n      return\r\n    }\r\n\r\n    let kw: number | string | undefined = inputValue\r\n    if (relatedTo) {\r\n      kw = relatedTo\r\n    }\r\n\r\n    let isDeal = false\r\n    let fn = parseRelatedListingOptions\r\n    if (relatedType === RELATED_TYPE_IS_DEAL) {\r\n      isDeal = true\r\n      fn = parseRelatedDealOptions\r\n    }\r\n    const dataPost = {\r\n      assignedTo,\r\n      page: 0,\r\n      search: kw,\r\n      size: SUGGESTION_LIMIT,\r\n    }\r\n\r\n    setLoading(true)\r\n    const resp = await getRelatedDealListingList(isDeal, dataPost)\r\n    setLoading(false)\r\n\r\n    let parseData: IOption[] = []\r\n    if (resp.code === RESPONSE_GET_SUCCESS && resp.data.totalElements > 0) {\r\n      // check data exist and length\r\n      if (resp.data.content.length > 0) {\r\n        // parse response items\r\n        parseData = fn(itemName, resp.data.content)\r\n      }\r\n    }\r\n\r\n    // update options\r\n    setOptionItems(parseData)\r\n  }, [assignedTo, inputValue, relatedType])\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [assignedTo, inputValue, relatedType])\r\n\r\n  const fetchRelatedType = useCallback(async (): Promise<void> => {\r\n    if (!assignedTo) {\r\n      setOptionsRelatedType(optionsRelatedType)\r\n      return\r\n    }\r\n    setLoading(true)\r\n    const respRelatedType = await getRelatedTypeList(assignedTo)\r\n    setLoading(false)\r\n\r\n    // check data exist and length\r\n    let relatedTypeOptions: IOption[] = parseRelatedType\r\n    let getRalatedType: number | string = ''\r\n    if (respRelatedType.code === RESPONSE_GET_SUCCESS && respRelatedType.data && respRelatedType.data.length > 0) {\r\n      // parse response items\r\n      relatedTypeOptions = parseOptions(itemRelatedTypeName, respRelatedType.data)\r\n      // update options\r\n      setOptionsRelatedType(relatedTypeOptions)\r\n\r\n      getRalatedType = relatedTypeOptions[0].value\r\n    }\r\n\r\n    setOptionsRelatedType(relatedTypeOptions)\r\n    onChangeRelatedType(itemRelatedTypeName, getRalatedType)\r\n  }, [assignedTo])\r\n  useEffect(() => {\r\n    fetchRelatedType()\r\n  }, [assignedTo])\r\n\r\n  return (\r\n    <Typography className=\"search-bar\" component=\"div\">\r\n      <Typography className=\"required\" variant=\"subtitle2\" component=\"p\">\r\n        {LABEL_RELATED_TO}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={3}>\r\n          <TSelectWithNumberFormat\r\n            className=\"style-background-grey\"\r\n            id={itemRelatedTypeName}\r\n            name={itemRelatedTypeName}\r\n            options={optionsRelatedType}\r\n            value={relatedType}\r\n            onChange={onChangeRelatedType}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <ISelectSuggestion\r\n            id={itemName}\r\n            name={itemName}\r\n            options={optionItems}\r\n            value={relatedTo}\r\n            onChange={onChangeRelatedTo}\r\n            onInputChange={(name, val) => handleInputChange(name, val)}\r\n          />\r\n\r\n          <FormHelperText id=\"component-error-text\">{errMsg}</FormHelperText>\r\n        </Grid>\r\n      </Grid>\r\n    </Typography>\r\n  )\r\n}\r\n","import React, { memo, useState } from 'react'\r\n\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport 'date-fns'\r\n\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers'\r\nimport { FormControl, FormControlLabel, Checkbox, Grid, Typography, FormHelperText } from '@material-ui/core'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { TCompletedTime } from 'modules/CompletedTime/index.d'\r\n\r\nimport { currentTime } from 'constants/defaultValue'\r\nimport { DATE_FORMAT, DATE_FORMAT_MAIN, ERROR_TIMETO_LESS_TIMEFROM, ERROR_TIME_IN_THE_PAST, LABEL_COMPLETED_TIME, TIME_FORMAT } from 'constants/common'\r\n\r\nimport { getStartDate } from 'utils/util'\r\n\r\nimport 'modules/CompletedTime/styles.scss'\r\n\r\nexport const CompletedTime: React.FC<TCompletedTime> = memo((props) => {\r\n  const {\r\n    error,\r\n    id,\r\n    name,\r\n    completionAllDay,\r\n    completionTimeDate,\r\n    completionTimeFrom,\r\n    completionTimeTo,\r\n    onChangeCompletedTimeAllDay,\r\n    onChangeCompletedTimeDate,\r\n    onChangeCompletedTimeFrom,\r\n    onChangeCompletedTimeTo,\r\n  } = props\r\n\r\n  let checkTimeDate = null\r\n  if (completionTimeDate) {\r\n    checkTimeDate = completionTimeDate\r\n  }\r\n  let checkTimeFrom = null\r\n  if (completionTimeFrom) {\r\n    checkTimeFrom = completionTimeFrom\r\n  }\r\n  let checkTimeTo = null\r\n  if (completionTimeTo) {\r\n    checkTimeTo = completionTimeTo\r\n  }\r\n\r\n  const [validateTimeFrom, setValidateTimeFrom] = useState(false)\r\n  const [validateTimeTo, setValidateTimeTo] = useState(false)\r\n\r\n  let hasError = false\r\n  let clsDateTime = 'datepicker dateTime'\r\n  if (error && error.completionTimeDate) {\r\n    clsDateTime += ' error'\r\n    hasError = true\r\n  }\r\n  let clsStartTime = 'datepicker startTime'\r\n  if (error && error.completionTimeFrom) {\r\n    clsStartTime += ' error'\r\n    hasError = true\r\n  }\r\n  let clsFinishTime = 'datepicker finishTime'\r\n  if (error && error.completionTimeTo) {\r\n    clsFinishTime += ' error'\r\n    hasError = true\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const handleCheckAllDay = (checked: boolean): void => {\r\n    onChangeCompletedTimeAllDay(checked)\r\n  }\r\n  const handleDateChange = (date: any): void => {\r\n    const getDate = getStartDate(date, 'day')\r\n\r\n    onChangeCompletedTimeDate(getDate)\r\n  }\r\n\r\n  const handleStartTimeChange = (date?: number | string): void => {\r\n    let timeFrom: any\r\n    if (date) {\r\n      timeFrom = moment(date).format(TIME_FORMAT)\r\n      if (completionTimeDate) {\r\n        const getDate = moment(completionTimeDate).format(DATE_FORMAT_MAIN)\r\n        timeFrom = moment(`${getDate} ${timeFrom}`, `${DATE_FORMAT_MAIN} ${TIME_FORMAT}`).unix() * 1000\r\n      }\r\n    }\r\n\r\n    const minTime = currentTime\r\n    let errorFrom = true\r\n    if (minTime < timeFrom) {\r\n      // not error, set time from value \r\n      errorFrom = false\r\n\r\n      if (completionTimeTo && completionTimeTo < timeFrom) {\r\n        errorFrom = true\r\n      }\r\n    }\r\n    // display error\r\n    setValidateTimeFrom(errorFrom)\r\n    onChangeCompletedTimeFrom(timeFrom)\r\n  }\r\n\r\n  const handleEndTimeChange = (date?: number | string): void => {\r\n    let timeTo\r\n    if (date) {\r\n      timeTo = moment(date).format(TIME_FORMAT)\r\n      if (completionTimeDate) {\r\n        const getDate = moment(completionTimeDate).format(DATE_FORMAT_MAIN)\r\n        timeTo = moment(`${getDate} ${timeTo}`, `${DATE_FORMAT_MAIN} ${TIME_FORMAT}`).unix() * 1000\r\n      }\r\n    }\r\n\r\n    const minTime = completionTimeFrom\r\n    let errorTo = true\r\n    if (moment(minTime).isBefore(timeTo)) {\r\n      // not error, set time to value\r\n      errorTo = false\r\n    }\r\n\r\n    // display error\r\n    setValidateTimeTo(errorTo)\r\n    onChangeCompletedTimeTo(timeTo)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography className=\"required\" variant=\"subtitle2\" component=\"p\">\r\n        {LABEL_COMPLETED_TIME}\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={3}>\r\n          <FormControl>\r\n            <FormControlLabel\r\n              value=\"end\"\r\n              control={\r\n                <Checkbox\r\n                  checked={completionAllDay}\r\n                  color=\"primary\"\r\n                  id={`${id}-checkbox`}\r\n                  name={`${name}-checkbox`}\r\n                  onChange={(e, checked) => handleCheckAllDay(checked)}\r\n                />\r\n              }\r\n              label=\"Cả ngày\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid item xs={3}>\r\n            <KeyboardDatePicker\r\n              className={clsDateTime}\r\n              disableToolbar\r\n              format={DATE_FORMAT}\r\n              helperText=\"\"\r\n              id={`${id}-date`}\r\n              inputVariant=\"outlined\"\r\n              margin=\"dense\"\r\n              minDate={currentTime}\r\n              name={`${name}-date`}\r\n              placeholder={DATE_FORMAT.toLowerCase()}\r\n              variant=\"inline\"\r\n              value={checkTimeDate}\r\n              onChange={handleDateChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <KeyboardTimePicker\r\n              ampm={false}\r\n              className={clsStartTime}\r\n              keyboardIcon={<AccessTimeIcon />}\r\n              helperText=\"\"\r\n              inputVariant=\"outlined\"\r\n              id={`${id}-startTime`}\r\n              disabled={completionAllDay}\r\n              margin=\"dense\"\r\n              name={`${name}-startTime`}\r\n              placeholder={TIME_FORMAT.toLowerCase()}\r\n              value={checkTimeFrom}\r\n              onChange={(date) => handleStartTimeChange(moment(date).unix() * 1000)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <KeyboardTimePicker\r\n              ampm={false}\r\n              className={clsFinishTime}\r\n              disabled={completionAllDay}\r\n              helperText=\"\"\r\n              inputVariant=\"outlined\"\r\n              id={`${id}-finishTime`}\r\n              keyboardIcon={<AccessTimeIcon />}\r\n              margin=\"dense\"\r\n              name={`${name}-finishTime`}\r\n              placeholder={TIME_FORMAT.toLowerCase()}\r\n              value={checkTimeTo}\r\n              onChange={(date) => handleEndTimeChange(moment(date).unix() * 1000)}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n\r\n        {hasError && (\r\n          <FormHelperText id=\"component-error-text\" className=\"error-full-width\">\r\n            Vui lòng nhập {LABEL_COMPLETED_TIME}\r\n          </FormHelperText>\r\n        )}\r\n        {validateTimeFrom && (\r\n          <FormHelperText id=\"component-error-text\" className=\"error-full-width\">\r\n            {ERROR_TIME_IN_THE_PAST}\r\n          </FormHelperText>\r\n        )}\r\n        {validateTimeTo && (\r\n          <FormHelperText id=\"component-error-text\" className=\"error-full-width\">\r\n            {ERROR_TIMETO_LESS_TIMEFROM}\r\n          </FormHelperText>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  )\r\n})\r\n","import React from 'react'\r\n\r\nimport { ISelectRemiderProps } from 'modules/ISelectRemider/index.d'\r\n\r\nimport { LABEL_REMINDER, REMIDER_OPTION } from 'constants/common'\r\nimport { parseOptions } from 'utils/renderComponent'\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\n\r\nexport const ISelectRemider: React.FC<ISelectRemiderProps> = (props) => {\r\n  const { errMsg, disabled, value, onChange } = props\r\n\r\n  const itemName = 'reminderTime'\r\n  const defItems = parseOptions(itemName, [])\r\n  // parse response items\r\n  let parseData = parseOptions(itemName, REMIDER_OPTION)\r\n  parseData = defItems.concat(parseData)\r\n\r\n  return (\r\n    <TAutocomplete\r\n      error={errMsg}\r\n      disabled={disabled}\r\n      id={itemName}\r\n      label={LABEL_REMINDER}\r\n      name={itemName}\r\n      option={parseData}\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"-- Chọn --\"\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { ISelectSuggestionFreeTextProps } from 'components/ISelectSuggestionFreeText/index.d'\r\n\r\nimport { NO_OPTIONS } from 'constants/common'\r\n\r\nimport 'components/ISelect/index.scss'\r\nimport { IOption } from 'utils/form'\r\n\r\nexport const ISelectSuggestionFreeText = (props: ISelectSuggestionFreeTextProps): JSX.Element => {\r\n  const { id, name, options, value, onInputChange, renderInput } = props\r\n\r\n  const getOptionLabel = (option: any): string => {\r\n    if (typeof option === 'object') {\r\n      return option.label\r\n    }\r\n\r\n    return option\r\n  }\r\n\r\n  const handleInputBlur = (e: any): void | string => {\r\n    if (e) {\r\n      return onInputChange(name, e.target.value)\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  const handleInputChange = (e: any, val: string | IOption | null): void | string => {\r\n    let kw = ''\r\n    if (e) {\r\n      if (val && typeof val === 'object') {\r\n        kw = val.label\r\n      }\r\n      if (typeof val === 'string') {\r\n        kw = val\r\n      }\r\n\r\n      return onInputChange(name, kw)\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      className=\"autocomplete-container\"\r\n      freeSolo\r\n      fullWidth\r\n      getOptionLabel={getOptionLabel}\r\n      id={id}\r\n      noOptionsText={NO_OPTIONS}\r\n      options={options}\r\n      value={value || null}\r\n      onBlur={(event) => handleInputBlur(event)}\r\n      onChange={(event, val) => handleInputChange(event, val)}\r\n      renderInput={renderInput}\r\n      renderOption={(option, { inputValue }) => {\r\n        const parts = option.label.split(new RegExp(`(${inputValue})`, 'gi'))\r\n\r\n        return (\r\n          <Typography component=\"div\">\r\n            {parts.map((part: string, i: number) => {\r\n              const key = `highlight-${part}-${i}`\r\n              const clsHighlight = part.toLowerCase() === inputValue.toLowerCase() ? 'highlight' : ''\r\n\r\n              return (\r\n                <Typography component=\"span\" key={key} className={clsHighlight}>\r\n                  {part}\r\n                </Typography>\r\n              )\r\n            })}\r\n          </Typography>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\n\r\nimport { FormHelperText, TextField, Typography } from '@material-ui/core'\r\n\r\nimport { TSelectLocation } from 'modules/SelectLocation/index.d'\r\n\r\nimport { ISelectSuggestionFreeText } from 'components/ISelectSuggestionFreeText'\r\n\r\nimport { getLocationTcList } from 'services/api/GetOptions'\r\n\r\nimport { LABEL_LOCATION, RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { parseLocationTcOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\n\r\nimport 'modules/SelectLocation/styles.scss'\r\n\r\nexport const SelectLocation: React.FC<TSelectLocation> = (props) => {\r\n  const { setLoading } = useContext(CommonContext)\r\n  const { errMsg, required, value, onChange, onInputChange } = props\r\n\r\n  let clsName = ''\r\n  if (required) {\r\n    clsName = 'required'\r\n  }\r\n\r\n  const itemName = 'location'\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<[]> => {\r\n    setLoading(true)\r\n\r\n    const resp = await getLocationTcList()\r\n\r\n    setLoading(false)\r\n    if (resp.code === RESPONSE_GET_SUCCESS) {\r\n      // update options\r\n      // check data exist and length\r\n      if (resp.data.list.length > 0) {\r\n        // parse response items\r\n        const parseData = parseLocationTcOptions(itemName, resp.data.list)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n\r\n    return []\r\n  }, [optionItems])\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"select-location\">\r\n      <Typography className={clsName} variant=\"subtitle2\" component=\"p\">\r\n        {LABEL_LOCATION}\r\n      </Typography>\r\n      <ISelectSuggestionFreeText\r\n        id=\"location\"\r\n        name=\"location\"\r\n        options={optionItems}\r\n        value={value}\r\n        onChange={onChange}\r\n        onInputChange={onInputChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            // eslint-disable-next-line react/jsx-props-no-spreading\r\n            {...params}\r\n            className=\"input-content\"\r\n            name=\"location\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n      />\r\n      <FormHelperText id=\"component-error-text\">{errMsg}</FormHelperText>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { ChangeEvent } from 'react'\r\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { TTextInput } from 'components/TextInput/index.d'\r\nimport { FormHelperText, Typography } from '@material-ui/core'\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      backgroundColor: theme.palette.common.white,\r\n      border: '1px solid #ced4da',\r\n      padding: '10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      '&:focus': {},\r\n    },\r\n  }),\r\n)(InputBase)\r\n\r\nexport const TextInput: React.FC<TTextInput> = (props) => {\r\n  const { error, id, maxLength, label, multiline, name, placeholder, required, rows, rowsMax, value, onChange } = props\r\n\r\n  const getValue = value || ''\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    onChange(e.target.name, e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography className={`${required ? 'required' : ''}`} variant=\"subtitle2\" component=\"p\">\r\n        {label}\r\n      </Typography>\r\n      <FormControl fullWidth>\r\n        <BootstrapInput\r\n          fullWidth\r\n          id={id}\r\n          inputProps={{\r\n            maxLength\r\n          }}\r\n          multiline={multiline}\r\n          placeholder={placeholder}\r\n          rows={rows}\r\n          rowsMax={rowsMax}\r\n          name={name}\r\n          value={getValue}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <FormHelperText id=\"component-error-text\">{error}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { VALIDATION_FIELD } from 'utils/util'\r\n\r\ntype TListFields = {\r\n  [x: string]: string | number\r\n}\r\ninterface TUseForControls {\r\n  handleInputValue: any\r\n  handleFormSubmit: any\r\n  handleListValue: any\r\n  handleReset: any\r\n  handleResetValidationFields: any\r\n  // eslint-disable-next-line no-unused-vars\r\n  validate: (fieldValues: any) => void\r\n  formIsValid: any\r\n  errors: any\r\n  values: any\r\n}\r\n\r\nexport const useFormControls = (initialFormValues: any, validateFields: VALIDATION_FIELD): TUseForControls => {\r\n  // We'll update \"values\" as the form updates\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [values, setValues] = useState(initialFormValues)\r\n\r\n  // set state for validated fields\r\n  const [validatedFields, setValidatedFields] = useState(validateFields)\r\n\r\n  // \"errors\" is used to check the form for errors\r\n  const [errors, setErrors] = useState({} as any)\r\n\r\n  const validate = (fieldValues = values): void => {\r\n    // this function will check if the form values are valid\r\n    const temp: any = { ...errors }\r\n\r\n    const getKey = Object.keys(fieldValues)[0]\r\n    const getValue = Object.values(fieldValues)[0]\r\n\r\n    if (validatedFields[getKey]) {\r\n      temp[getKey] = null\r\n      if (validatedFields[getKey].rule.required) {\r\n        if (!getValue) {\r\n          temp[getKey] = `Vui lòng nhập ${validatedFields[getKey].label}`\r\n        }\r\n      }\r\n\r\n      setErrors((prev: any) => ({\r\n        ...prev,\r\n        [getKey]: temp[getKey]\r\n      }))\r\n    }\r\n  }\r\n\r\n  const handleInputValue = (fieldName: string, fieldValue: any, updatedValidateFields: VALIDATION_FIELD): void => {\r\n    // this function will be triggered by the text field's onBlur and onChange events\r\n    setValues((prev: any) => ({\r\n      ...prev,\r\n      [fieldName]: fieldValue,\r\n    }))\r\n\r\n    validate({ [fieldName]: fieldValue })\r\n    if (updatedValidateFields) {\r\n      validate(updatedValidateFields)\r\n    }\r\n  }\r\n\r\n  const handleListValue = (listFields: TListFields): void => {\r\n    setValues({\r\n      ...values,\r\n      ...listFields,\r\n    })\r\n  }\r\n\r\n  const handleSuccess = (): void => {\r\n    setValues({\r\n      ...initialFormValues,\r\n      formSubmitted: true,\r\n      success: true,\r\n    })\r\n  }\r\n\r\n  const handleError = (): void => {\r\n    setValues({\r\n      ...initialFormValues,\r\n      formSubmitted: true,\r\n      success: false,\r\n    })\r\n  }\r\n\r\n  const handleReset = (data: any): void => {\r\n    setValues(data)\r\n    setErrors({})\r\n  }\r\n  const handleResetValidationFields = (fields: VALIDATION_FIELD): void => {\r\n    setValidatedFields(fields)\r\n  }\r\n\r\n  const formIsValid = (data = values): any => {\r\n    // this function will check if the form values and return a boolean value\r\n    let isValid = true\r\n\r\n    const arrKeys = Object.keys(data)\r\n    arrKeys.forEach((key) => {\r\n      if (validatedFields[key]) {\r\n        if (validatedFields[key].rule.required) {\r\n          if (!data[key]) {\r\n            isValid = false\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    return isValid\r\n  }\r\n\r\n  async function handleFormSubmit(form: any): Promise<any> {\r\n    // this function will be triggered by the submit event\r\n    const isValid = Object.values(errors).every((x) => x === '') && formIsValid()\r\n    if (isValid) {\r\n      return form(values, handleSuccess, handleError)\r\n    }\r\n\r\n    return errors\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    formIsValid,\r\n    values,\r\n    handleInputValue,\r\n    handleFormSubmit,\r\n    handleListValue,\r\n    handleReset,\r\n    handleResetValidationFields,\r\n    validate\r\n  }\r\n}\r\n","import React, { memo, useEffect } from 'react'\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, Grid, IconButton, Toolbar, Typography } from '@material-ui/core'\r\n\r\nimport moment from 'moment'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nimport { ITodoForm } from 'pages/TodoList/index.d'\r\n\r\nimport { ISelectJobType } from 'modules/ISelectJobType'\r\nimport { ISelectAssignee } from 'modules/ISelectAssignee'\r\nimport { ISelectPriority } from 'modules/ISelectPriority'\r\nimport Attachment from 'modules/Attachment'\r\nimport { SearchBar } from 'modules/SearchBar'\r\nimport { CompletedTime } from 'modules/CompletedTime'\r\nimport { ISelectRemider } from 'modules/ISelectRemider'\r\nimport { SelectLocation } from 'modules/SelectLocation'\r\n\r\nimport { TextInput } from 'components/TextInput'\r\n\r\nimport { useFormControls } from 'utils/useFormControls'\r\nimport { AttachedFile } from 'utils/form'\r\n\r\nimport {\r\n  BTN_CANCEL,\r\n  BTN_SAVE,\r\n  ERROR_TIME_IN_THE_PAST,\r\n  LABEL_DESCRIPTION,\r\n  LABEL_JOB_NAME,\r\n  MAX_LENGTH_INPUT,\r\n  PLACEHOLDER_ASSIGNEE_SINGLE,\r\n  PLACEHOLDER_JOB_NAME,\r\n  PLACEHOLDER_JOB_TYPE_SINGLE,\r\n  PLACEHOLDER_PRIORITY_SINGLE,\r\n  TIME_FORMAT,\r\n  validationFields,\r\n} from 'constants/common'\r\nimport { currentTime } from 'constants/defaultValue'\r\n\r\nexport const TodoForm = memo(\r\n  (props: ITodoForm): JSX.Element => {\r\n    // State\r\n    const { displayModal, id, item, title, handleCloseModal, handleSubmitForm } = props\r\n\r\n    const {\r\n      handleInputValue,\r\n      handleReset,\r\n      // handleListValue,\r\n      // handleResetValidationFields,\r\n      // handleFormSubmit,\r\n      formIsValid,\r\n      errors,\r\n      values,\r\n      validate,\r\n    } = useFormControls(item, validationFields)\r\n\r\n    useEffect(() => {\r\n      // revalidate when initing page\r\n      let isRequired = true\r\n      // if exist checked all day, not validate completionTimeFrom, completionTimeTo\r\n      if (values.completionAllDay) {\r\n        isRequired = false\r\n      }\r\n\r\n      validationFields.completionTimeFrom.rule.required = isRequired\r\n      validationFields.completionTimeTo.rule.required = isRequired\r\n      validate(validationFields)\r\n    }, [values.completionAllDay])\r\n\r\n    useEffect(() => {\r\n      handleReset(cloneDeep(item))\r\n    }, [item])\r\n\r\n    const onHandleCloseModal = (modal: boolean): void => {\r\n      handleCloseModal(modal)\r\n    }\r\n\r\n    const handleChangeTypeId = (name: string, value: string | number | number[]): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n    const handleChangeName = (name: string, value: string): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n\r\n    const handleChangeAssignTo = (name: string, value: string | number | number[]): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n\r\n    const handleChangePriority = (name: string, value: string | number | number[]): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n    const handleChangeDescription = (name: string, value: string): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n    const handleSetAttachedFiles = (name: string, files: AttachedFile[]): void => {\r\n      handleInputValue(name, files)\r\n    }\r\n\r\n    const handleChangeRelatedType = (name: string, value: string | number): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n\r\n    const handleChangeRelatedTo = (name: string, value?: number | null): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n\r\n    const handleCompletedTimeAllDay = (value: boolean): void => {\r\n      let isRequired = true\r\n      // if exist checked all day, not validate completionTimeFrom, completionTimeTo\r\n      if (values.completionAllDay) {\r\n        isRequired = false\r\n      }\r\n      validationFields.completionTimeFrom.rule.required = !isRequired\r\n      validationFields.completionTimeTo.rule.required = !isRequired\r\n\r\n      handleInputValue('completionAllDay', value, validationFields)\r\n    }\r\n\r\n    const handleCompletedTimeDate = (value?: number): void => {\r\n      handleInputValue('completionTimeDate', value)\r\n    }\r\n\r\n    const handleCompletedTimeFrom = (value?: number): void => {\r\n      handleInputValue('completionTimeFrom', value)\r\n    }\r\n\r\n    const handleCompletedTimeTo = (value?: number | string | undefined): void => {\r\n      handleInputValue('completionTimeTo', value)\r\n    }\r\n\r\n    const handleChangeRemider = (name: string, value: number): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n\r\n    const handleChangeLocation = (name: string, value: string): void => {\r\n      handleInputValue(name, value)\r\n    }\r\n\r\n    const validateSubmitForm = (): boolean => {\r\n      let isDisabled = true\r\n      if (formIsValid()) {\r\n        isDisabled = false\r\n      }\r\n\r\n      return isDisabled\r\n    }\r\n\r\n    const saveTodoTask = async (): Promise<void> => {\r\n      // convert completed time to number\r\n      const { completionAllDay } = values\r\n\r\n      let { completionTimeDate, completionTimeFrom, completionTimeTo, reminderTime } = values\r\n      if (completionAllDay) {\r\n        completionTimeFrom = null\r\n        completionTimeTo = null\r\n        reminderTime = null\r\n      } else {\r\n        if (values.completionTimeFrom < currentTime) {\r\n          alert(ERROR_TIME_IN_THE_PAST)\r\n\r\n          return\r\n        }\r\n\r\n        if (typeof values.completionTimeDate !== 'number') {\r\n          completionTimeDate = moment(values.completionTimeDate)\r\n        }\r\n\r\n        if (typeof values.completionTimeFrom !== 'number') {\r\n          completionTimeFrom = moment(values.completionTimeFrom, TIME_FORMAT)\r\n        }\r\n        if (typeof values.completionTimeTo !== 'number') {\r\n          completionTimeTo = moment(values.completionTimeTo, TIME_FORMAT)\r\n        }\r\n      }\r\n\r\n      const dataPost = {\r\n        ...item,\r\n        ...values,\r\n        completionTimeDate,\r\n        completionTimeFrom,\r\n        completionTimeTo,\r\n        reminderTime,\r\n        taskId: id,\r\n      }\r\n\r\n      handleSubmitForm(dataPost)\r\n    }\r\n\r\n    return (\r\n      <Dialog\r\n        className=\"dialog-container\"\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        open={displayModal}\r\n        scroll=\"body\"\r\n        onClose={() => onHandleCloseModal(displayModal)}\r\n      >\r\n        <Toolbar className=\"dialog-toolbar\">\r\n          <Typography className=\"title\" variant=\"h6\">\r\n            {title}\r\n          </Typography>\r\n          <IconButton className=\"icon-close\" onClick={() => onHandleCloseModal(displayModal)}>\r\n            &times;\r\n          </IconButton>\r\n        </Toolbar>\r\n        <DialogContent className=\"dialog-content\" dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <ISelectJobType placeholder={PLACEHOLDER_JOB_TYPE_SINGLE} errMsg={errors.type} required value={values.type} onChange={handleChangeTypeId} />\r\n            </Grid>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={12}>\r\n              <TextInput\r\n                error={errors.name}\r\n                id=\"name\"\r\n                label={LABEL_JOB_NAME}\r\n                maxLength={MAX_LENGTH_INPUT}\r\n                name=\"name\"\r\n                placeholder={PLACEHOLDER_JOB_NAME}\r\n                required\r\n                type=\"text\"\r\n                value={values.name}\r\n                onChange={handleChangeName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ISelectAssignee\r\n                errMsg={errors.assignedTo}\r\n                placeholder={PLACEHOLDER_ASSIGNEE_SINGLE}\r\n                required\r\n                value={values.assignedTo}\r\n                onChange={handleChangeAssignTo}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ISelectPriority\r\n                errMsg={errors.priority}\r\n                placeholder={PLACEHOLDER_PRIORITY_SINGLE}\r\n                required\r\n                value={values.priority}\r\n                onChange={handleChangePriority}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextInput\r\n                error={errors.description}\r\n                id=\"description\"\r\n                label={LABEL_DESCRIPTION}\r\n                multiline\r\n                name=\"description\"\r\n                required\r\n                rows={4}\r\n                type=\"text\"\r\n                value={values.description}\r\n                onChange={handleChangeDescription}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Attachment\r\n                fileList={values.attachedFiles}\r\n                id=\"attachment\"\r\n                name=\"attachedFiles\"\r\n                onSetFile={handleSetAttachedFiles}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <SearchBar\r\n                assignedTo={values.assignedTo}\r\n                errMsg={errors.relatedTo}\r\n                id={id}\r\n                relatedType={values.relatedType}\r\n                relatedTo={values.relatedTo}\r\n                onChangeRelatedTo={handleChangeRelatedTo}\r\n                onChangeRelatedType={handleChangeRelatedType}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CompletedTime\r\n                error={errors}\r\n                id=\"completedTime\"\r\n                name=\"completedTime\"\r\n                completionAllDay={values.completionAllDay}\r\n                completionTimeDate={values.completionTimeDate}\r\n                completionTimeFrom={values.completionTimeFrom}\r\n                completionTimeTo={values.completionTimeTo}\r\n                onChangeCompletedTimeAllDay={handleCompletedTimeAllDay}\r\n                onChangeCompletedTimeDate={handleCompletedTimeDate}\r\n                onChangeCompletedTimeFrom={handleCompletedTimeFrom}\r\n                onChangeCompletedTimeTo={handleCompletedTimeTo}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ISelectRemider\r\n                disabled={values.completionAllDay}\r\n                value={values.reminderTime}\r\n                onChange={handleChangeRemider}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={12}>\r\n              <SelectLocation\r\n                errMsg={errors.location}\r\n                value={values.location}\r\n                onChange={handleChangeLocation}\r\n                onInputChange={handleChangeLocation}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions className=\"dialog-actions\">\r\n          <Button autoFocus variant=\"outlined\" onClick={() => onHandleCloseModal(displayModal)}>\r\n            {BTN_CANCEL}\r\n          </Button>\r\n          <Button autoFocus color=\"primary\" disabled={validateSubmitForm()} variant=\"contained\" onClick={saveTodoTask}>\r\n            {BTN_SAVE}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  },\r\n)\r\n","import { Stomp, CompatClient } from '@stomp/stompjs'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport SockJS from 'sockjs-client'\r\nimport { getUserInfo } from 'utils/util'\r\n\r\nconst URL = process.env.REACT_APP_TASK_TRACKING_URL || ''\r\nconst EVENT_SOURCE_CODE = process.env.REACT_APP_TASK_TRACKING_EVENT_SOURCE_CODE || ''\r\nconst EVENT_APP_CODE = process.env.REACT_APP_TASK_TRACKING_EVENT_APP_CODE || ''\r\nconst DESTINATION = process.env.REACT_APP_TASK_TRACKING_DESTINATION || ''\r\n\r\nclass TaskTrackingService {\r\n  public client: CompatClient | null = null\r\n\r\n  public isConnected = false\r\n\r\n  public isConnecting = false\r\n\r\n  public async connect(): Promise<void> {\r\n    return new Promise((rs, rj) => {\r\n      this.isConnecting = true\r\n\r\n      this.client = Stomp.over(function() {\r\n        return new SockJS(URL)\r\n      })\r\n\r\n      this.client.debug = () => null\r\n\r\n      this.client.connect(\r\n        {},\r\n        () => {\r\n          this.isConnecting = false\r\n          this.isConnected = true\r\n          rs()\r\n        },\r\n        () => {\r\n          this.isConnecting = false\r\n          rj()\r\n        },\r\n        () => {\r\n          this.isConnected = false\r\n        },\r\n      )\r\n    })\r\n  }\r\n\r\n  public disconnect(): void {\r\n    if (this.client) {\r\n      this.client.disconnect(() => {\r\n        this.isConnected = false\r\n      })\r\n    }\r\n  }\r\n\r\n  public waitForOpenConnection = (): Promise<void> => {\r\n    return new Promise((resolve, reject) => {\r\n      const maxNumberOfAttempts = 40\r\n      const intervalTime = 300\r\n      let currentAttempt = 0\r\n\r\n      if (this.isConnected) {\r\n        resolve()\r\n        return\r\n      }\r\n\r\n      const interval = setInterval(() => {\r\n        if (currentAttempt > maxNumberOfAttempts - 1) {\r\n          clearInterval(interval)\r\n          reject(new Error('Maximum number of attempts exceeded'))\r\n        } else if (this.isConnected) {\r\n          clearInterval(interval)\r\n          resolve()\r\n        }\r\n\r\n        currentAttempt += 1\r\n      }, intervalTime)\r\n    })\r\n  }\r\n\r\n  public async sendEvent({\r\n    eventName,\r\n    timestamp,\r\n    eventTransactionId,\r\n    eventData\r\n  }: {\r\n    eventName: string\r\n    timestamp: number\r\n    eventTransactionId: string\r\n    eventData?: {\r\n      [x: string]: any\r\n    }\r\n  }): Promise<void> {\r\n    try {\r\n      if (!this.isConnected && !this.isConnecting) {\r\n        this.connect()\r\n      }\r\n\r\n      await this.waitForOpenConnection()\r\n\r\n      const { userSessionId, token } = getUserInfo()\r\n\r\n      this.client?.send(\r\n        DESTINATION,\r\n        {\r\n          accessToken: token,\r\n          userSessionId,\r\n          requestId: uuidv4()\r\n        },\r\n        JSON.stringify({\r\n          eventTypeCode: eventName,\r\n          eventSourceCode: EVENT_SOURCE_CODE,\r\n          eventAppCode: EVENT_APP_CODE,\r\n          timestamp,\r\n          eventTransactionId,\r\n          uuid: uuidv4(),\r\n          eventData: {\r\n            userSessionId,\r\n            ...eventData\r\n          },\r\n        }),\r\n      )\r\n    // eslint-disable-next-line no-empty\r\n    } catch (error) {\r\n    }\r\n  }\r\n}\r\n\r\nexport default new TaskTrackingService()\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nimport { TodoForm } from 'pages/TodoList/TodoForm'\r\n\r\nimport { IEditTask } from 'modules/EditTask/index.d'\r\n\r\nimport { RESPONSE_GET_SUCCESS } from 'constants/common'\r\nimport { TODO_TASK_UPDATE_DEFAULT_VALUE } from 'constants/defaultValue'\r\n\r\nimport { IToDoTaskDataPost } from 'utils/form'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { getDetailTask, submitEditTask } from 'services/api/Task'\r\nimport taskTrackingService from 'services/taskTrackingService'\r\n\r\nimport 'modules/EditTask/styles.scss'\r\n\r\nconst EditTask = (props: IEditTask): JSX.Element => {\r\n  const { setLoading } = useContext(CommonContext)\r\n\r\n  const { displayModal, id, title, setDisplayModal } = props\r\n  const [todoTask, setTodoTask] = useState<IToDoTaskDataPost>(TODO_TASK_UPDATE_DEFAULT_VALUE)\r\n\r\n  const fetchData = async (): Promise<void> => {\r\n    setLoading(true)\r\n    const resp = await getDetailTask(id)\r\n\r\n    setLoading(false)\r\n    if (resp.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (resp.data) {\r\n        // update options\r\n        setTodoTask(resp.data)\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [id])\r\n\r\n  const handleCloseModal = (modal: boolean, isAddOrUpdate?: boolean): void => {\r\n    // Reset all select child\r\n    setTodoTask(TODO_TASK_UPDATE_DEFAULT_VALUE)\r\n\r\n    setDisplayModal(modal, isAddOrUpdate)\r\n  }\r\n\r\n  const handleSubmitForm = async (dataPost: IToDoTaskDataPost): Promise<void> => {\r\n    // set Loading\r\n    setLoading(true)\r\n\r\n    const resp = await submitEditTask(dataPost)\r\n\r\n    setLoading(false)\r\n\r\n    alert(resp.message)\r\n    if (resp.code === RESPONSE_GET_SUCCESS) {\r\n      // close modal\r\n      handleCloseModal(displayModal, true)\r\n\r\n      taskTrackingService.sendEvent({\r\n        eventName: 'cal_user_edit_task',\r\n        timestamp: +new Date(),\r\n        eventTransactionId: uuidv4(),\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TodoForm\r\n      displayModal={displayModal}\r\n      id={id}\r\n      item={todoTask}\r\n      title={title}\r\n      handleCloseModal={handleCloseModal}\r\n      handleSubmitForm={handleSubmitForm}\r\n      setDisplayModal={setDisplayModal}\r\n      setTodoTask={setTodoTask}\r\n    />\r\n  )\r\n}\r\n\r\nexport default EditTask\r\n","import { useRef, MutableRefObject } from 'react'\r\n\r\nconst useLatestValue = <T>(value: T): MutableRefObject<T> => {\r\n  const ref = useRef<T>(value)\r\n  ref.current = value\r\n  return ref\r\n}\r\n\r\nexport default useLatestValue\r\n","import { useEffect, useRef, useCallback } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport taskTrackingService from 'services/taskTrackingService'\r\nimport useLatestValue from './useLatestValue'\r\n\r\nfunction useViewDetailTaskTracking(task: any): void {\r\n  const eventSource = useRef<string>(localStorage.getItem('view_detail_task_tracking') || 'unknown')\r\n  const eventTransactionId = useRef(uuidv4())\r\n  const currentTask = useLatestValue(task)\r\n\r\n  const trackingEvent = (event: string): void => {\r\n    if (eventSource.current && eventTransactionId.current) {\r\n      const {id, completionAllDay, completionTimeDate, completionTimeFrom, completionTimeTo, reminderTime, status} = currentTask.current || {}\r\n\r\n      taskTrackingService.sendEvent({\r\n        eventName: `cal_user_${event}_view_detail_task`,\r\n        timestamp: +new Date(),\r\n        eventTransactionId: eventTransactionId.current,\r\n        eventData: {\r\n          eventSourceCode: eventSource.current,\r\n          id,\r\n          completionAllDay,\r\n          completionTimeDate,\r\n          completionTimeFrom,\r\n          completionTimeTo,\r\n          reminderTime,\r\n          status\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleVisibilitychange = useCallback(() => {\r\n    if (document.visibilityState === 'hidden') {\r\n      trackingEvent('end')\r\n    } else {\r\n      trackingEvent('start')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.removeItem('view_detail_task_tracking')\r\n\r\n    taskTrackingService.connect()\r\n\r\n    trackingEvent('start')\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilitychange)\r\n\r\n    return () => {\r\n      trackingEvent('end')\r\n\r\n      taskTrackingService.disconnect()\r\n\r\n      document.removeEventListener('visibilitychange', handleVisibilitychange)\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default useViewDetailTaskTracking\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Grid, Paper } from '@material-ui/core'\r\n\r\nimport { TAttachedFile } from 'pages/TodoDetail/index.d'\r\n\r\nimport { TCommentCategoryContent } from 'modules/TCommentCategoryContent'\r\nimport { IViewJobType } from 'modules/IViewJobType'\r\nimport { IViewStatus } from 'modules/IViewStatus'\r\nimport { IViewPriority } from 'modules/IViewPriority'\r\nimport { IViewCompletedTime } from 'modules/IViewCompletedTime'\r\nimport { IViewReminder } from 'modules/IViewReminder'\r\nimport { IViewDescription } from 'modules/IViewDescription'\r\nimport { IViewRelatedTo } from 'modules/IViewRelatedTo'\r\nimport { IViewLocation } from 'modules/IViewLocation'\r\nimport { IViewCreatedDate } from 'modules/IViewCreatedDate'\r\nimport { IViewAssigner } from 'modules/IViewAssigner'\r\nimport { IViewAssignedTo } from 'modules/IViewAssignedTo'\r\n\r\nimport { TButton } from 'components/TButton/index'\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle/index'\r\n\r\nimport {\r\n  BTN_CANCEL_TODO,\r\n  BTN_UPDATE_TODO,\r\n  FeatureCodeType,\r\n  IMAGE_TYPE,\r\n  LABEL_ASSIGNED_DATE,\r\n  LABEL_ASSIGNED_UPDATED_DATE,\r\n  LABEL_ASSIGNEE,\r\n  LABEL_ASSIGNER,\r\n  PAGE_DETAIL,\r\n  RESPONSE_GET_SUCCESS,\r\n  TITLE_COMMENT_COMPLETED,\r\n  TITLE_COMMENT_CANCELED,\r\n  BTN_COMPLETE_TODO,\r\n  TaskStatusType,\r\n  EDIT_CREATE_TASK,\r\n  ATTACHED_FILES,\r\n} from 'constants/common'\r\nimport { DEFAULT_ATTACHED_FILES, TASK_DETAIL_DEFAULT_VALUE } from 'constants/defaultValue'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { getDetailTask } from 'services/api/Task'\r\nimport { renderAttachedFiles, renderLightbox } from 'utils/renderComponent'\r\n\r\nimport 'pages/TodoDetail/index.scss'\r\nimport CommentTask from 'modules/CommentTask'\r\nimport { ITask } from 'model/task'\r\nimport EditTask from 'modules/EditTask'\r\nimport { TPERMISSION } from 'services/api/api'\r\n\r\nimport useViewDetailTaskTracking from 'utils/useViewDetailTaskTracking'\r\n\r\nexport const TodoDetail = (): JSX.Element => {\r\n  const { checkPermission, setLoading } = useContext(CommonContext)\r\n\r\n  const [open, setOpen] = useState<boolean>(false)\r\n  const [photoIndex, setPhotoIndex] = useState<number>(0)\r\n  const [modalTaskCompleted, setModalTaskCompleted] = useState<boolean>(false)\r\n  const [modalTaskCanceled, setModalTaskCanceled] = useState<boolean>(false)\r\n  const [title, setTitle] = useState<string>('')\r\n  const [displayEditModal, setDisplayEditModal] = useState<boolean>(false)\r\n  const [item, setItem] = useState<ITask>(TASK_DETAIL_DEFAULT_VALUE)\r\n  const [isAddOrUpdate, setIsAddOrUpdate] = useState<boolean>(false)\r\n\r\n  const [listFiles, setListFiles] = useState<TAttachedFile>(DEFAULT_ATTACHED_FILES)\r\n  useEffect(() => {\r\n    const filterRemainFiles = item.attachedFiles.filter((f) => ATTACHED_FILES.indexOf(f.type.toLowerCase()) > -1)\r\n    if (filterRemainFiles.length > 0) {\r\n      listFiles.mFile = [...listFiles.mFile, ...filterRemainFiles]\r\n    }\r\n    const filterImages = item.attachedFiles.filter((f) => IMAGE_TYPE.indexOf(f.type.toLowerCase()) > -1)\r\n    if (filterImages.length > 0) {\r\n      listFiles.image = [...listFiles.image, ...filterImages]\r\n    }\r\n\r\n    setListFiles(listFiles)\r\n  }, [item])\r\n\r\n  const { id } = useParams<{ id: string }>()\r\n\r\n  useViewDetailTaskTracking({\r\n    id,\r\n    ...item\r\n  })\r\n\r\n  const fetchData = async (): Promise<void | JSX.Element | TPERMISSION> => {\r\n    setLoading(true)\r\n    const getPermission = await checkPermission('read')\r\n    if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n      alert(getPermission.message)\r\n      window.location.href = '/401-not-permission'\r\n\r\n      return\r\n    }\r\n\r\n    const response = await getDetailTask(Number(id))\r\n\r\n    setLoading(false)\r\n    if (response.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (response.data) {\r\n        // update options\r\n        setItem(response.data)\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // reload list to get updated data\r\n    if (isAddOrUpdate) {\r\n      fetchData()\r\n    }\r\n  }, [isAddOrUpdate])\r\n\r\n  const handleCompletedTask = async (): Promise<void | JSX.Element> => {\r\n    const getPermission = await checkPermission('update')\r\n    if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n      alert(getPermission.message)\r\n\r\n      return\r\n    }\r\n\r\n    setModalTaskCompleted(true)\r\n  }\r\n\r\n  const handleCancelTask = async (): Promise<void | JSX.Element> => {\r\n    const getPermission = await checkPermission('update')\r\n    if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n      alert(getPermission.message)\r\n\r\n      return\r\n    }\r\n\r\n    setModalTaskCanceled(true)\r\n  }\r\n\r\n  const toggleLightBox = (i: number): number => {\r\n    setOpen(!open)\r\n    setPhotoIndex(i)\r\n\r\n    return i\r\n  }\r\n\r\n  const toggleEditModal = async (status: boolean, taskTitle: string, isUpdate?: boolean): Promise<void> => {\r\n    if (status) {\r\n      const getPermission = await checkPermission('update')\r\n      if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n        alert(getPermission.message)\r\n\r\n        return\r\n      }\r\n    }\r\n\r\n    setDisplayEditModal(status)\r\n    setTitle(taskTitle)\r\n\r\n    if (isUpdate) {\r\n      setIsAddOrUpdate(isUpdate)\r\n    }\r\n  }\r\n  const handleUpdateTask = (): void => {\r\n    toggleEditModal(!displayEditModal, EDIT_CREATE_TASK)\r\n  }\r\n  const renderActionButtons = (status?: number): JSX.Element | false => {\r\n    return (\r\n      status === TaskStatusType.INCOMPLETE && (\r\n        <Grid className=\"action-buttons\" container direction=\"row-reverse\">\r\n          <TButton className=\"btn-cancel\" label={BTN_CANCEL_TODO} variant=\"contained\" onClick={handleCancelTask} />\r\n          <TButton className=\"btn-update\" label={BTN_UPDATE_TODO} variant=\"contained\" onClick={handleUpdateTask} />\r\n          <TButton className=\"btn-create\" label={BTN_COMPLETE_TODO} variant=\"contained\" onClick={handleCompletedTask} />\r\n        </Grid>\r\n      )\r\n    )\r\n  }\r\n\r\n  const renderEditTask = (): JSX.Element | false => {\r\n    return (\r\n      displayEditModal && (\r\n        <EditTask\r\n          id={Number(id)}\r\n          displayModal={displayEditModal}\r\n          title={title}\r\n          setDisplayModal={(status, isUpdate) => toggleEditModal(!status, '', isUpdate)}\r\n        />\r\n      )\r\n    )\r\n  }\r\n\r\n  if (!id || !item.name) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TTitle className=\"page-title\" title={PAGE_DETAIL} variant=\"h1\" />\r\n\r\n      <Paper elevation={3} className=\"content mt-10\">\r\n        {renderActionButtons(item.status)}\r\n\r\n        <Grid className=\"title-container\" container>\r\n          <TTitle variant=\"h6\" title={item.name} />\r\n        </Grid>\r\n\r\n        <div className=\"page-detail\">\r\n          <Grid container>\r\n            <Grid item xs={8}>\r\n              <Grid className=\"mt-10\" container>\r\n                <Grid item xs={3}>\r\n                  <IViewJobType value={item.typeName} />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <IViewStatus value={item.status} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-30\" container>\r\n                <Grid item xs={3}>\r\n                  <IViewPriority value={item.priority} />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <IViewCompletedTime\r\n                    isAllDay={item.completionAllDay}\r\n                    timeFrom={item.completionTimeFrom}\r\n                    timeTo={item.completionTimeTo}\r\n                    timeDate={item.completionTimeDate}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <IViewReminder value={item.reminderTime} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-30\" container>\r\n                <IViewDescription value={item.description} />\r\n              </Grid>\r\n              <Grid className=\"mt-20\" container>\r\n                <Grid item xs={6}>\r\n                  <IViewRelatedTo relatedTo={item.relatedTo} relatedType={item.relatedType} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <IViewLocation value={item.location} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid className=\"mt-30\" container>\r\n                <Grid item xs={3}>\r\n                  <IViewAssigner label={LABEL_ASSIGNER} value={item.assignorId} assignorName={item.assignorName} />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <IViewCreatedDate label={LABEL_ASSIGNED_DATE} value={item.createdDate} />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <IViewAssignedTo\r\n                    label={LABEL_ASSIGNEE}\r\n                    value={item.assignedTo}\r\n                    assignedToName={item.assignedToName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <IViewCreatedDate label={LABEL_ASSIGNED_UPDATED_DATE} value={item.updatedDate} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <TCommentCategoryContent id={Number(id)} status={item.status} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className=\"mt-40 attached-files\" item xs={4}>\r\n              <TLabelValue label=\"Đính kèm\" value={renderAttachedFiles(listFiles, toggleLightBox)} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {renderLightbox(open, listFiles.image, photoIndex, setOpen, setPhotoIndex)}\r\n      </Paper>\r\n      {/* Edit Task */}\r\n      {renderEditTask()}\r\n      {/* Comment task completed */}\r\n      <CommentTask\r\n        displayModal={modalTaskCompleted}\r\n        id={Number(id)}\r\n        createdBy={Number(item.createdBy)}\r\n        featureCode={FeatureCodeType.COMPLETED}\r\n        setDisplayModal={(status) => setModalTaskCompleted(!status)}\r\n        title={TITLE_COMMENT_COMPLETED}\r\n      />\r\n      {/* Comment task canceled */}\r\n      <CommentTask\r\n        displayModal={modalTaskCanceled}\r\n        id={Number(id)}\r\n        createdBy={Number(item.createdBy)}\r\n        featureCode={FeatureCodeType.CANCELED}\r\n        setDisplayModal={(status) => setModalTaskCanceled(!status)}\r\n        title={TITLE_COMMENT_CANCELED}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nimport { TodoForm } from 'pages/TodoList/TodoForm'\r\n\r\nimport { ICreateTask } from 'modules/CreateTask/index.d'\r\n\r\nimport { IToDoTaskDataPost } from 'utils/form'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { submitCreateTask } from 'services/api/Task'\r\nimport taskTrackingService from 'services/taskTrackingService'\r\n\r\nimport { RESPONSE_GET_SUCCESS } from 'constants/common'\r\n\r\nimport 'modules/CreateTask/styles.scss'\r\n\r\nconst CreateTask = (props: ICreateTask): JSX.Element => {\r\n  const { setLoading } = useContext(CommonContext)\r\n\r\n  const { dataPost, displayModal, title, handleListValue, setDisplayModal } = props\r\n\r\n  const handleCloseModal = (modal: boolean, isAddOrUpdate?: boolean): void => {\r\n    setDisplayModal(modal, isAddOrUpdate)\r\n  }\r\n\r\n  const handleSubmitForm = async (data: IToDoTaskDataPost): Promise<void> => {\r\n    // set Loading\r\n    setLoading(true)\r\n\r\n    const resp = await submitCreateTask(data)\r\n\r\n    setLoading(false)\r\n\r\n    alert(resp.message)\r\n    if (resp.code === RESPONSE_GET_SUCCESS) {\r\n      // close modal\r\n      handleCloseModal(displayModal, true)\r\n\r\n      taskTrackingService.sendEvent({\r\n        eventName: 'cal_user_create_task',\r\n        timestamp: +new Date(),\r\n        eventTransactionId: uuidv4(),\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TodoForm\r\n      displayModal={displayModal}\r\n      item={dataPost}\r\n      title={title}\r\n      handleCloseModal={(status: boolean) => handleCloseModal(status)}\r\n      handleSubmitForm={handleSubmitForm}\r\n      setDisplayModal={setDisplayModal}\r\n      setTodoTask={handleListValue}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CreateTask\r\n","import React, { useCallback, useEffect, useState, useMemo } from 'react'\r\n\r\nimport { ISelectStatusProps } from 'modules/ISelectStatus/index.d'\r\nimport { getStatusList } from 'services/api/GetOptions'\r\n\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\n\r\nimport { parseOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nimport { LABEL_STATUS, RESPONSE_GET_SUCCESS, PLACEHOLDER_STATUS, PLACEHOLDER_STATUS_HAS_VALUE } from 'constants/common'\r\n\r\nexport const ISelectStatus = (props: ISelectStatusProps): JSX.Element => {\r\n  const { errMsg, multiple, placeholder = PLACEHOLDER_STATUS, required, value, onChange } = props\r\n\r\n  const itemName = 'status'\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_STATUS_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    let hasData = false\r\n    const items = await getStatusList()\r\n\r\n    if (!hasData && items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        hasData = true\r\n        // parse response items\r\n        let parseData = parseOptions(itemName, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [optionItems])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleChange = (name: string, val: null | number | number[]): void => {\r\n    if (multiple) {\r\n      onChange(name, val as number[])\r\n    } else {\r\n      onChange(name, val ? [val as number] : [])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TAutocomplete\r\n      error={errMsg}\r\n      id={itemName}\r\n      label={LABEL_STATUS}\r\n      multiple={multiple}\r\n      name={itemName}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      required={required}\r\n      value={value}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState, useMemo } from 'react'\r\n\r\nimport isArray from 'lodash/isArray'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { ISelectTeamProps } from 'modules/ISelectTeam/index.d'\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\n\r\nimport { getTeamList } from 'services/api/GetOptions'\r\n\r\nimport { LABEL_TEAM, RESPONSE_GET_SUCCESS, PLACEHOLDER_TEAM, PLACEHOLDER_TEAM_HAS_VALUE } from 'constants/common'\r\n\r\nimport { parseTeamOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nexport const ISelectTeam = (props: ISelectTeamProps): JSX.Element => {\r\n  const { setLoading } = useContext(CommonContext)\r\n\r\n  const { errMsg, multiple, placeholder = PLACEHOLDER_TEAM, required, value, zoneIds, onChange } = props\r\n  const convertToNumber = (isArray(value) && value) || ''\r\n\r\n  const itemName = 'teamIds'\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_TEAM_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    let parseData: IOption[] = []\r\n    if (zoneIds && zoneIds.length > 0) {\r\n      setLoading(true)\r\n      const items = await getTeamList(zoneIds)\r\n      setLoading(false)\r\n\r\n      if (items.code === RESPONSE_GET_SUCCESS) {\r\n        // check data exist and length\r\n        if (items.data || (items.data && items.data.length > 0)) {\r\n          // parse response items\r\n          parseData = parseTeamOptions(itemName, items.data)\r\n        }\r\n      }\r\n    }\r\n\r\n    // update options\r\n    setOptionItems(parseData)\r\n  }, [zoneIds])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [zoneIds])\r\n\r\n  const handleChange = (name: string, val: null | number | number[]): void => {\r\n    if (multiple) {\r\n      onChange(name, val as number[])\r\n    } else {\r\n      onChange(name, val ? [val as number] : [])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TAutocomplete\r\n      error={errMsg}\r\n      id={itemName}\r\n      label={LABEL_TEAM}\r\n      multiple={multiple}\r\n      name={itemName}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      required={required}\r\n      value={convertToNumber}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState, useMemo } from 'react'\r\n\r\nimport isArray from 'lodash/isArray'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { ISelectZoneProps } from 'modules/ISelectZone/index.d'\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\n\r\nimport { getZoneList } from 'services/api/GetOptions'\r\n\r\nimport { LABEL_ZONE, RESPONSE_GET_SUCCESS, PLACEHOLDER_ZONE, PLACEHOLDER_ZONE_HAS_VALUE } from 'constants/common'\r\n\r\nimport { parseZoneOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nexport const ISelectZone = (props: ISelectZoneProps): JSX.Element => {\r\n  const { setLoading } = useContext(CommonContext)\r\n\r\n  const { errMsg, multiple, placeholder = PLACEHOLDER_ZONE, required, value, onChange } = props\r\n  const convertToNumber = (isArray(value) && value) || ''\r\n\r\n  const itemName = 'zoneIds'\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_ZONE_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    setLoading(true)\r\n    const items = await getZoneList()\r\n    setLoading(false)\r\n\r\n    if (items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        // parse response items\r\n        const parseData = parseZoneOptions(itemName, items.data)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [optionItems])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleChange = (name: string, val: null | number | number[]): void => {\r\n    if (multiple) {\r\n      onChange(name, val as number[])\r\n    } else {\r\n      onChange(name, val ? [val as number] : [])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TAutocomplete\r\n      error={errMsg}\r\n      id={itemName}\r\n      label={LABEL_ZONE}\r\n      multiple={multiple}\r\n      name={itemName}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      required={required}\r\n      value={convertToNumber}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo } from 'react'\r\n\r\nimport isArray from 'lodash/isArray'\r\n\r\nimport { ISelectDepartmentProps } from 'modules/ISelectDepartment/index.d'\r\nimport { TAutocomplete } from 'components/TAutocomplete'\r\n\r\nimport { getDepartmentList } from 'services/api/GetOptions'\r\n\r\nimport { parseDepartmentOptions } from 'utils/renderComponent'\r\nimport { IOption } from 'utils/form'\r\nimport { isNotEmpty } from 'utils/util'\r\n\r\nimport {\r\n  LABEL_DEPARTMENT,\r\n  RESPONSE_GET_SUCCESS,\r\n  PLACEHOLDER_DEPARTMENT,\r\n  PLACEHOLDER_DEPARTMENT_HAS_VALUE,\r\n} from 'constants/common'\r\n\r\nexport const ISelectDepartment = (props: ISelectDepartmentProps): JSX.Element => {\r\n  const { errMsg, multiple, placeholder = PLACEHOLDER_DEPARTMENT, required, value, onChange } = props\r\n  const convertToNumber = (isArray(value) && value) || ''\r\n\r\n  const itemName = 'departmentIds'\r\n\r\n  const memoPlaceholder = useMemo(() => {\r\n    return isNotEmpty(value) ? PLACEHOLDER_DEPARTMENT_HAS_VALUE : placeholder\r\n  }, [placeholder, value])\r\n\r\n  const [optionItems, setOptionItems] = useState<IOption[]>([])\r\n\r\n  const fetchData = useCallback(async (): Promise<void> => {\r\n    let hasData = false\r\n    const items = await getDepartmentList()\r\n\r\n    if (!hasData && items.code === RESPONSE_GET_SUCCESS) {\r\n      // check data exist and length\r\n      if (items.data || (items.data && items.data.length > 0)) {\r\n        hasData = true\r\n        // parse response items\r\n        let parseData = parseDepartmentOptions(itemName, items.data)\r\n        parseData = optionItems.concat(parseData)\r\n\r\n        // update options\r\n        setOptionItems(parseData)\r\n      }\r\n    }\r\n  }, [optionItems])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleChange = (name: string, val: null | number | number[]): void => {\r\n    if (multiple) {\r\n      onChange(name, val as number[])\r\n    } else {\r\n      onChange(name, val ? [val as number] : [])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TAutocomplete\r\n      error={errMsg}\r\n      id={itemName}\r\n      label={LABEL_DEPARTMENT}\r\n      multiple={multiple}\r\n      name={itemName}\r\n      option={optionItems}\r\n      placeholder={memoPlaceholder}\r\n      required={required}\r\n      value={convertToNumber}\r\n      onChange={handleChange}\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { ButtonGroup, Grid, Typography } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { DateRangePicker, Range } from 'react-date-range'\r\n\r\nimport { TSelectWithNumberFormat } from 'modules/TSelectWithNumberFormat'\r\nimport { IFilterAdvanceProps } from 'modules/IFilterAdvance/index.d'\r\n\r\nimport { TButton } from 'components/TButton'\r\n\r\nimport {\r\n  TITLE_CREATE_TASK,\r\n  LABEL_DAY,\r\n  LABEL_LIST,\r\n  LABEL_MONTH,\r\n  LABEL_WEEK,\r\n  DATE_FORMAT_MAIN,\r\n} from 'constants/common'\r\nimport { OPTIONS_GROUP_BY } from 'constants/defaultValue'\r\n\r\nimport { parseGroupByOptions } from 'utils/renderComponent'\r\n\r\nimport 'react-date-range/dist/styles.css' // main style file\r\nimport 'react-date-range/dist/theme/default.css' // theme css file\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  buttonGroup: {\r\n    marginBottom: '16px',\r\n    marginRight: '10px',\r\n\r\n    '& button': {\r\n      margin: '0 !important'\r\n    }\r\n  },\r\n  agendaButton: {\r\n    margin: '0 !important'\r\n  },\r\n  groupByButton: {\r\n    minWidth: '160px'\r\n  }\r\n}))\r\n\r\n\r\nexport const IFilterAdvance = (props: IFilterAdvanceProps): JSX.Element => {\r\n  const { values, onChange, onChangeAgenda, onToggleModal } = props\r\n  const classes = useStyles()\r\n\r\n  const [toggleDatePicker, setToggleDatePicker] = useState<boolean>(false)\r\n  const [dateRange, setDateRange] = useState<Range[]>()\r\n\r\n  useEffect(() => {\r\n    setDateRange([\r\n      {\r\n        startDate: moment(values.fromDate).toDate(),\r\n        endDate: moment(values.toDate).toDate(),\r\n        key: 'selection',\r\n      }\r\n    ])\r\n  }, [values.fromDate, values.toDate])\r\n  const renderLabelPicker = `${moment(values.fromDate).format(DATE_FORMAT_MAIN)} - ${moment(values.toDate).format(\r\n    DATE_FORMAT_MAIN,\r\n  )}`\r\n\r\n  let clsFlexContainer: 'flex-start' | 'flex-end' = 'flex-end'\r\n  let toggleClsAgendaNavigation = 'hide'\r\n  if (values.view === 'agenda') {\r\n    toggleClsAgendaNavigation = 'show'\r\n    clsFlexContainer = 'flex-start'\r\n  }\r\n\r\n  const renderButtonType = (viewMode: string): JSX.Element => {\r\n    let updateView = 'list'\r\n    if (viewMode === 'list') {\r\n      updateView = 'agenda'\r\n    }\r\n    if (viewMode === 'agenda') {\r\n      updateView = 'list'\r\n    }\r\n\r\n    return <TButton className={classes.agendaButton} disabled={values.view === 'agenda'} label={LABEL_LIST} variant=\"contained\" onClick={() => onChange(updateView)} />\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid className=\"filter-advance\" container spacing={2} justifyContent={clsFlexContainer}>\r\n      <Grid className={`filter-agenda ${toggleClsAgendaNavigation}`} item xs={5}>\r\n        <Grid container>\r\n          <TButton\r\n            className=\"label-picker-btn\"\r\n            label={renderLabelPicker}\r\n            variant=\"outlined\"\r\n            onClick={() => setToggleDatePicker(!toggleDatePicker)}\r\n          />\r\n          {toggleDatePicker && (\r\n            <Typography className=\"date-range-picker\" component=\"div\">\r\n              <DateRangePicker\r\n                direction=\"horizontal\"\r\n                months={2}\r\n                moveRangeOnFirstSelection={false}\r\n                ranges={dateRange}\r\n                onChange={(item: any) => {\r\n                  setDateRange([item.selection])\r\n                  if (item.selection.startDate !== item.selection.endDate) {\r\n                    onChangeAgenda(item.selection)\r\n                    setToggleDatePicker(false)\r\n                  }\r\n                }}\r\n              />\r\n            </Typography>\r\n          )}\r\n          <TSelectWithNumberFormat\r\n            id=\"filterGroupBy\"\r\n            name=\"groupBy\"\r\n            className={classes.groupByButton}\r\n            options={parseGroupByOptions(OPTIONS_GROUP_BY)}\r\n            value={values.groupBy}\r\n            onChange={onChange}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className=\"filter-type\" item xs={7}>\r\n        <Grid>\r\n          <ButtonGroup className={classes.buttonGroup} aria-label=\"outlined primary button group\">\r\n            <TButton\r\n              disabled={values.view === 'day'}\r\n              label={LABEL_DAY}\r\n              variant=\"contained\"\r\n              onClick={() => onChange('day', 'list')}\r\n            />\r\n            <TButton\r\n              disabled={values.view === 'week'}\r\n              label={LABEL_WEEK}\r\n              variant=\"contained\"\r\n              onClick={() => onChange('week', 'list')}\r\n            />\r\n            <TButton\r\n              disabled={values.view === 'month'}\r\n              label={LABEL_MONTH}\r\n              variant=\"contained\"\r\n              onClick={() => onChange('month', 'list')}\r\n            />\r\n          </ButtonGroup>\r\n\r\n          {renderButtonType(values.mode)}\r\n\r\n          <TButton\r\n            className=\"btn-add\"\r\n            color=\"primary\"\r\n            label={TITLE_CREATE_TASK}\r\n            startIcon={<Add />}\r\n            variant=\"outlined\"\r\n            onClick={() => onToggleModal(true)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport { IFilterHeaderProps } from 'modules/IFilterHeader/index.d'\r\n\r\nimport { ISelectJobType } from 'modules/ISelectJobType'\r\nimport { ISelectPriority } from 'modules/ISelectPriority'\r\nimport { ISelectStatus } from 'modules/ISelectStatus'\r\nimport { ISelectTeam } from 'modules/ISelectTeam'\r\nimport { ISelectZone } from 'modules/ISelectZone'\r\nimport { ISelectDepartment } from 'modules/ISelectDepartment'\r\nimport { ISelectAssignee } from 'modules/ISelectAssignee'\r\n\r\nimport { IFilterAdvance } from 'modules/IFilterAdvance'\r\n\r\nimport 'modules/IFilterHeader/index.scss'\r\n\r\nimport { TButton } from 'components/TButton'\r\n\r\nexport const IFilterHeader = (props: IFilterHeaderProps): JSX.Element => {\r\n  const {\r\n    values,\r\n    onApplyAdvanceFilter,\r\n    onCancel,\r\n    onChange,\r\n    onChangeDateAgenda,\r\n    onReset,\r\n    onSearch,\r\n    onToggleModal,\r\n    setAssignedToIds\r\n  } = props\r\n\r\n  const [toggleHeaderFilter, setToggleHeaderFilter] = useState<boolean>(false)\r\n\r\n  let classFilter = ''\r\n  let showStatus = 'hide'\r\n  if (toggleHeaderFilter) {\r\n    classFilter = 'hide'\r\n    showStatus = ''\r\n  }\r\n\r\n  const handleCancelFilter = (): void => {\r\n    return onCancel()\r\n  }\r\n\r\n  return (\r\n    <Grid className=\"filter-container\" container>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={9}>\r\n            <Typography className=\"filter-tool\" component=\"div\">\r\n              <Typography component=\"h3\">Công cụ tìm kiếm</Typography>\r\n              <Typography\r\n                className={`toggle-header ${classFilter}`}\r\n                component=\"span\"\r\n                onClick={() => setToggleHeaderFilter(true)}\r\n              >\r\n                Ẩn\r\n              </Typography>\r\n              <Typography\r\n                className={`toggle-header ${showStatus}`}\r\n                component=\"span\"\r\n                onClick={() => setToggleHeaderFilter(false)}\r\n              >\r\n                Hiện\r\n              </Typography>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={`action-search-group ${classFilter}`} item xs={3}>\r\n            <TButton className=\"search-btn\" color=\"primary\" variant=\"contained\" label=\"Tìm kiếm\" onClick={onSearch} />\r\n            <TButton className=\"cancel-btn\" variant=\"outlined\" label=\"Bỏ lọc\" onClick={handleCancelFilter} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className=\"filter-header\" item xs={12}>\r\n        <Grid className={classFilter} container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <ISelectJobType multiple name=\"types\" value={values.types} onChange={onChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ISelectStatus multiple value={values.status} onChange={onChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ISelectPriority value={values.priority} onChange={onChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ISelectZone value={values.zoneIds} onChange={onChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ISelectTeam value={values.teamIds} zoneIds={values.zoneIds} onChange={onChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ISelectDepartment value={values.departmentIds} onChange={onChange} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ISelectAssignee departmentIds={values.departmentIds} multiple name=\"assignedToIds\" teamIds={values.teamIds} value={values.assignedToIds} zoneIds={values.zoneIds} onChange={onChange} setAssignedToIds={setAssignedToIds} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <IFilterAdvance\r\n          values={values}\r\n          onChange={onApplyAdvanceFilter}\r\n          onChangeAgenda={onChangeDateAgenda}\r\n          onChangeFilter={onChange}\r\n          onReset={onReset}\r\n          onToggleModal={onToggleModal}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nconst usePreviousValue = <T>(value: T): T | null => {\r\n  const prevValue = useRef<T | null>(null)\r\n\r\n  useEffect(() => {\r\n    prevValue.current = value\r\n\r\n    return () => {\r\n      prevValue.current = null\r\n    }\r\n  })\r\n\r\n  return prevValue.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { useEffect, useRef, useCallback } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport taskTrackingService from 'services/taskTrackingService'\r\nimport useLatestValue from './useLatestValue'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\nfunction useCalendarModeTracking(mode: string): void {\r\n  const eventTransactionId = useRef<string | null>(null)\r\n  const prevMode = usePreviousValue(mode)\r\n  const latestMode = useLatestValue(mode)\r\n\r\n  const sendEvent = (eventName: string): void => {\r\n    if (!eventTransactionId.current) {\r\n      return\r\n    }\r\n\r\n    taskTrackingService.sendEvent({\r\n      eventName,\r\n      timestamp: +new Date(),\r\n      eventTransactionId: eventTransactionId.current,\r\n    })\r\n  }\r\n\r\n  const handleModeChange = async (): Promise<void> => {\r\n    if (prevMode && eventTransactionId.current) {\r\n      sendEvent(`cal_user_end_view_calendar_${prevMode}`)\r\n    }\r\n\r\n    eventTransactionId.current = uuidv4()\r\n\r\n    sendEvent(`cal_user_start_view_calendar_${mode}`)\r\n  }\r\n\r\n  const handleVisibilitychange = useCallback(() => {\r\n    if (document.visibilityState === 'hidden') {\r\n      sendEvent(`cal_user_end_view_calendar_${latestMode.current}`)\r\n    } else {\r\n      sendEvent(`cal_user_start_view_calendar_${latestMode.current}`)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    handleModeChange()\r\n  }, [mode])\r\n\r\n  useEffect(() => {\r\n    taskTrackingService.connect()\r\n    document.addEventListener('visibilitychange', handleVisibilitychange)\r\n\r\n    return () => {\r\n      taskTrackingService.disconnect()\r\n      document.removeEventListener('visibilitychange', handleVisibilitychange)\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default useCalendarModeTracking\r\n","import React, { useState } from 'react'\r\n\r\nimport { Calendar, momentLocalizer, Event } from 'react-big-calendar'\r\n\r\nimport { Dialog, Typography } from '@material-ui/core'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/vi'\r\n\r\nimport { upperFirst } from 'lodash'\r\n\r\nimport { ICalendarProps, CalendarLanguagesMode } from 'modules/ICalendar/index.d'\r\n\r\nimport { currentTime } from 'constants/defaultValue'\r\nimport { DAY_HEADER_FORMAT, LABEL_ALL_DAY, MONTH_HEADER_FORMAT, LANGUAGES, TASK } from 'constants/common'\r\n\r\nimport { CustomToolbar, MyCustomHeader, MyEvent, MyMoreEvent } from 'utils/renderComponent'\r\nimport { TNavigate } from 'utils/renderComponent.d'\r\nimport useCalendarModeTracking from 'utils/useCalendarModeTracking'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'modules/ICalendar/index.scss'\r\nimport { convertDateText, getStartDate } from 'utils/util'\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nmoment.locale(LANGUAGES[0])\r\nconst mlocalizer = momentLocalizer(moment)\r\n\r\nconst messages: CalendarLanguagesMode = {\r\n  vi: {\r\n    showMore: (total: number) => `+${total} ${TASK}`,\r\n  },\r\n}\r\n\r\nexport const ICalendar = (props: ICalendarProps): JSX.Element => {\r\n  const { events, filterMode, listViews, onChange, onCreateEvent, onNavigate } = props\r\n\r\n  const [toggleModal, setToggleModal] = useState<boolean>(false)\r\n  const [eventsMore, setEventsMore] = useState<Event[]>([])\r\n  const [dateMore, setDateMore] = useState<Date>()\r\n\r\n  const language = LANGUAGES[0]\r\n\r\n  useCalendarModeTracking(filterMode.view || '')\r\n\r\n  const onToggleShowMore = (data: any, date: Date): void => {\r\n    setToggleModal(!toggleModal)\r\n    setEventsMore(data)\r\n    setDateMore(date)\r\n  }\r\n\r\n  const handleSelectItem = (event: Event): void => {\r\n    localStorage.setItem(\r\n      'view_detail_task_tracking',\r\n      JSON.stringify({\r\n        source: 'calendar',\r\n        mode: filterMode.view || '',\r\n      }),\r\n    )\r\n\r\n    window.open(`/calendar-task/detail/${event.resource.id}`, '_blank')\r\n  }\r\n\r\n  // sort event with view is not agenda\r\n  if (filterMode.view !== 'agenda') {\r\n    events.sort((a: any, b: any) => {\r\n      return b.resource.priority - a.resource.priority\r\n    })\r\n    events.sort((a: any, b: any) => {\r\n      return a.resource.status - b.resource.status\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Typography className=\"big-calendar\" component=\"div\">\r\n      <Calendar\r\n        components={{\r\n          event: MyEvent,\r\n          day: { header: MyCustomHeader },\r\n          week: { header: MyCustomHeader },\r\n          month: { header: MyCustomHeader },\r\n          toolbar: (toolbar) =>\r\n            CustomToolbar({\r\n              mode: filterMode.mode,\r\n              prevView: filterMode.prevView,\r\n              toolbar,\r\n              onHandleNavigate: (data: TNavigate) => onNavigate(data),\r\n            }),\r\n          timeGutterHeader: () => <p>{upperFirst(LABEL_ALL_DAY)}</p>,\r\n        }}\r\n        // culture=\"vi\"\r\n        messages={messages[language]}\r\n        defaultDate={moment(currentTime).toDate()}\r\n        doShowMoreDrillDown={false}\r\n        events={events}\r\n        eventPropGetter={() => {\r\n          return {\r\n            style: {\r\n              background: '#fff',\r\n              color: '#727272',\r\n            },\r\n          }\r\n        }}\r\n        formats={{\r\n          dayHeaderFormat: DAY_HEADER_FORMAT,\r\n          monthHeaderFormat: MONTH_HEADER_FORMAT,\r\n          dayRangeHeaderFormat: (range: { end: Date; start: Date }): string => {\r\n            // for week view\r\n            const formatStart = `Ngày ${moment(getStartDate(range.start, 'day')).format('DD MMMM')}`\r\n            const formatEnd = `Ngày ${moment(getStartDate(range.end, 'day')).format('DD MMMM')}`\r\n            const convertFormatEnd = convertDateText(formatEnd)\r\n\r\n            return `${formatStart} - ${convertFormatEnd}`\r\n          },\r\n        }}\r\n        localizer={mlocalizer}\r\n        resourceIdAccessor=\"id\"\r\n        resourceTitleAccessor=\"name\"\r\n        selectable\r\n        tooltipAccessor={() => {\r\n          return ''\r\n        }}\r\n        view={filterMode.view}\r\n        views={listViews}\r\n        onSelectEvent={handleSelectItem}\r\n        onSelectSlot={onCreateEvent}\r\n        onShowMore={(data, date) => onToggleShowMore(data, date)}\r\n        onView={(view) => onChange('view', view)}\r\n      />\r\n\r\n      {toggleModal && (\r\n        <Dialog\r\n          className=\"dialog-container\"\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n          open={toggleModal}\r\n          scroll=\"body\"\r\n          onClose={() => setToggleModal(false)}\r\n        >\r\n          <MyMoreEvent events={eventsMore} date={dateMore} currentMode={filterMode.view} />\r\n        </Dialog>\r\n      )}\r\n    </Typography>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from '@material-ui/core'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { TLabelValue } from 'components/TLabelValue'\r\nimport { TTitle } from 'components/TTitle'\r\n\r\nimport { DATE_FORMAT_MAIN, LABEL_ALL_DAY, NO_OPTIONS, TIME_FORMAT } from 'constants/common'\r\nimport { currentTime, OPTIONS_GROUP_BY } from 'constants/defaultValue'\r\n\r\nimport { renderPriority, renderTrangThai } from 'utils/renderComponent'\r\nimport { Event } from 'react-big-calendar'\r\n\r\nexport const AgendaView = ({ events }: any): any => {\r\n  const handleClickTaskName = (id: number): void => {\r\n    localStorage.setItem(\r\n      'view_detail_task_tracking',\r\n      JSON.stringify({\r\n        source: 'calendar',\r\n        mode: 'agenda',\r\n      }),\r\n    )\r\n\r\n    window.open(`/calendar-task/detail/${id}`, '_blank')\r\n  }\r\n\r\n  const renderGroupAgent = (resource: any, idx?: string): JSX.Element => {\r\n    resource.list.sort((a: any, b: any) => b.priority - a.priority)\r\n    resource.list.sort((a: any, b: any) => a.status - b.status)\r\n    resource.list.sort((a: any, b: any) => b.completionAllDay - a.completionAllDay)\r\n    resource.list.sort((a: any, b: any) => a.completionTimeFrom - b.completionTimeFrom)\r\n    resource.list.sort((a: any, b: any) => a.completionTimeDate - b.completionTimeDate)\r\n\r\n    return resource.list && resource.list.map((item: any, k: number) => {\r\n      const countItems = resource.list.length\r\n\r\n      const key = `todo-agent-${idx}-${k}-${item.assignedTo}`\r\n      let classIsThePast = ''\r\n      // if selected allday\r\n      if (item.completionTimeFrom && item.completionTimeFrom < currentTime) {\r\n        classIsThePast = 'is-the-past'\r\n      }\r\n\r\n      let renderTime = LABEL_ALL_DAY\r\n      if (!item.completionAllDay) {\r\n        if (item.completionTimeFrom < currentTime) {\r\n          classIsThePast = 'is-the-past'\r\n        }\r\n\r\n        const completionTimeFrom = moment(item.completionTimeFrom).format(TIME_FORMAT)\r\n        const completionTimeTo = moment(item.completionTimeTo).format(TIME_FORMAT)\r\n        renderTime = `${completionTimeFrom} - ${completionTimeTo}`\r\n      }\r\n\r\n      let renderAgent = null\r\n      if (k === 0) {\r\n        renderAgent = <TableCell className=\"v-align-top\" rowSpan={countItems} component=\"td\">\r\n          {item.assignedToName} ({countItems})\r\n        </TableCell>\r\n      }\r\n\r\n      return (\r\n        <TableRow className=\"todo-row\" key={key}>\r\n          {renderAgent}\r\n          <TableCell align=\"left\">\r\n            <Typography className={classIsThePast} component=\"div\">\r\n              {moment(item.completionTimeDate).format(DATE_FORMAT_MAIN)}\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCell align=\"left\" className=\"row-time\">\r\n            <Typography className={classIsThePast} component=\"div\">\r\n              {renderTime}\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCell align=\"left\" className=\"row-name\">\r\n            <Typography\r\n              onClick={() => handleClickTaskName(item.id)}\r\n              component=\"a\"\r\n            >\r\n              {item.name}\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCell align=\"right\">\r\n            <TLabelValue className=\"no-padding\" value={renderPriority(item.priority)} />\r\n          </TableCell>\r\n          <TableCell align=\"left\">\r\n            <TLabelValue className=\"no-padding\" value={renderTrangThai(item.status)} />\r\n          </TableCell>\r\n          <TableCell align=\"left\">\r\n            <TLabelValue\r\n              className=\"no-padding\"\r\n              value={<TTitle className=\"item-value\" title={<span>{item.typeName}</span>} />}\r\n            />\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    })\r\n  }\r\n  const renderGroupDate = (resource: any, idx?: string): JSX.Element => {\r\n    resource.list.sort((a: any, b: any) => b.priority - a.priority)\r\n    resource.list.sort((a: any, b: any) => a.status - b.status)\r\n    resource.list.sort((a: any, b: any) => b.completionAllDay - a.completionAllDay)\r\n    resource.list.sort((a: any, b: any) => a.completionTimeFrom - b.completionTimeFrom)\r\n\r\n    return resource.list && resource.list.map((item: any, k: number) => {\r\n      let renderTime = LABEL_ALL_DAY\r\n      if (!item.completionAllDay) {\r\n        const completionTimeFrom = moment(item.completionTimeFrom).format(TIME_FORMAT)\r\n        const completionTimeTo = moment(item.completionTimeTo).format(TIME_FORMAT)\r\n        renderTime = `${completionTimeFrom} - ${completionTimeTo}`\r\n      }\r\n\r\n      const key = `todo-date-${k}-${idx}-${item.completionTimeDate}`\r\n      let classIsThePast = 'row-time'\r\n      // if selected allday\r\n      if (item.completionTimeFrom && item.completionTimeFrom < currentTime) {\r\n        classIsThePast += ' is-the-past'\r\n      }\r\n\r\n      if (!item.completionAllDay) {\r\n        if (item.completionTimeFrom < currentTime) {\r\n          classIsThePast += ' is-the-past'\r\n        }\r\n      }\r\n\r\n      let renderDate = null\r\n      if (k === 0) {\r\n        renderDate = <TableCell className={`${classIsThePast} v-align-top`} rowSpan={resource.list.length}>\r\n          {moment(item.completionTimeDate).format(DATE_FORMAT_MAIN)}\r\n        </TableCell>\r\n      }\r\n\r\n      return (\r\n        <TableRow className=\"todo-row\" key={key}>\r\n          {renderDate}\r\n          <TableCell align=\"left\" className={classIsThePast}>\r\n            {renderTime}\r\n          </TableCell>\r\n          <TableCell align=\"left\" className=\"row-name\">\r\n            {item.name}\r\n          </TableCell>\r\n          <TableCell align=\"right\">\r\n            <TLabelValue className=\"no-padding\" value={renderPriority(item.priority)} />\r\n          </TableCell>\r\n          <TableCell align=\"left\">\r\n            <TLabelValue className=\"no-padding\" value={renderTrangThai(item.status)} />\r\n          </TableCell>\r\n          <TableCell align=\"left\">\r\n            <TLabelValue\r\n              className=\"no-padding\"\r\n              value={<TTitle className=\"item-value\" title={<span>{item.typeName}</span>} />}\r\n            />\r\n          </TableCell>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n            {item.assignedToName}\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderEvent = (ev: Event, k: string): JSX.Element => {\r\n    const { resource } = ev\r\n\r\n    if (resource.groupBy === OPTIONS_GROUP_BY[0].value) {\r\n      return renderGroupAgent(resource, k)\r\n    }\r\n\r\n    return renderGroupDate(resource, k)\r\n  }\r\n\r\n  const renderBody = (data: any): JSX.Element | '' => {\r\n    if (!data || data.length === 0) {\r\n      return (\r\n        <TableRow className=\"todo-row\">\r\n          <TableCell component=\"th\" scope=\"row\">\r\n            {NO_OPTIONS}\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    }\r\n\r\n    return data.map((ev: Event, k: number) => {\r\n      const key = `data-${k}`\r\n      if (ev.resource.list) {\r\n        return renderEvent(ev, key)\r\n      }\r\n\r\n      return (\r\n        <TableRow className=\"todo-row\" key={key}>\r\n          <TableCell component=\"th\" scope=\"row\">&nbsp;</TableCell>\r\n        </TableRow>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TableContainer className=\"agenda-container\" component={Paper}>\r\n      <Table className=\"calendar-list\" aria-label=\"simple table\">\r\n        <TableBody>{renderBody(events)}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nAgendaView.title = (start: Date, { localizer }: any): any => {\r\n  const end = moment(start).add(1, 'month')\r\n  return localizer.format({ start, end }, 'agendaHeaderFormat')\r\n}\r\n\r\nAgendaView.navigate = (date: Date, action: 'PREV' | 'NEXT'): any => {\r\n  const sDate = moment(date).startOf('month').toDate()\r\n  switch (action) {\r\n    case 'PREV':\r\n      return moment(sDate).subtract(1, 'month').toDate()\r\n    case 'NEXT':\r\n      return moment(sDate).add(1, 'month').toDate()\r\n    default:\r\n      return date\r\n  }\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { Event, SlotInfo } from 'react-big-calendar'\r\n\r\nimport { cloneDeep } from 'lodash'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { Range } from 'react-date-range'\r\n\r\nimport { TButton } from 'components/TButton'\r\n\r\nimport CreateTask from 'modules/CreateTask'\r\nimport { IFilterHeader } from 'modules/IFilterHeader'\r\nimport { ICalendar } from 'modules/ICalendar'\r\nimport { AgendaView } from 'modules/IAgendaGroup/CustomAgenda'\r\nimport { IFilterHeaderValues } from 'modules/IFilterHeader/index.d'\r\nimport { IFilterMode, TListViews } from 'modules/ICalendar/index.d'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { BTN_LOAD_MORE, RESPONSE_GET_SUCCESS, TITLE_CREATE_TASK } from 'constants/common'\r\nimport { DEFAULT_VIEWS, TODO_TASK_FILTER_DEFAULT_VALUE, TODO_TASK_UPDATE_DEFAULT_VALUE } from 'constants/defaultValue'\r\n\r\nimport { getEventWithAgendaFilter, getEventWithFilter } from 'services/api/Task'\r\n\r\nimport { useFormControls } from 'utils/useFormControls'\r\nimport { parseCalendarItem } from 'utils/renderComponent'\r\nimport { renderDateFromTo } from 'utils/util'\r\nimport { TNavigate } from 'utils/renderComponent.d'\r\n\r\nimport 'pages/TodoList/index.scss'\r\nimport useLatestValue from 'utils/useLatestValue'\r\n\r\nexport const TodoList = (): JSX.Element => {\r\n  const { currentUserId, checkPermission, setLoading } = useContext(CommonContext)\r\n\r\n  const initialCreateTaskData = cloneDeep(TODO_TASK_UPDATE_DEFAULT_VALUE)\r\n  initialCreateTaskData.assignedTo = currentUserId\r\n\r\n  const [displayModal, setDisplayModal] = useState<boolean>(false)\r\n  const [listViews, setListViews] = useState<TListViews | undefined>(DEFAULT_VIEWS)\r\n  const [events, setEvents] = useState<Event[]>([])\r\n  const [assignedToIds, setAssignedToIds] = useState<number[]>([])\r\n  const [defaultCreateTaskData, setDefaultCreateTaskData] = useState(cloneDeep(initialCreateTaskData))\r\n\r\n  const [agendaPage, setAgendaPage] = useState<number>(0)\r\n  const [toggleLoadMore, setToggleLoadMore] = useState<boolean>(false)\r\n\r\n  const latestEventsValue = useLatestValue(events)\r\n\r\n  const defaultFilterData = {\r\n    ...TODO_TASK_FILTER_DEFAULT_VALUE,\r\n    status: [1], // Set status value = \"Chưa hoàn tất\" on page load\r\n  }\r\n\r\n  const { handleInputValue, handleListValue, handleReset, values } = useFormControls(defaultFilterData, {})\r\n\r\n  // reset default time date after close modal\r\n  useEffect(() => {\r\n    return () => {\r\n      if (displayModal) {\r\n        setDefaultCreateTaskData(cloneDeep(initialCreateTaskData))\r\n        handleReset(TODO_TASK_FILTER_DEFAULT_VALUE)\r\n      }\r\n    }\r\n  }, [displayModal])\r\n\r\n  const fetchData = useCallback(\r\n    async (data?: IFilterHeaderValues | IFilterMode, page = 0): Promise<void | JSX.Element> => {\r\n      // set Loading\r\n      setLoading(true)\r\n      const getPermission = await checkPermission('list')\r\n      if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n        alert(getPermission.message)\r\n        window.location.href = '/401-not-permission'\r\n\r\n        return\r\n      }\r\n\r\n      let dataPost = cloneDeep(values)\r\n      // BE update, not to use 3 fields\r\n      delete dataPost.departmentIds\r\n      delete dataPost.teamIds\r\n      delete dataPost.zoneIds\r\n      delete dataPost.assignedToIdsToDataPost\r\n      if (dataPost.assignedToIds.length === 0) {\r\n        dataPost.assignedToIds = values.assignedToIdsToDataPost\r\n      }\r\n\r\n      if (data) {\r\n        dataPost = {\r\n          ...dataPost,\r\n          ...data,\r\n        }\r\n\r\n        // set fromDate / toDate\r\n        values.fromDate = dataPost.fromDate\r\n        values.toDate = dataPost.toDate\r\n        if (dataPost.view === 'agenda') {\r\n          values.mode = dataPost.view\r\n        }\r\n        values.view = dataPost.view\r\n        handleListValue(values)\r\n      }\r\n\r\n      let getData: Event[] = []\r\n      let items = null\r\n      if (dataPost.view === 'agenda') {\r\n        items = await getEventWithAgendaFilter(dataPost, page)\r\n\r\n        setLoading(false)\r\n        if (items.code === RESPONSE_GET_SUCCESS) {\r\n          // check data exist and length\r\n          if (items.data && items.data.content.length > 0) {\r\n            // update options\r\n            getData = parseCalendarItem(items.data.content, values.groupBy, dataPost.fromDate, dataPost.toDate)\r\n\r\n            if (page > 0 && latestEventsValue) {\r\n              getData = latestEventsValue.current.concat(getData)\r\n            }\r\n          }\r\n\r\n          let toggleLoadMoreBtn = false\r\n          if (page < items.data.totalPages - 1 && items.data.totalPages > 0) {\r\n            toggleLoadMoreBtn = true\r\n          }\r\n          setToggleLoadMore(toggleLoadMoreBtn)\r\n        }\r\n      } else {\r\n        items = await getEventWithFilter(dataPost)\r\n\r\n        setLoading(false)\r\n        if (items.code === RESPONSE_GET_SUCCESS) {\r\n          // check data exist and length\r\n          if (items.data && items.data.length > 0) {\r\n            // update options\r\n            getData = parseCalendarItem(items.data, values.groupBy, dataPost.fromDate, dataPost.toDate)\r\n          }\r\n        }\r\n      }\r\n\r\n      setEvents(getData)\r\n    },\r\n    [values],\r\n  )\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  // reset create form data\r\n  const toggleModal = async (isOpen: boolean, isAddOrUpdate?: boolean): Promise<void> => {\r\n    if (isOpen) {\r\n      // set Loading\r\n      setLoading(true)\r\n      const getPermission = await checkPermission('add')\r\n      setLoading(false)\r\n\r\n      if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n        alert(getPermission.message)\r\n\r\n        return\r\n      }\r\n    }\r\n    if (isAddOrUpdate) {\r\n      await fetchData()\r\n    }\r\n\r\n    setDisplayModal(isOpen)\r\n  }\r\n\r\n  useEffect(() => {\r\n    values.assignedToIdsToDataPost = assignedToIds\r\n    values.assignedToIds = []\r\n\r\n    handleListValue(values)\r\n  }, [assignedToIds])\r\n\r\n  const onCancelFilter = (): void => {\r\n    handleReset(TODO_TASK_FILTER_DEFAULT_VALUE)\r\n  }\r\n\r\n  const onChangeFilter = (name: string, value: any): void => {\r\n    if (value === 'agenda') {\r\n      values.prevView = values.view\r\n      handleInputValue('prevView', values.view)\r\n    }\r\n\r\n    // reset previous selected team\r\n    if (name === 'zoneIds') {\r\n      values.teamIds = []\r\n      handleInputValue('teamIds', values.teamIds)\r\n    }\r\n\r\n    handleInputValue(name, value)\r\n  }\r\n\r\n  const onApplyAdvanceFilter = async (view: string, mode?: string | number): Promise<void> => {\r\n    let getMode = mode\r\n    let getView = view\r\n\r\n    // filter by groupBy\r\n    let { groupBy } = values\r\n    let getFromDate\r\n    let getToDate\r\n    if (mode === 'assignee' || mode === 'date') { // \r\n      // set fromDate / toDate\r\n      const { fromDate, toDate } = renderDateFromTo({ mode, prevView: values.prevView, view })\r\n      getFromDate = fromDate\r\n      getToDate = toDate\r\n      groupBy = mode\r\n      getView = 'agenda'\r\n\r\n      values.view = getView\r\n      values.groupBy = groupBy\r\n      values.fromDate = getFromDate\r\n      values.toDate = getToDate\r\n      handleListValue(values)\r\n    } else {\r\n      // set fromDate / toDate\r\n      const { fromDate, toDate } = renderDateFromTo({ prevView: values.view, view })\r\n      getFromDate = fromDate\r\n      getToDate = toDate\r\n\r\n      // filter by agenda\r\n      if (view === 'agenda') {\r\n        values.prevView = values.view\r\n        handleListValue(values)\r\n\r\n        setListViews({\r\n          ...listViews,\r\n          agenda: AgendaView,\r\n        })\r\n      }\r\n\r\n      // reset page, if switch naviage mode\r\n      setAgendaPage(0)\r\n\r\n      if (view === 'day' || view === 'week' || view === 'month') {\r\n        getMode = 'list'\r\n        values.mode = getMode\r\n      }\r\n    }\r\n\r\n    const dataPost = {\r\n      fromDate: getFromDate,\r\n      groupBy,\r\n      mode: getMode,\r\n      toDate: getToDate,\r\n      view: getView,\r\n    }\r\n\r\n    await fetchData(dataPost)\r\n  }\r\n\r\n  const onHandleFilter = async (): Promise<void> => {\r\n    await fetchData()\r\n  }\r\n\r\n  const onNavigate = async (props: TNavigate): Promise<void> => {\r\n    const dataPost = {\r\n      fromDate: props.fromDate,\r\n      toDate: props.toDate,\r\n    }\r\n\r\n    await fetchData(dataPost)\r\n  }\r\n\r\n  const onCreateEvent = async (slotInfo: SlotInfo): Promise<void> => {\r\n    // set Loading\r\n    setLoading(true)\r\n    const getPermission = await checkPermission('add')\r\n    if (getPermission.code !== RESPONSE_GET_SUCCESS) {\r\n      alert(getPermission.message)\r\n\r\n      return\r\n    }\r\n\r\n    setDefaultCreateTaskData((prev) => ({\r\n      ...prev,\r\n      assignedTo: currentUserId,\r\n      completionTimeDate: moment(slotInfo.start).unix() * 1000,\r\n      completionTimeFrom: moment(slotInfo.start).unix() * 1000,\r\n      completionTimeTo: moment(slotInfo.end).unix() * 1000,\r\n    }))\r\n    setDisplayModal(true)\r\n  }\r\n\r\n  const onChangeDateAgenda = async (range: Range): Promise<void> => {\r\n    values.fromDate = moment(range.startDate).startOf('day').unix() * 1000\r\n    values.toDate = moment(range.endDate).endOf('day').unix() * 1000\r\n\r\n    await fetchData(values)\r\n  }\r\n\r\n  const onSetLoadMore = (page: number): void => {\r\n    setAgendaPage(page)\r\n\r\n    fetchData(values, page)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography className=\"calendar-filter\" component=\"div\">\r\n        <IFilterHeader\r\n          toggleLoadMore={toggleLoadMore}\r\n          values={values}\r\n          onApplyAdvanceFilter={onApplyAdvanceFilter}\r\n          onCancel={onCancelFilter}\r\n          onChange={onChangeFilter}\r\n          onChangeDateAgenda={onChangeDateAgenda}\r\n          onReset={handleReset}\r\n          onSearch={onHandleFilter}\r\n          onToggleModal={toggleModal}\r\n          setAssignedToIds={setAssignedToIds}\r\n        />\r\n        <ICalendar\r\n          events={events}\r\n          filterMode={values}\r\n          listViews={listViews}\r\n          onChange={onChangeFilter}\r\n          onCreateEvent={onCreateEvent}\r\n          onNavigate={onNavigate}\r\n        />\r\n        {values.view === 'agenda' && toggleLoadMore && (<TButton\r\n          className=\"btn-load-more\"\r\n          color=\"primary\"\r\n          label={BTN_LOAD_MORE}\r\n          variant=\"outlined\"\r\n          onClick={() => onSetLoadMore(agendaPage + 1)}\r\n        />)}\r\n      </Typography>\r\n\r\n      <CreateTask\r\n        dataPost={defaultCreateTaskData}\r\n        displayModal={displayModal}\r\n        title={TITLE_CREATE_TASK}\r\n        handleListValue={handleListValue}\r\n        setDisplayModal={(status, isAddOrUpdate) => toggleModal(!status, isAddOrUpdate)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { ILoadingProps } from 'components/ILoading/index.d'\r\n\r\nimport 'components/ILoading/index.scss'\r\n\r\nexport const ILoading = (props: ILoadingProps): JSX.Element => {\r\n  const { status } = props\r\n\r\n  let clsLoading = 'iloading'\r\n  if (status) {\r\n    clsLoading += ' active'\r\n  }\r\n\r\n  return (\r\n    <Typography className={clsLoading} component=\"div\">\r\n      <img src={`${process.env.REACT_APP_PUBLIC_IMAGE_PATH}/loading.svg`} alt=\"Loading\" />\r\n    </Typography>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { Theme } from 'Theme'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport { CommonContext } from 'context/CommonContext'\r\n\r\nimport { PageError401 } from 'pages/Errors/401'\r\nimport { TodoDetail } from 'pages/TodoDetail'\r\nimport { TodoList } from 'pages/TodoList'\r\n\r\nimport { ILoading } from 'components/ILoading'\r\n\r\nimport { getPemissionOnAction } from 'services/api/Task'\r\nimport { ITodoResponse } from 'services/api/api.d'\r\n\r\nimport 'App.scss'\r\n\r\nlet currentUserId = 448\r\nif (process.env.NODE_ENV === 'production') {\r\n  const getWindow: any = (window as any).window\r\n  currentUserId = getWindow.currentUser.userId\r\n}\r\n\r\nexport const App = (): JSX.Element => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [respStatus, setRespStatus] = useState(false)\r\n\r\n  const checkPermission = async (act: string): Promise<ITodoResponse<any>> => {\r\n    // set Loading\r\n    setLoading(true)\r\n    const resp = await getPemissionOnAction(act)\r\n    setLoading(false)\r\n\r\n    return resp\r\n  }\r\n\r\n  const dataItemContext = {\r\n    currentUserId,\r\n    loading,\r\n    respStatus,\r\n    checkPermission,\r\n    setLoading,\r\n    setRespStatus,\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={Theme}>\r\n      <div className=\"App\">\r\n        <CommonContext.Provider value={dataItemContext}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/calendar-task\">\r\n                <TodoList />\r\n              </Route>\r\n              <Route exact path=\"/calendar-task/detail/:id\">\r\n                <TodoDetail />\r\n              </Route>\r\n              <Route path=\"*\" render={PageError401} />\r\n            </Switch>\r\n          </Router>\r\n          <ILoading status={loading} />\r\n        </CommonContext.Provider>\r\n\r\n        {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n\r\n        <HelloWorld color=\"green\" name=\"Tuan 12344\" />\r\n        <CommentView\r\n          onDataChange={onDataChange}\r\n          categoryConfigData={CategoryConfig}\r\n          commentSuggestionResponse={CommentSuggestionResponse}\r\n          errorsConfig={[]}\r\n          onCommentPriceTagChange={onCommentPriceTagChange}\r\n        />\r\n      </header> */}\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { App } from 'App'\r\n\r\nimport reportWebVitals from 'reportWebVitals'\r\n\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('calendar-task'))\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}