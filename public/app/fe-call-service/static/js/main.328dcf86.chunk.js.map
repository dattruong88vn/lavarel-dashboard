{"version":3,"sources":["redux/reducers/callReducer.js","redux/reducers/customerReducer.js","components/ButtonActions.js","models/CustomerModel.js","untils/common.js","containers/CustomerInfo.js","components/Modals/index.js","models/PopupRejectModel.js","containers/PopupRejectCall/PopupRejectCall.js","containers/PopupHistoryCall/PopupHistoryCall.js","containers/Main.js","redux/store.js","App.js","reportWebVitals.js","index.js","apis/client.js","apis/CustomerInfo.js","models/CallActionModel.js","apis/TrackHistoryCall.js","untils/Duration.js","scripts/3CX.js"],"names":["increasement","createAction","setSecond","init3CX","changeStatus","setIntervalId","setIncall","setPhoneNumber","resetState","setIsSHow","setCallType","setToggle","initialState","callId","count","isNewTab","minimize","isShow","inCall","phoneNumber","callType","counter","seconds","minutes","intervalId","pbx_3cx","status","isHold","isMute","isReject","isHistory","propzyId","dataPostUpdateCall","timer","startedDate","endedDate","connectedDate","actionRejectCall","extClientTool","userMakeCall","otherParams","fetchPropzyId","createAsyncThunk","dataPost","a","getPropzyId","response","data","propzyCallId","updateEndTimeInbound","updateEndTime","callReducer","createSlice","name","reducers","state","payload","console","log","code","id","action","type","value","callConfig","extraReducers","builder","addCase","fulfilled","actions","setIsReject","setIsHistory","setDataPost","setTimer","setActionRejectCall","setExtClientTool","hideIsShow","setUserMakeCall","updateCallConfig","fetchListingAsync","phone","getListings","fetchCustomerAsync","getDetailCustomer","CustomerSlice","infoCustomer","listings","listingsClone","keyword","setKeyword","setListings","toggleInfo","hideInfo","ButtonActions","props","dispatch","useDispatch","stateCustomer","useSelector","customer","call","className","onClick","_mute","_holdCall","_endCall","_activeCall","CustomerModel","_renderCustomerInfo","customerName","new_script","src","Promise","resolve","reject","script","document","createElement","addEventListener","e","body","appendChild","new_script_css","href","rel","removeVietnameseTones","str","replace","maskPhone","substring","length","CustomerInfo","useState","setPhoneExistInSystem","heightHeader","setHeightHeader","setIsAgency","prescreenRlistings","leadDeals","_transfer","CallActionModel","stateCall","useEffect","then","getElementsByClassName","clientHeight","heightHead","searchResult","_return","_data","list","map","key","keyIndex","JSON","parse","stringify","defiant","window","snapshot","getSnapshot","found","search","listingsTmp","getRedirectUrl","item","assignedTo","urlRedirect","currentPath","location","origin","currentUser","userId","target","style","lineHeight","statusName","formatDetail","address","color","online","assignedName","voip3CXId","width","position","height","top","overflow","right","boxShadow","backgroundColor","padding","zIndex","class","onChange","event","placeholder","Modals","btnRef","useRef","Modal","show","isDisplay","onHide","onCancelAction","enforceFocus","keyboard","backdrop","size","Header","Title","title","Body","children","Footer","fe_service_minimize","isMinimize","Button","variant","ref","current","setAttribute","onSubmit","removeAttribute","REACT_APP_VERSION","process","FE_HUB","loadScripts","chunk2css","mainchunk","chunk2js","chunk3js","mainchunkjs","runtimemain","all","Window","setTypeGetCommentCategory","PopupRejectCall","setIsDisplay","bottom","validateCommentCategory","dataPut","entityType","entityId","direction","featureCode","comments","updateTrackHistoryCall","showPropzyAlert","message","result","PopupHistoryCall","_updateTrackHistoryCall","options","setOptions","loading","setLoading","label","selectedOption","setSelectedOption","error","setError","startDate","setStartDate","getList","getListLeadDealPrescreenRlistings","listingTypeName","propertyTypeName","formatPrice","push","styles","control","borderRadius","split","defineId","fromTaskId","reminderTime","getTime","curConfig","_storeConfigCall","callEvent","curCallEvent","onSubmitHistoryCall","cursor","showTimeSelect","timeIntervals","timeFormat","dateFormat","selected","date","filterTime","time","currentDate","Date","selectedDate","minDate","Main","_timeFormat","Duration","_init","minHeight","paddingRight","marginBottom","middlewares","createStateSyncMiddleware","predicate","thunkMiddleware","appReducer","combineReducers","customerReducer","store","createStore","withReduxStateSync","applyMiddleware","initStateWithPrevTab","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","HttpMethods","token","get","url","endpoint","cancelToken","Request","undefined","post","put","methodHttp","baseUrl","axios","baseURL","method","headers","Authorization","res","REACT_APP_BASE_URL","BASE_API_CALL","load3CXScript","setLoad3CXScript","endCallProcess","bindCallEvent","events","existEvent","newEvent","makeCallAppService","config","newConfig","_getPropzyId","hidden","phonePropzyId","phoneHash","Buffer","from","toString","_pbx_3cx","Send_MakeCall_3CX","Object","keys","params","_start","_scopeState","setInterval","_stop","currentTime","hidePopupHistoryCall","clearInterval","myCallConfig","extension","p3RDSource","appSource","department","dealId","leadId","deal","lead","_dataPostOutbound","_dataPostInbound","pbx_3CX","Event_Error_3CX","text","$","modal","Event_Ended_3CX","OtherPartyNumber","currentExtension","onCallEnded","Event_Ringing_3CX","Number","Event_Dialing_3CX","Event_Connected_3CX","Event_ChangeIsHold_3CX","IsHold","Event_ChangeIsMute_3CX","IsMuted","Event_Connect_3CX_Listen_Extension","Start","load3CX","Send_ActiveCall_3CX","Send_DropCall_3CX","Send_Hold_3CX","Send_Mute_3CX","Send_Transfer_3CX","callback","existingScript","onload"],"mappings":"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","file":"static/js/main.328dcf86.chunk.js","sourcesContent":["import { createSlice, createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {getPropzyId, updateEndTime} from './../../apis/CustomerInfo';\r\n\r\nconst increasement = createAction('increasement');\r\nconst setSecond = createAction('setSecond');\r\nconst init3CX = createAction('init3CX');\r\nconst changeStatus = createAction('changeStatus');\r\nconst setIntervalId = createAction('setIntervalId');\r\nconst setIncall = createAction('setIncall');\r\nconst setPhoneNumber = createAction('setPhoneNumber');\r\nconst resetState = createAction('resetState');\r\nconst setIsSHow = createAction('setIsSHow');\r\nconst setCallType = createAction('setCallType');\r\nconst setToggle = createAction('setToggle');\r\n\r\nconst initialState = {\r\n    callId: '',\r\n    count: 0,\r\n    isNewTab:false,\r\n    minimize: false,\r\n    isShow: false,\r\n    inCall:false,\r\n    phoneNumber:null,\r\n    callType:null,\r\n    counter: {\r\n        seconds: 0,\r\n        minutes: 0,\r\n        intervalId: null\r\n    },\r\n    pbx_3cx:null,\r\n    status: {\r\n        isHold:false,\r\n        isMute:false\r\n    },\r\n    isReject:false,\r\n    isHistory:false,\r\n    propzyId:null,\r\n    dataPostUpdateCall:null,\r\n    timer: {\r\n        startedDate: null,\r\n        endedDate: null,\r\n        connectedDate: null\r\n    },\r\n    actionRejectCall:false,\r\n    extClientTool:null,\r\n    userMakeCall:null,\r\n    otherParams: null\r\n }\r\n\r\nexport const fetchPropzyId = createAsyncThunk(\r\n    'call/fetchPropzyId',\r\n    async (dataPost) => {\r\n      const response = await getPropzyId(dataPost);\r\n      if(response?.data && response.data?.propzyCallId){\r\n          return response.data.propzyCallId\r\n      }else{\r\n        return null;\r\n      }\r\n    }\r\n  );\r\n\r\nexport const updateEndTimeInbound = createAsyncThunk(\r\n    'call/updateEndCall',\r\n    async (dataPost) => {\r\n      const response = await updateEndTime(dataPost);\r\n      if(response?.data && response.data?.propzyCallId){\r\n          return response.data.propzyCallId\r\n      }else{\r\n        return null;\r\n      }\r\n    }\r\n  );\r\n\r\nconst callReducer = createSlice({\r\n  name: 'call',\r\n  initialState: initialState,\r\n  reducers: {\r\n    [increasement]: (state) => {\r\n        return {...state,\r\n            count: state.count + 1\r\n        }\r\n    },\r\n    [setIncall] : (state,payload) => {\r\n        console.log(payload);\r\n        return {...state,\r\n            inCall:payload.status\r\n        }\r\n    },\r\n    [setSecond] : (state) => {\r\n        if(state.counter.seconds == 59){\r\n            return {...state,\r\n                counter:{...state.counter,\r\n                    seconds: 0,\r\n                    minutes: state.counter.minutes + 1\r\n                }\r\n            }\r\n        }\r\n        return {...state,\r\n            counter:{...state.counter,\r\n                seconds: state.counter.seconds + 1\r\n            }\r\n        }\r\n    },\r\n    [init3CX] : (state,payload) => {\r\n        return {...state,\r\n            pbx_3cx:payload.pbx_3cx\r\n        }\r\n    },\r\n    [changeStatus] : (state,payload) => {\r\n        switch (payload.code) {\r\n            case 1: // hold call\r\n                return {\r\n                    ...state,\r\n                    status : {...state.status,\r\n                        isHold:payload.status\r\n                    }\r\n                }\r\n        \r\n            default: // mute\r\n                return {\r\n                    ...state,\r\n                    status : {...state.status,\r\n                        isMute:payload.status\r\n                    }\r\n                }\r\n        }\r\n    },\r\n    [setIntervalId]:(state,payload) => {\r\n        return {...state,\r\n            counter:{...state.counter,\r\n                intervalId:payload.id\r\n            }\r\n        }\r\n    },\r\n    [setPhoneNumber] : (state,payload) => {\r\n        return {...state,\r\n            phoneNumber:payload.phoneNumber\r\n        }\r\n    },\r\n    [resetState] : (state) => {\r\n        return {...initialState,\r\n            pbx_3cx:state.pbx_3cx,\r\n            isReject:state.isReject,\r\n            extClientTool:state.extClientTool\r\n\r\n        }\r\n    },\r\n    [setIsSHow] : (state) => {\r\n        return {...state,isShow:true};\r\n    },\r\n    [setCallType] : (state,payload) => {\r\n        return {...state,callType:payload.status};\r\n    },\r\n    [setToggle] : (state) => {\r\n        return {...state,minimize:!state.minimize}\r\n    },\r\n    setIsReject(state,action){\r\n        state.isReject = action.payload;\r\n    },\r\n    setIsHistory(state){\r\n        state.isHistory = true;\r\n    },\r\n    setDataPost(state,action){\r\n        state.dataPostUpdateCall = action.payload;\r\n    },\r\n    setTimer(state,action){\r\n        switch (action.payload.type) {\r\n            case \"startedDate\":\r\n                state.timer.startedDate = action.payload.value;\r\n                break;\r\n            case \"endedDate\":\r\n                state.timer.endedDate = action.payload.value;\r\n                break;\r\n            case \"connectedDate\":\r\n                state.timer.connectedDate = action.payload.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    setActionRejectCall(state,action){\r\n        state.actionRejectCall = action.payload;\r\n    },\r\n    setExtClientTool(state,action){\r\n        state.extClientTool = action.payload;\r\n    },\r\n    hideIsShow(state){\r\n        state.isShow = false;\r\n    },\r\n    setUserMakeCall(state,action){\r\n        state.userMakeCall = action.payload;\r\n    },\r\n    updateCallConfig(state, action){\r\n        state.callConfig = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPropzyId.fulfilled, (state,action) => {\r\n        state.propzyId = action.payload;\r\n    })\r\n  }\r\n})\r\n\r\nexport const {setIsReject, setIsHistory, setDataPost, setTimer, setActionRejectCall, setExtClientTool, hideIsShow, setUserMakeCall, updateCallConfig} = callReducer.actions; \r\n\r\nexport default callReducer.reducer;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport {getDetailCustomer,getListings} from './../../apis/CustomerInfo';\r\n\r\nconst initialState = {\r\n  infoCustomer:null,\r\n  listings: {},\r\n  listingsClone: {},\r\n  status: 'idle',\r\n  keyword: '',\r\n  isShow:false\r\n};\r\n\r\nexport const fetchListingAsync = createAsyncThunk(\r\n  'customer/fetchListing',\r\n  async (phone) => {\r\n    const response = await getListings(phone);\r\n    // const response = await new Promise((resolve) =>\r\n    //   setTimeout(() => resolve({ data: taskName }), 1000)\r\n    // );\r\n    // return response;\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const fetchCustomerAsync = createAsyncThunk(\r\n  'customer/fetchCustomer',\r\n  async (phone) => {\r\n    const response = await getDetailCustomer(phone);\r\n    // const response = await new Promise((resolve) =>\r\n    //   setTimeout(() => resolve({ data: taskName }), 1000)\r\n    // );\r\n    // return response;\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const CustomerSlice = createSlice({\r\n  name: 'task',\r\n  initialState,\r\n  reducers: {\r\n    setKeyword(state,action) {\r\n      state.keyword = action.payload\r\n    },\r\n    setListings(state,action) {\r\n      state.listings = action.payload\r\n    },\r\n    toggleInfo(state){\r\n      state.isShow = !state.isShow\r\n    },\r\n    hideInfo(state){\r\n      state.isShow = false;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchListingAsync.fulfilled, (state, action) => {\r\n        console.log(action.payload);\r\n        state.isShow = true;\r\n        state.listings = action.payload.data;\r\n        state.listingsClone = action.payload.data;\r\n        // console.log(\"fulfilled\");\r\n        // state.status = 'idle';\r\n        // state.tasks.push(action.payload);\r\n      })\r\n\r\n    builder.addCase(fetchCustomerAsync.fulfilled, (state,action) => {\r\n        state.infoCustomer = action.payload.data;\r\n    })\r\n  }\r\n});\r\nexport const {setKeyword,setListings, toggleInfo, hideInfo} = CustomerSlice.actions;\r\nexport default CustomerSlice.reducer;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchListingAsync,toggleInfo} from './../redux/reducers/customerReducer';\r\n\r\nexport default function ButtonActions(props) {\r\n    const dispatch = useDispatch();\r\n    const stateCustomer = useSelector(state => state.customer);\r\n    const state = useSelector(state =>{\r\n        return state.call\r\n    });\r\n\r\n    if(props.inCall){\r\n        return <>\r\n            <div className=\"col-md-3 text-center\"><button className=\"btn btn-link\" onClick={()=>{props._mute()}}><i className={\r\n                !props.isMute ? \"icon-call-service icon-call-unmute\" : \"icon-call-service icon-call-mute\"\r\n            }></i></button></div>\r\n            <div className=\"col-md-3 text-center\"><button className=\"btn btn-link\" onClick={()=>{props._holdCall()}}><i className={\r\n                !props.isHold ? \"icon-call-service icon-call-pause\" : \"icon-call-service icon-call-play\"\r\n            }></i></button></div>\r\n            <div className=\"col-md-3 text-center\"><button onClick={()=>{\r\n                if(stateCustomer.isShow){\r\n                    dispatch(toggleInfo())\r\n                }else{\r\n                    dispatch(fetchListingAsync(state.phoneNumber));\r\n                }\r\n            }} className=\"btn btn-link\"><i className=\"icon-call-service icon-call-customer-info\"></i></button></div>\r\n            <div className=\"col-md-3 text-center\"><button className=\"btn btn-link\" onClick={() => props._endCall()}><i className=\"icon-call-service icon-call-reject\"></i></button></div>\r\n        </> \r\n    }\r\n    if(props.state.callType === 'outbound' && !props.inCall){\r\n        return <>\r\n            <div className=\"col-md-3 col-md-offset-3 text-center\"><button onClick={()=>{\r\n                if(stateCustomer.isShow){\r\n                    dispatch(toggleInfo())\r\n                }else{\r\n                    dispatch(fetchListingAsync(state.phoneNumber));\r\n                }\r\n            }} className=\"btn btn-link\"><i className=\"icon-call-service icon-call-customer-info\"></i></button></div>\r\n            <div className=\"col-md-3 text-center\"><button className=\"btn btn-link\" onClick={() => props._endCall()}><i className=\"icon-call-service icon-call-reject\"></i></button></div>\r\n        </>\r\n    }\r\n    if(props.state.callType === 'inbound' && !props.inCall){\r\n        return <>\r\n            <div className=\"col-md-4 text-center\"><button className=\"btn btn-link\" onClick={() => props._activeCall()}><i className=\"icon-call-service icon-call-accept\"></i></button></div>\r\n            <div className=\"col-md-4 text-center\"><button onClick={()=>{\r\n                    if(stateCustomer.isShow){\r\n                        dispatch(toggleInfo())\r\n                    }else{\r\n                        dispatch(fetchListingAsync(state.phoneNumber));\r\n                    }\r\n                }} className=\"btn btn-link\"><i className=\"icon-call-service icon-call-customer-info\"></i></button></div>\r\n            <div className=\"col-md-4 text-center\"><button className=\"btn btn-link\" onClick={() => props._endCall()}><i className=\"icon-call-service icon-call-reject\"></i></button></div>\r\n        </>\r\n    }\r\n    return <></>\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function CustomerModel() \r\n{\r\n    const stateCustomer = useSelector(state => state.customer);\r\n    const _renderCustomerInfo = () => {\r\n        if(stateCustomer.infoCustomer === null){\r\n            return \"(Không xác định)\";\r\n        }else{\r\n            return `${stateCustomer.infoCustomer.type} ${stateCustomer.infoCustomer.customerName}`;\r\n        }\r\n    }\r\n\r\n    return {_renderCustomerInfo};\r\n}","export const new_script = (src) => {\r\n    return new Promise(function(resolve, reject){\r\n      var script = document.createElement('script');\r\n      script.src = src;\r\n      script.addEventListener('load', function () {\r\n        resolve();\r\n      });\r\n      script.addEventListener('error', function (e) {\r\n        reject(e);\r\n      });\r\n      document.body.appendChild(script);\r\n    })\r\n  };\r\n\r\n  export const new_script_css = (src) => {\r\n    return new Promise(function(resolve, reject){\r\n      var script = document.createElement('link');\r\n      script.href = src;\r\n      script.rel=\"stylesheet\";\r\n      script.type=\"text/css\";\r\n      script.addEventListener('load', function () {\r\n        resolve();\r\n      });\r\n      script.addEventListener('error', function (e) {\r\n        reject(e);\r\n      });\r\n      document.body.appendChild(script);\r\n    })\r\n  };\r\n\r\nexport const removeVietnameseTones = (str) => {\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,\"a\"); \r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,\"e\"); \r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g,\"i\"); \r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,\"o\"); \r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,\"u\"); \r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,\"y\"); \r\n    str = str.replace(/đ/g,\"d\");\r\n    str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\r\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\r\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\r\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\r\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\r\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\r\n    str = str.replace(/Đ/g, \"D\");\r\n    // Some system encode vietnamese combining accent as individual utf-8 characters\r\n    // Một vài bộ encode coi các dấu mũ, dấu chữ như một kí tự riêng biệt nên thêm hai dòng này\r\n    str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // ̀ ́ ̃ ̉ ̣  huyền, sắc, ngã, hỏi, nặng\r\n    str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // ˆ ̆ ̛  Â, Ê, Ă, Ơ, Ư\r\n    // Remove extra spaces\r\n    // Bỏ các khoảng trắng liền nhau\r\n    // str = str.replace(/ + /g,\" \");\r\n    // str = str.trim();\r\n    // Remove punctuations\r\n    // Bỏ dấu câu, kí tự đặc biệt\r\n    // str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g,\" \");\r\n    return str;\r\n}\r\n\r\nexport const maskPhone = (phoneNumber) => {\r\n  if (phoneNumber !== null)\r\n      return `${phoneNumber.substring(0, 2)}******${phoneNumber.substring(phoneNumber.length - 2, phoneNumber.length)}`;\r\n  return \"N/A\";\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { getDetailCustomer } from '../apis/CustomerInfo';\r\nimport './CustomerInfo.scss';\r\nimport {fetchListingAsync, setKeyword, setListings} from './../redux/reducers/customerReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { new_script, removeVietnameseTones, maskPhone } from '../untils/common';\r\nimport CustomerModel from '../models/CustomerModel';\r\nimport CallActionModel from '../models/CallActionModel';\r\n\r\nconst CustomerInfo = (props) => {\r\n    const [phoneExistInSystem, setPhoneExistInSystem] = useState(false);\r\n    const [heightHeader,setHeightHeader] = useState(0)\r\n    const [isAgency, setIsAgency] = useState(false);\r\n    const [detailCustomer, setDetailCustomer] = useState({\r\n        prescreenRlistings: null,\r\n        leadDeals: null\r\n    });\r\n\r\n    const {_renderCustomerInfo} = CustomerModel();\r\n    const {_transfer} = CallActionModel();\r\n    \r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state =>{\r\n        return state.customer;\r\n    });\r\n\r\n    const stateCall = useSelector(state => state.call);\r\n\r\n    useEffect(() => {\r\n        // call api to check phone exists in system\r\n        setPhoneExistInSystem(true);\r\n        \r\n        // call api to check customer is agency\r\n        setIsAgency(true); \r\n\r\n        // call api to get detail customer\r\n        // (async () => {\r\n        //     const detailCustomer = await getDetailCustomer();\r\n        //     console.log(detailCustomer.data);\r\n        //     setDetailCustomer(detailCustomer.data);\r\n        // })();\r\n\r\n        let defiant = new_script('https://cdnjs.cloudflare.com/ajax/libs/defiant.js/2.2.7/defiant.min.js');\r\n        defiant.then(()=>{\r\n            console.log('Defiant');\r\n        })\r\n\r\n        // const heightBody = document.body.scrollHeight;\r\n        const heightBody = document.getElementsByClassName(\"content\").length > 0 ? document.getElementsByClassName(\"content\")[0].clientHeight : 300;;\r\n        const heightHead = document.getElementsByClassName(\"main-header\").length > 0 ? document.getElementsByClassName(\"main-header\")[0].clientHeight : 50;\r\n        setHeightHeader(heightHead);\r\n    }, []);\r\n\r\n     const searchResult = (data,keyword) => {\r\n        let _return = [];\r\n        let _data = {...data};\r\n        _data.list = data.list.map((value,key)=>{\r\n            return {...value,\r\n                keyIndex:key\r\n            }\r\n        });\r\n        _data = JSON.parse(removeVietnameseTones(JSON.stringify(_data)));\r\n        keyword = removeVietnameseTones(keyword);\r\n        const defiant = window.defiant;\r\n        let snapshot = defiant.getSnapshot(_data);\r\n        let found = defiant.search(snapshot, `//list[id[contains(text(),\\\"${keyword}\\\")] or address[contains(text(),\\\"${keyword}\\\")] or assignedName[contains(text(),\\\"${keyword}\\\")]]/keyIndex`);\r\n        _return = found.map((value)=>{\r\n            return data.list[value];\r\n        })\r\n        return {\r\n             count:found.length,\r\n             list:_return\r\n         };\r\n     }\r\n\r\n    useEffect(()=>{\r\n        if(state.keyword !== '' && window.defiant){\r\n            let listingsTmp = {};\r\n            listingsTmp.prescreenRlistings = searchResult(state.listingsClone.prescreenRlistings,state.keyword)\r\n            listingsTmp.leadDeals = searchResult(state.listingsClone.leadDeals,state.keyword)\r\n            dispatch(setListings(listingsTmp));\r\n        }else{\r\n            dispatch(setListings(state.listingsClone));\r\n        }\r\n    },[state.keyword]);\r\n\r\n    const search = async () => {\r\n        const defiant = window.defiant;\r\n        var data = state.listings.prescreenRlistings;\r\n        var found;\r\n        var snapshot;\r\n        // create snapshot of the data\r\n        snapshot = defiant.getSnapshot(data);\r\n\r\n        // this is many times faster than 'regular search' id address assignedName\r\n        found = defiant.search(snapshot, '//list[formatArea[contains(text(),\"83\")] or formatPrice[contains(text(),\"120,631\")]]');\r\n        console.log(found);\r\n    }\r\n\r\n    const getRedirectUrl = (item) => {\r\n        const {type, id, assignedTo} = item;\r\n        let urlRedirect = null;\r\n        const currentPath = window.location.origin;\r\n        switch (type) {\r\n            case 'LEAD':\r\n                urlRedirect = `${currentPath}/lead/detail/${id}`;\r\n                break;\r\n            case 'DEAL':\r\n                urlRedirect = `${currentPath}/deal/detail/${id}`;\r\n                break;\r\n            case 'PRESCREEN':\r\n                urlRedirect = `${currentPath}/pos/prescreener/detail/${id}`;\r\n                break;\r\n        \r\n            case 'RLISTING':\r\n                urlRedirect = `${currentPath}/pos/sa/detail/${id}`;\r\n                break;\r\n        \r\n            default:\r\n                urlRedirect = '#';\r\n                break;\r\n        }\r\n\r\n        return window.currentUser.userId == assignedTo ? <a target=\"_blank\" href={urlRedirect}>{id}</a> : <b>{id}</b>\r\n    }\r\n\r\n    const prescreenRlistings = state.listings.prescreenRlistings ? (\r\n        <div className=\"customer-info-collapse collapse\" id=\"prescreenRlistings\">\r\n            <div className=\"row\">\r\n                {state.listings.prescreenRlistings.list.map((item) => (\r\n                    <div className=\"col-md-12\" style={{lineHeight:\"25px\"}}>\r\n                        <div className=\"customer-info-item\">\r\n                            <div>\r\n                                <span>{getRedirectUrl(item)}</span>\r\n                                <span className=\"customer-info-status\">{item.statusName}</span>\r\n                            </div>\r\n                            <div>\r\n                                <b>{item.formatDetail}</b>\r\n                            </div>\r\n                            <div>\r\n                                <b>{item.address}</b>\r\n                            </div>\r\n                            <div>\r\n                                <i style={{color: item.online ? \"green\" : \"gray\"}} className=\"fa fa-circle\"></i> <span>{item.assignedName}</span> {item.online && item.voip3CXId !== null && window?.currentUser && window.currentUser.userId != item.assignedTo && stateCall.inCall && stateCall.callType === 'inbound' && <button onClick={() => {\r\n                                    _transfer(item.voip3CXId);\r\n                                }} className=\"btn btn-link\"><i className=\"fa fa-phone\"></i></button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    ) : '';\r\n\r\n    const leadDeals = state.listings.leadDeals ? (\r\n        <div className=\"customer-info-collapse collapse\" id=\"leadDeals\">\r\n            <div className=\"row\">\r\n                {state.listings.leadDeals.list.map((item) => (\r\n                    <div className=\"col-md-12\" style={{lineHeight:\"25px\"}}>\r\n                        <div className=\"customer-info-item\">\r\n                            <div>\r\n                                <span>{getRedirectUrl(item)}</span>\r\n                                <span className=\"customer-info-status\">{item.statusName}</span>\r\n                            </div>\r\n                            <div>\r\n                                <b>{item.formatDetail}</b>\r\n                            </div>\r\n                            <div>\r\n                                <b>{item.address}</b>\r\n                            </div>\r\n                            <div>\r\n                                <i style={{color: item.online ? \"green\" : \"gray\"}} className=\"fa fa-circle\"></i> <span>{item.assignedName}</span> {item.online && item.voip3CXId !== null && window?.currentUser && window.currentUser.userId != item.assignedTo && stateCall.inCall && stateCall.callType === 'inbound' && <button onClick={() => {\r\n                                    _transfer(item.voip3CXId);\r\n                                }} className=\"btn btn-link\"><i className=\"fa fa-phone\"></i></button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    ) : '';\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: \"300px\",\r\n                position: \"fixed\",\r\n                height:\"93vh\",\r\n                top: heightHeader,\r\n                overflow:\"auto\",\r\n                right: 0,\r\n                boxShadow: \"3.6px 12.5px 18px 0 rgba(0, 0, 0, 0.17)\",\r\n                backgroundColor: \"#fff\",\r\n                padding:\"20px\",\r\n                zIndex:6\r\n            }} className=\"customer-info\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 customer-info-username\">\r\n                        {_renderCustomerInfo()}\r\n                        {/* {phoneExistInSystem ? <b>{props.userName}</b> : '( Không xác định )'} */}\r\n                    </div>\r\n                    {/* {isAgency && \r\n                        <div className=\"col-md-12 customer-info-agency\">\r\n                            Môi giới\r\n                        </div>\r\n                    } */}\r\n                    <div className=\"col-md-12 customer-info-phone\">\r\n                        {maskPhone(stateCall.phoneNumber)}\r\n                    </div>\r\n                    {/* <div className=\"col-md-12 customer-info-group-btn\">\r\n                        <a href=\"\" target=\"_blank\" className=\"customer-info-btn\"><b>+ Request</b></a>\r\n                        <a href=\"\" target=\"_blank\" className=\"customer-info-btn\"><b>+ Thu thập dữ liệu</b></a>  \r\n                    </div> */}\r\n                    <div className=\"col-md-12 customer-info-search\">\r\n                        <input class=\"form-control\" onChange={(event) => {\r\n                            dispatch(setKeyword(event.target.value));\r\n                        }} value={state.keyword} placeholder=\"Tìm theo ID, Tên, Địa chỉ\"/>\r\n                    </div>\r\n                    <div className=\"col-md-12 customer-info-group-item\">\r\n                        <div className=\"head-collapse accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#prescreenRlistings\"><b>BÁN & CHO THUÊ ({state.listings.prescreenRlistings ? state.listings.prescreenRlistings.count : '0'})</b> </div>\r\n                        {prescreenRlistings}\r\n                    </div>\r\n                    <div className=\"col-md-12 customer-info-group-item\">\r\n                        <div className=\"head-collapse accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#leadDeals\"><b>MUA & THUÊ ({state.listings.leadDeals ? state.listings.leadDeals.count : '0'})</b> </div>\r\n                        {leadDeals}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CustomerInfo;","import React, {useRef} from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst Modals = (props) => {\r\n    const btnRef = useRef();\r\n\r\n    const _onSubmit = (e) => {\r\n        if(btnRef.current){\r\n            btnRef.current.setAttribute(\"disabled\", \"disabled\");\r\n        }\r\n        const _valid = props.onSubmit();\r\n        if(!_valid){\r\n            btnRef.current.removeAttribute(\"disabled\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className={`${props.className}`}\r\n            show={props.isDisplay}\r\n            onHide={props.onCancelAction}\r\n            enforceFocus={false}\r\n            keyboard={false}\r\n            backdrop=\"static\"\r\n            size=\"lg\"\r\n            id={`${props.id}`}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title>{props.title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{props.children}</Modal.Body>\r\n                <Modal.Footer>\r\n                    {window?.fe_service_minimize && props.isMinimize && \r\n                    <Button variant=\"default\" size=\"lg\" onClick={()=>{window.fe_service_minimize(`#${props.id}`,'hide')}}>\r\n                        Thu gọn\r\n                    </Button>\r\n                    }\r\n                    <Button ref={btnRef} variant=\"success\" size=\"lg\" onClick={_onSubmit}>\r\n                        Lưu\r\n                    </Button>\r\n                </Modal.Footer>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default Modals;\r\n","import {new_script, new_script_css} from '../untils/common';\r\nconst { REACT_APP_VERSION } = process.env;\r\n\r\nconst FE_HUB = window.FE_HUB;\r\n\r\nexport const loadScripts = (type = 'HISTORY_CALL_DENIED') => {\r\n    const chunk2css = new_script_css(`${FE_HUB}fe-comment-category/css/2.chunk.css?v=${REACT_APP_VERSION}`);\r\n    const mainchunk = new_script_css(`${FE_HUB}fe-comment-category/css/main.chunk.css?v=${REACT_APP_VERSION}`);\r\n    const chunk2js = new_script(`${FE_HUB}fe-comment-category/js/2.chunk.js?v=${REACT_APP_VERSION}`);\r\n    const chunk3js = new_script(`${FE_HUB}fe-comment-category/js/3.chunk.js?v=${REACT_APP_VERSION}`);\r\n    const mainchunkjs = new_script(`${FE_HUB}fe-comment-category/js/main.chunk.js?v=${REACT_APP_VERSION}`);\r\n    const runtimemain = new_script(`${FE_HUB}fe-comment-category/js/runtime-main.js?v=${REACT_APP_VERSION}`);\r\n    Promise.all([chunk2css,mainchunk,chunk2js,chunk3js,mainchunkjs,runtimemain]).then(() => {\r\n        Window.setTypeGetCommentCategory(type);\r\n    })\r\n    // const my_script = new_script('http://localhost:3006/static/js/bundle.js');\r\n    // const my_script1 = new_script('http://localhost:3006/static/js/vendors~main.chunk.js');\r\n    // const my_script2 = new_script('http://localhost:3006/static/js/main.chunk.js');\r\n    // Promise.all([my_script, my_script1, my_script2]).then(() => {\r\n    //     Window.setTypeGetCommentCategory(type);\r\n    // })\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { updateTrackHistoryCall } from '../../apis/TrackHistoryCall';\r\nimport Modals from '../../components/Modals';\r\nimport { loadScripts } from '../../models/PopupRejectModel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsReject } from '../../redux/reducers/callReducer';\r\n\r\nconst PopupRejectCall = () => {\r\n    const stateCall = useSelector(state=>state.call);\r\n    const dispatch = useDispatch();\r\n    const [isDisplay, setIsDisplay] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setIsDisplay(true);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(isDisplay){\r\n            loadScripts();\r\n        }\r\n    },[isDisplay]);\r\n\r\n    const onSubmit = () => {\r\n        const data = Window.validateCommentCategory();\r\n        if(data) {\r\n            const dataPut = {\r\n                propzyCallId: stateCall.propzyId,\r\n                entityType: 'UNDEFINED',\r\n                entityId: null,\r\n                direction: stateCall.callType,\r\n                startedDate: null,\r\n                endedDate: null,\r\n                connectedDate: null,\r\n                featureCode: \"HISTORY_CALL_DENIED\",\r\n                comments: data\r\n            };\r\n            (async () => {\r\n                const response = await updateTrackHistoryCall(dataPut);\r\n                if(window?.showPropzyAlert){\r\n                    window.showPropzyAlert(response.message);\r\n                }\r\n                if(response.result && response.code === '200') {\r\n                    // action after success\r\n                    dispatch(setIsReject(false));\r\n                    dispatch({type:\"call/resetState\"});\r\n                }\r\n            })();\r\n            return true;    \r\n        }else{\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n        {!isDisplay && \r\n                    <button style={{\r\n                        position:'fixed',\r\n                        zIndex:'9999999999999999',\r\n                        right:0,\r\n                        bottom:0\r\n                    }} onClick={()=>{\r\n                        setIsDisplay(!isDisplay);\r\n                    }} id='appCall' className='btn btn-default'>Mở rộng</button>\r\n                }\r\n        <Modals\r\n            id=\"rejectCallModal\" \r\n            isDisplay={isDisplay} \r\n            title=\"Từ chối cuộc gọi\" \r\n            className=\"in custom-modal\" \r\n            onCancelAction={() => dispatch(setIsReject())}\r\n            onSubmit={onSubmit}\r\n            isMinimize={true}\r\n        >\r\n            <div className=\"custom-modal-wrap\">\r\n                <div id=\"comment-category\"></div>\r\n            </div>\r\n        </Modals>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PopupRejectCall;","import React, { useState, useEffect } from 'react';\r\nimport Modals from '../../components/Modals';\r\nimport { loadScripts } from '../../models/PopupRejectModel';\r\nimport { getListLeadDealPrescreenRlistings } from '../../apis/TrackHistoryCall';\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRetweet } from '@fortawesome/free-solid-svg-icons';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CallActionModel from '../../models/CallActionModel';\r\n\r\nconst PopupHistoryCall = () => {\r\n    const {_updateTrackHistoryCall} = CallActionModel();\r\n    const state = useSelector(state => state.call);\r\n    const dispatch = useDispatch();\r\n    \r\n    const [isDisplay, setIsDisplay] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState({\r\n        label: '',\r\n        value: ''\r\n    });\r\n    const [error, setError] = useState(false);\r\n    const [startDate, setStartDate] = useState(null);\r\n    useEffect(()=>{\r\n        // Promise.all([my_script, my_script1, my_script2]).then(() => {\r\n        //     console.log('done');\r\n        //     Window.setTypeGetCommentCategory('HISTORY_CALL');\r\n        // });\r\n        // loadScripts('HISTORY_CALL');\r\n\r\n        // getList();\r\n        setIsDisplay(true);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(isDisplay){\r\n            loadScripts('HISTORY_CALL');\r\n            getList();\r\n        }\r\n    },[isDisplay])\r\n\r\n    const getList = async () => {\r\n        const response = await getListLeadDealPrescreenRlistings(state.phoneNumber);\r\n        if(response.result && response.data) {\r\n            const options = response.data.map( (item) =>{\r\n                let label = '';\r\n                switch (item.type) {\r\n                    case 'DEAL':\r\n                        label = `Deal ${item.id} - ${item.listingTypeName} - ${item.propertyTypeName} - ${item.formatPrice} - CRM: ${item.assignedName}`;\r\n                        break;\r\n                    case 'LEAD':\r\n                        label = `Lead ${item.id} - ${item.listingTypeName} - ${item.propertyTypeName} - ${item.formatPrice} - CRM: ${item.assignedName}`;\r\n                        break;\r\n                    case 'PRESCREEN':\r\n                        label = `Prescreen ${item.id} - ${item.address} - CRM: ${item.assignedName}`;\r\n                        break;\r\n                    case 'RLISTING':\r\n                        label = `Listing ${item.id} - ${item.address} - CRM: ${item.assignedName}`;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return {label: label, value: `${item.type}-${item.id}`}\r\n            });\r\n            options.push({label: 'Không có trong danh sách, Nhu cầu mới', value: `UNDEFINED-null`})\r\n            setOptions(options);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleRefresh = () => {\r\n        setSelectedOption({\r\n            label: '',\r\n            value: ''\r\n        });\r\n        setLoading(true);\r\n        getList();\r\n    };\r\n\r\n    const onChange = (data) => {\r\n        setError(false);\r\n        setSelectedOption(data);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        const data = Window.validateCommentCategory();\r\n        if(!selectedOption.label && state.callType === 'inbound') { //nếu là inbound mới check điều kiện bắt buộc nhập lý do cuộc gọi\r\n            setError(true);\r\n            return false;\r\n        }\r\n\r\n\r\n        if(data) {\r\n            const dataPut = {\r\n                propzyCallId: state.propzyId,\r\n                entityType: state.callType === 'outbound' ? state.dataPostUpdateCall.entityType : selectedOption.value !== '' ? selectedOption.value.split('-')[0] : 'UNDEFINED',\r\n                entityId: state.callType === 'outbound' ? state.dataPostUpdateCall.entityId : (selectedOption.value !== '' ? (selectedOption.value.split('-')[1] === 'null' ? null : selectedOption.value.split('-')[1]) : null),\r\n                direction: state.callType,\r\n                startedDate: state.timer.startedDate,\r\n                endedDate: state.timer.endedDate,\r\n                connectedDate: state.timer.connectedDate,\r\n                featureCode: 'HISTORY_CALL',\r\n                comments: data,\r\n                defineId:state.dataPostUpdateCall?.defineId ? state.dataPostUpdateCall.defineId : null,\r\n                fromTaskId:state.dataPostUpdateCall?.fromTaskId ? state.dataPostUpdateCall.defineId : null,\r\n                reminderTime : startDate !== null ? startDate.getTime() : startDate\r\n            };\r\n            (async () => {\r\n                const response = await _updateTrackHistoryCall(dataPut);\r\n                if(window?.showPropzyAlert){\r\n                    window.showPropzyAlert(response.message);\r\n                }\r\n                if(response.result && response.code === '200') {\r\n                    dispatch({type:\"call/resetState\"});\r\n                    const curConfig = {                        \r\n                        ...(JSON.parse(state.callConfig || {})),\r\n                        callId: window?._storeConfigCall?.callId || '',\r\n                        callEvent: window?._storeConfigCall?.callEvent || {}\r\n                    };\r\n                    window._storeConfigCall = curConfig;\r\n                    const callId = window._storeConfigCall.callId;\r\n                    const curCallEvent = window._storeConfigCall.callEvent[callId];\r\n                    const onSubmitHistoryCall = curCallEvent?.onSubmitHistoryCall;\r\n                    typeof onSubmitHistoryCall === 'function' && onSubmitHistoryCall();\r\n                                        \r\n                    // if(window?._storeConfigCall && window._storeConfigCall !== null && window._storeConfigCall?.feature && window._storeConfigCall.feature === 'saCheckEmpty'){\r\n                    //     const callId = window._storeConfigCall.callId;\r\n                    //     const curCallEvent = window._storeConfigCall.callEvent[callId];\r\n                    //     typeof curCallEvent === 'function' && curCallEvent();\r\n                    //     // window._storeConfigCall.onCallEnded(null); // mở popup check trong\r\n                    //     // window._storeConfigCall = null;\r\n                    // }\r\n                }\r\n            })();\r\n            return true;    \r\n        }else{\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const styles = {\r\n        control: styles => ({ ...styles, borderRadius: 'none' }),\r\n      };\r\n\r\n    const filterPassedTime = (time) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n\r\n        return currentDate.getTime() < selectedDate.getTime();\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {!isDisplay && \r\n            <button style={{\r\n                position:'fixed',\r\n                zIndex:'9999999999999999',\r\n                right:0,\r\n                bottom:0\r\n            }} onClick={()=>{\r\n                setIsDisplay(!isDisplay);\r\n            }} id='appCall' className='btn btn-default'>Mở rộng</button>\r\n        }\r\n        <Modals\r\n            id=\"hisCallModal\" \r\n            isDisplay={isDisplay} \r\n            title=\"Kết Quả Cuộc Gọi\" \r\n            className=\"in custom-modal\" \r\n            onCancelAction={() => setIsDisplay(false)}\r\n            onSubmit={onSubmit}\r\n            isMinimize={true}\r\n        >\r\n            <div className=\"custom-modal-wrap\">\r\n                {state.callType === 'inbound' && <div className=\"custom-modal-select-box\">\r\n                    <div><b>Cuộc gọi liên quan đến</b></div>\r\n                    <div className=\"custom-modal-select-box-wrap\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-11\">\r\n                                <div className=\"custom-modal-select\">\r\n                                    <Select\r\n                                        placeholder={false}\r\n                                        styles={styles}\r\n                                        options={options}\r\n                                        value={selectedOption}\r\n                                        onChange={(data) => onChange(data)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                                <div style={{cursor: \"pointer\"}} className=\"custom-modal-reload-symbol\" onClick={handleRefresh}>\r\n                                    {/* <FontAwesomeIcon style={{color:\"#488df3\"}} icon={faRetweet} size=\"2x\" /> */}\r\n                                    {loading && \r\n                                        <i\r\n                                            style={{color:\"#488df3\"}}\r\n                                            className=\"fa fa-2x fa-refresh fa-spin\"\r\n                                        />\r\n                                    }\r\n                                    {!loading && \r\n                                        <i\r\n                                            style={{color:\"#488df3\"}}\r\n                                            className=\"fa fa-2x fa-refresh\"\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {error && \r\n                        <div className=\"title-red\">Vui lòng chọn cuộc gọi liên quan đến</div>\r\n                    }\r\n                </div>}\r\n                <div id=\"comment-category\"></div>\r\n                {((state.callType === 'outbound' && state.dataPostUpdateCall.entityType === 'DEAL') || (state.callType === 'outbound' && state.dataPostUpdateCall.entityType === 'LEAD')) &&\r\n                    <div>\r\n                        <b>Thiết lập nhắc nhở</b>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <DatePicker \r\n                                    className=\"form-control\" \r\n                                    showTimeSelect \r\n                                    timeIntervals={15} \r\n                                    timeFormat=\"HH:mm\" \r\n                                    dateFormat=\"HH:mm dd/MM/yyyy\" \r\n                                    selected={startDate} \r\n                                    onChange={(date) => setStartDate(date)}\r\n                                    filterTime={filterPassedTime}\r\n                                    minDate={new Date()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Modals>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default PopupHistoryCall;","import React, { useEffect } from 'react';\r\nimport ButtonActions from './../components/ButtonActions';\r\nimport CallActionModel from './../models/CallActionModel';\r\nimport CustomerModel from '../models/CustomerModel';\r\nimport Duration from './../untils/Duration';\r\nimport {maskPhone} from './../untils/common';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import {fetchInfoByPhoneNumber,addTaskAsync} from './../redux/actions/customerAction';\r\nimport CustomerInfo from './../containers/CustomerInfo';\r\nimport PopupRejectCall from './../containers/PopupRejectCall/PopupRejectCall';\r\nimport PopupHistoryCall from './../containers/PopupHistoryCall/PopupHistoryCall';\r\n\r\n\r\nexport default function Main(){\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state =>{\r\n        return state.call\r\n    });\r\n    \r\n    const stateCustomer = useSelector(state => state.customer);\r\n    // const {minutes,seconds} = useSelector(state => state.counter);\r\n    // const {isHold,isMute} = useSelector(state => state.status);\r\n    // const inCall = useSelector(state => state.inCall);\r\n    const {_timeFormat} = Duration();\r\n    const {_init,_holdCall,_mute,_endCall,_activeCall} = CallActionModel();\r\n    const {_renderCustomerInfo} = CustomerModel();\r\n\r\n    const _renderAppCall = () => {\r\n        if(state.isShow && !state.minimize){\r\n            return <div style={{minHeight:\"333px\"}} id=\"appCall\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div style={{paddingRight:\"10px\"}} className=\"text-right\">\r\n                            <a onClick={()=> {dispatch({type:\"call/setToggle\"})}}><i className=\"fa fa-window-minimize\" aria-hidden=\"true\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-12 text-center\"><h4 className=\"call-service-call-name\">{_renderCustomerInfo()}</h4></div>\r\n                    <div className=\"col-md-12 text-center call-service-call-phone\" onClick={()=>dispatch({type:\"call/increasement\"})}>{maskPhone(state.phoneNumber)}</div>\r\n                    {state.inCall && <div className=\"col-md-12 text-center call-service-call-time\" style={{marginBottom:\"160px\"}}>{_timeFormat(state.counter.minutes)} : {_timeFormat(state.counter.seconds)}</div>}\r\n                    {!state.inCall && <div className=\"col-md-12 text-center call-service-call-status\" style={{marginBottom:\"160px\"}}>{state.callType === 'outbound' && 'Gọi đi ...'} {state.callType === 'inbound' && 'Gọi đến ...'}</div>}\r\n                    <ButtonActions state={state} isHold={state.status.isHold} isMute={state.status.isMute} inCall={state.inCall} _holdCall={_holdCall} _mute={_mute} _endCall={_endCall} _activeCall={_activeCall}/>\r\n                </div>\r\n            </div>\r\n        }else if(state.isShow && state.minimize){\r\n            return <div style={{padding:\"10px\"}} id=\"appCall\">\r\n                <a onClick={()=> {dispatch({type:\"call/setToggle\"})}}>Nhấn để quay lại cuộc gọi {state.callType === 'outbound' && !state.inCall && 'gọi đi ...'} {state.callType === 'inbound' && !state.inCall && 'gọi đến ...'} {state.inCall && `${_timeFormat(state.counter.minutes)} : ${_timeFormat(state.counter.seconds)}`}</a>    \r\n            </div>\r\n        }\r\n        \r\n        return \"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {state.isReject && state.propzyId !== null && <PopupRejectCall/>}\r\n        {state.isHistory && state.propzyId !== null && <PopupHistoryCall/>}\r\n        {stateCustomer.isShow && <CustomerInfo name=\"\" phone=\"\"/>}\r\n        {_renderAppCall()}\r\n        </>\r\n    );\r\n}","import { configureStore, createStore, createAction, createReducer, getDefaultMiddleware, applyMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport {createStateSyncMiddleware,initStateWithPrevTab, initMessageListener, withReduxStateSync} from \"redux-state-sync\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport callReducer from './reducers/callReducer';\r\nimport customerReducer from './reducers/customerReducer';\r\n// import logger from 'redux-logger'\r\n\r\nconst middlewares = [\r\n    createStateSyncMiddleware({\r\n        predicate: action => action.type,\r\n    }),\r\n    thunkMiddleware,\r\n    // logger\r\n];\r\n\r\nconst appReducer = combineReducers({\r\n    call: callReducer,\r\n    customer: customerReducer\r\n});\r\n\r\n\r\n\r\nconst store = createStore(withReduxStateSync(appReducer), {}, applyMiddleware(...middlewares));\r\n// const store = createStore({\r\n//     reducer: {\r\n//         call: callReducer,\r\n//         customer: customerReducer\r\n//     },\r\n//     // middleware: getDefaultMiddleware({\r\n//     //     serializableCheck: false\r\n//     // }),\r\n//     middleware: (getDefaultMiddleware) =>\r\n//       getDefaultMiddleware().concat(createStateSyncMiddleware(reduxStateSyncConfig))\r\n//     //   getDefaultMiddleware([createStateSyncMiddleware(reduxStateSyncConfig)]),\r\n//     // preloadedState,\r\n//     // enhancers: [monitorReducersEnhancer],\r\n\r\n//     // applyMiddleware:applyMiddleware()\r\n// })\r\ninitStateWithPrevTab(store);\r\n// initMessageListener(store);\r\n\r\nexport default store","import React from 'react';\r\nimport Main from './containers/Main';\r\nimport CustomerInfo from './containers/CustomerInfo';\r\n// import PopupRejectCall from './containers/PopupRejectCall/PopupRejectCall';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux'\r\n// import PopupHistoryCall from './containers/PopupHistoryCall/PopupHistoryCall';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Main/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import axios, { CancelToken } from \"axios\";\r\n\r\nconst HttpMethods = {\r\n    GET : \"GET\",\r\n    POST : \"POST\",\r\n    PUT : \"PUT\",\r\n    PATCH : \"PATCH\",\r\n    DELETE : \"DELETE\",\r\n}\r\nconst token = window?.currentUser ? window.currentUser.token : null;\r\n\r\nexport const get = async (url, endpoint, cancelToken = '') => {\r\n    return await Request(\r\n        HttpMethods.GET,\r\n        url,\r\n        endpoint,\r\n        undefined,\r\n        cancelToken\r\n    );\r\n};\r\n\r\nexport const post = async (url, endpoint, payload, cancelToken = '') => {\r\n    return await Request(HttpMethods.POST, url, endpoint, payload, cancelToken);\r\n};\r\n\r\nexport const put = async (url, endpoint, payload, cancelToken = '') => {\r\n    return await Request(HttpMethods.PUT, url, endpoint, payload, cancelToken);\r\n};\r\n\r\nexport const patch = async (url, endpoint, payload, cancelToken = '') => {\r\n    return await Request(\r\n        HttpMethods.PATCH,\r\n        url,\r\n        endpoint,\r\n        payload,\r\n        cancelToken\r\n    );\r\n};\r\n\r\nexport const deleteRequest = async (url, endpoint, cancelToken = '') => {\r\n    return await Request(\r\n        HttpMethods.DELETE,\r\n        url,\r\n        endpoint,\r\n        undefined,\r\n        cancelToken\r\n    );\r\n};\r\n\r\nconst Request = async (methodHttp, baseUrl, endpoint, body, cancelToken) => {\r\n    try {\r\n        let res = await axios({\r\n            url: endpoint,\r\n            baseURL: baseUrl,\r\n            method: methodHttp,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n            data: JSON.stringify(body),\r\n            cancelToken: cancelToken,\r\n        });\r\n        if (res.status == 401) {\r\n            console.log(res.status);\r\n        }\r\n        return res.data;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};","import { get, post } from './client';\r\n\r\nlet { REACT_APP_BASE_URL } = process.env;\r\nif(window?.BASE_API_CALL){\r\n    REACT_APP_BASE_URL = window.BASE_API_CALL;\r\n}\r\n\r\nexport const getDetailCustomer = async (phone) => {\r\n    return get(REACT_APP_BASE_URL, `/3cx/get-customer-name-and-type-by-phone/${phone}`);\r\n}\r\n\r\nexport const getListings = async (phone) => {\r\n    return get(REACT_APP_BASE_URL, `/3cx/get-lead-deal-prescreen-rlistings-by-phone/${phone}`); \r\n}\r\n\r\nexport const getPropzyId = (dataPost) => {\r\n    return post(REACT_APP_BASE_URL, '/3cx/init-track-history-call',dataPost);\r\n}\r\n\r\nexport const updateEndTime = (dataPost) => {\r\n    return post(REACT_APP_BASE_URL, '/3cx/update-after-finish-calling',dataPost);\r\n}\r\n\r\n","import { useState, useEffect} from 'react';\r\nimport load3CX from '../scripts/3CX';\r\nimport Duration from '../untils/Duration';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { fetchCustomerAsync } from '../redux/reducers/customerReducer';\r\nimport { setIsReject,setIsHistory, fetchPropzyId, setDataPost, setTimer, updateEndTimeInbound, setActionRejectCall, setExtClientTool, hideIsShow, setUserMakeCall, updateCallConfig } from '../redux/reducers/callReducer';\r\nimport {hideInfo} from '../redux/reducers/customerReducer';\r\nimport { updateTrackHistoryCall } from '../apis/TrackHistoryCall';\r\n\r\n\r\nexport default function CallActionModel() \r\n{\r\n    const [pbx_3cx_state,setPbx_3cx_state] = useState(null);\r\n    const [load3CXScript,setLoad3CXScript] = useState(false);\r\n    // const [isHold,setIsHold] = useState(false);\r\n    // const [isMute,setIsMute] = useState(false);\r\n    // const [seconds,setSeconds] = useState(0);\r\n    // const [minutes,setMinutes] = useState(0);\r\n    // const {_start,_stop} = Duration();\r\n    const dispatch = useDispatch();\r\n    const pbx_3cx = useSelector(state => state.pbx_3cx);\r\n    const state = useSelector(state => state.call);\r\n    const {minutes,seconds} = useSelector(state => state.call.counter);\r\n    const inCall = useSelector(state => state.inCall);\r\n\r\n    Window.endCallProcess = function() {\r\n        dispatch({type:\"call/resetState\"});\r\n    }\r\n\r\n    Window.bindCallEvent = function (callId, events) {\r\n        const existEvent = window._storeConfigCall?.callEvent || {};\r\n        const newEvent = {\r\n            ...existEvent,\r\n            [callId]: events\r\n        }\r\n        window._storeConfigCall = {\r\n            callEvent: newEvent\r\n        }\r\n    }\r\n\r\n    Window.makeCallAppService = function _makeCallAppService(config){ // sction make call\r\n        if(window.currentUser.voip3CXId === null){\r\n            window.showPropzyAlert(\"Chưa cài đặt SIP Phone cho tài khoản. Vui lòng liên hệ quản lý.\");\r\n        }else{\r\n            // if(state.extClientTool == window.currentUser.voip3CXId){\r\n                const phoneNumber = config.phoneNumber;\r\n                dispatch(fetchCustomerAsync(phoneNumber))\r\n                dispatch({type:\"call/setPhoneNumber\",phoneNumber:phoneNumber});\r\n                dispatch({type:'call/setIsSHow'});\r\n                setUserMakeCall(window.currentUser.userId);\r\n                const newConfig = {\r\n                    callId: window._storeConfigCall?.callId || '',\r\n                    callEvent: window._storeConfigCall?.callEvent,\r\n                    ...config\r\n                }\r\n                const dataPost = _getPropzyId(newConfig);                \r\n                dispatch(fetchPropzyId(dataPost));\r\n    \r\n                // saCheckEmpty\r\n                window._storeConfigCall = newConfig;\r\n                dispatch(updateCallConfig(JSON.stringify(newConfig)));\r\n            // } else if(state.extClientTool !== null){\r\n            //     window.showPropzyAlert(\"Số nội bộ ở 3CXPhone không trùng khớp với số nội bộ của tài khoản. Vui lòng đăng nhập đúng số nội bộ trên 3CXPhone.\");\r\n            // } else{ //case không cập nhật extClientTool => không mở client tool\r\n            //     // window.$('#modalNotOpenApp3CX').modal();\r\n            //     dispatch({type:'call/setIsSHow'});\r\n            // }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(state.propzyId !== null && !document.hidden && state.callType === null){\r\n            const phonePropzyId = `${state.phoneNumber}+${state.propzyId}`;\r\n            const phoneHash = `#call9${Buffer.from(phonePropzyId).toString('base64')}`;\r\n            console.log(\"makecall\",phoneHash);\r\n            window._pbx_3cx.Send_MakeCall_3CX(phoneHash);\r\n        }\r\n    },[state.propzyId])\r\n\r\n    useEffect(()=>{\r\n        if(state.callConfig && Object.keys(state.callConfig).length > 0) {\r\n            window._storeConfigCall = {\r\n                ...(JSON.parse(state.callConfig || {})),\r\n                callEvent: window._storeConfigCall?.callEvent\r\n            };\r\n            delete window._storeConfigCall.callConfig;\r\n        }\r\n    },[state.callConfig])\r\n\r\n    const _updateTrackHistoryCall = async(params) => {\r\n        const dataPut = {\r\n            propzyCallId: state.propzyId,\r\n            entityType: state.callType === 'outbound' ? state.dataPostUpdateCall.entityType : 'UNDEFINED',\r\n            entityId: state.callType === 'outbound' ? state.dataPostUpdateCall.entityId : null,\r\n            direction: state.callType,\r\n            startedDate: state.timer.startedDate,\r\n            endedDate: state.timer.endedDate,\r\n            connectedDate: state.timer.connectedDate,\r\n            featureCode: 'HISTORY_CALL',\r\n            comments: null,\r\n            defineId:state.dataPostUpdateCall?.defineId ? state.dataPostUpdateCall.defineId : null,\r\n            fromTaskId:state.dataPostUpdateCall?.fromTaskId ? state.dataPostUpdateCall.defineId : null,\r\n            reminderTime : null,\r\n            ...params\r\n        };\r\n\r\n    return await updateTrackHistoryCall(dataPut);\r\n    }\r\n\r\n    Window.updateTrackHistoryCall = _updateTrackHistoryCall;\r\n\r\n    const _start =  () => {\r\n        const _scopeState = window._scopeState;\r\n        if(_scopeState.counter.intervalId === null && !document.hidden){\r\n            if(window.inCall === false){\r\n                dispatch(setTimer({type:\"connectedDate\",value:new Date().getTime()}));\r\n                window.setIntervalId = setInterval(() => {\r\n                    dispatch({ type: 'call/setSecond' });\r\n                    // setSeconds(seconds => seconds + 1);\r\n                }, 1000);\r\n                dispatch({type:\"call/setIncall\",status:true});\r\n                dispatch({type:\"call/setIntervalId\",id:window.setIntervalId});\r\n                window.inCall = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    const _stop = () => {\r\n        const currentTime = new Date().getTime();\r\n        const _scopeState = window._scopeState;\r\n        if(_scopeState.propzyId !== null){\r\n            dispatch(hideIsShow()); // hide app call\r\n            if(_scopeState.callType === 'inbound' && _scopeState.inCall){\r\n                dispatch(updateEndTimeInbound( // kết thúc cuộc gọi case inbound phải cập nhật endtime for BE\r\n                    {\r\n                        propzyCallId:_scopeState.propzyId,\r\n                        endedDate:currentTime\r\n                    }\r\n                ));\r\n            }\r\n    \r\n            dispatch(setTimer({type:\"endedDate\",value:currentTime}));\r\n            \r\n            if(_scopeState.callType === 'inbound' && !_scopeState.inCall){ // có cuộc gọi mà tắt máy là hỏi lý do vì sao tắt máy\r\n                if(_scopeState.actionRejectCall){\r\n                    dispatch(setIsReject(true)); // hiển thị lý do từ chối cuộc gọi\r\n                }else{\r\n                    dispatch({type:\"call/resetState\"});\r\n                }\r\n            }else{\r\n                !window._storeConfigCall?.otherParams?.hidePopupHistoryCall && dispatch(setIsHistory()); // hiển thị cập nhật lịch sử cuộc gọi                \r\n            }\r\n            dispatch(hideInfo());\r\n    \r\n            window.inCall = false;\r\n            // dispatch({type:\"call/resetState\"});\r\n            if(window.setIntervalId){\r\n                clearInterval(window.setIntervalId);\r\n            }\r\n        }\r\n    }\r\n\r\n    const _endCall = () => { // action endcall\r\n        window._pbx_3cx.Send_DropCall_3CX();\r\n        dispatch(setActionRejectCall(true)); // set have action reject call from user\r\n        // setShowCallApp(false);\r\n    }\r\n\r\n    const _activeCall = () => {\r\n        window._pbx_3cx.Send_ActiveCall_3CX();\r\n    }\r\n\r\n    const _holdCall = () => { // action hold call\r\n        // console.log(state.status.isHold);\r\n        window._pbx_3cx.Send_Hold_3CX(!state.status.isHold); //true/false\r\n    }\r\n\r\n    const _mute = () => {\r\n        window._pbx_3cx.Send_Mute_3CX();\r\n    }\r\n\r\n    const _transfer = (voip3CXId) => {\r\n        window._pbx_3cx.Send_Transfer_3CX(voip3CXId);\r\n    }\r\n\r\n    const _dataPostOutbound = (myCallConfig) => {\r\n        let dataPost = {\r\n            entityType: null,\r\n            entityId: null, \r\n            direction: \"outbound\",\r\n            phone: myCallConfig.phoneNumber?.phone ? myCallConfig.phoneNumber.phone : myCallConfig.phoneNumber,\r\n            extension: window?.currentUser && window.currentUser?.voip3CXId ? window.currentUser.voip3CXId : null,\r\n            startedDate: new Date().getTime(),\r\n            p3RDSource: \"3RD_3CX\",    \r\n            appSource: \"DB\",\r\n            fromTaskId: myCallConfig?.fromTaskId ? myCallConfig.fromTaskId : null,\r\n            defineId: myCallConfig?.defineId ? myCallConfig.defineId : null\r\n        };\r\n        if(myCallConfig?.department){ // saleside\r\n            switch (myCallConfig.department) {\r\n                case 1: // 1 Pre\r\n                    dataPost.entityType = 'PRESCREEN';\r\n                    break;\r\n                case 2: // 2 SA\r\n                    dataPost.entityType = 'RLISTING';\r\n                    break;\r\n            }\r\n            dataPost.entityId = myCallConfig.id;\r\n        }else{ //buyside\r\n            if(myCallConfig?.dealId){\r\n                dataPost.entityType = 'DEAL';\r\n                dataPost.entityId = myCallConfig?.dealId ? myCallConfig.dealId : null;\r\n            }else if (myCallConfig?.leadId){\r\n                dataPost.entityType = 'LEAD';\r\n                dataPost.entityId = myCallConfig?.leadId ? myCallConfig.leadId : null;\r\n            }else{\r\n                if(window?.deal){\r\n                    dataPost.entityType = 'DEAL';\r\n                    dataPost.entityId = window.deal?.dealId ? window.deal.dealId : null;\r\n                }\r\n                if(window?.lead){\r\n                    dataPost.entityType = 'LEAD';\r\n                    dataPost.entityId = window.lead?.leadId ? window.lead.leadId : null;\r\n                }\r\n            }\r\n        }\r\n        return dataPost;\r\n    }\r\n\r\n    const _dataPostInbound = () => {\r\n        return {\r\n            entityType: 'UNDEFINED',\r\n            entityId: null, \r\n            direction: \"inbound\",\r\n            phone: window._scopeState.phoneNumber,\r\n            extension: window?.currentUser && window.currentUser?.voip3CXId ? window.currentUser.voip3CXId : null,\r\n            startedDate: new Date().getTime(),\r\n            p3RDSource: \"3RD_3CX\",    \r\n            appSource: \"DB\"\r\n        };\r\n    }\r\n\r\n    const _getPropzyId = (myCallConfig) => {\r\n        let dataPost = null;\r\n        if(myCallConfig !== null){\r\n            dataPost = _dataPostOutbound(myCallConfig);\r\n        }else{\r\n            dataPost = _dataPostInbound();\r\n        }\r\n        dispatch(setDataPost(dataPost));\r\n\r\n        const {defineId,fromTaskId, ...newObj} = dataPost; // xóa 2 field khỏi datapost\r\n\r\n        return newObj;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        window._scopeState = state;\r\n    },[state])\r\n\r\n    useEffect(()=>{\r\n        if(load3CXScript){\r\n            window.inCall = false;\r\n            if(window.pbx_3CX){\r\n                window._pbx_3cx = new window.pbx_3CX();\r\n\r\n                window._pbx_3cx.Event_Error_3CX= function(text) {\r\n                    if(window.$ && window._scopeState.isShow){\r\n                        _stop();\r\n                        window.$('#modalNotOpenApp3CX').modal();\r\n                    }\r\n                }\r\n                // sự kiện kết thúc cuộc gọi\r\n                window._pbx_3cx.Event_Ended_3CX = function(OtherPartyNumber,currentExtension){\r\n                    // dispatch({type:\"setIncall\",status:false});\r\n                    // if(currentExtension.Number == window.currentUser.voip3CXId){\r\n                        _stop();\r\n                    // }\r\n                    const callId = window._storeConfigCall?.callId || '';\r\n                    const curCallEvent = window._storeConfigCall.callEvent[callId];\r\n                    const onCallEnded = curCallEvent?.onCallEnded;\r\n                    typeof onCallEnded === 'function' && onCallEnded();\r\n                }\r\n                // sự kiện cuộc gọi đến\r\n                window._pbx_3cx.Event_Ringing_3CX = function(OtherPartyNumber,currentExtension) {\r\n                    if(currentExtension.Number == window.currentUser.voip3CXId){\r\n                        dispatch({type:\"call/resetState\"});\r\n                        dispatch(setTimer({type:\"startedDate\",value:new Date().getTime()}));\r\n\r\n                        dispatch({type:\"call/setPhoneNumber\",phoneNumber:OtherPartyNumber.OtherPartyNumber});\r\n                        dispatch({type:'call/setIsSHow'});\r\n                        dispatch({type:'call/setCallType',status:'inbound'});\r\n                        dispatch(fetchCustomerAsync(OtherPartyNumber.OtherPartyNumber));\r\n                        if(!document.hidden){\r\n                            const dataPost = _getPropzyId(null);\r\n                            dispatch(fetchPropzyId(dataPost));\r\n                        }\r\n                    }\r\n                }\r\n                // sự kiện đổ chuông cuộc gọi đi\r\n                window._pbx_3cx.Event_Dialing_3CX = function(OtherPartyNumber,currentExtension) {\r\n                    // (currentExtension.Number == window.currentUser.voip3CXId)\r\n                    const _scopeState = window._scopeState;\r\n                    if(_scopeState.propzyId !== null){\r\n                        dispatch(setTimer({type:\"startedDate\",value:new Date().getTime()}));\r\n                        dispatch({type:'call/setCallType',status:'outbound'});\r\n                    }\r\n                }\r\n                //sự kiện cuộc gọi được kết nối\r\n                window._pbx_3cx.Event_Connected_3CX = function(OtherPartyNumber,currentExtension) {\r\n                    _start();\r\n                }\r\n                //sự kiện hold cuộc gọi\r\n                window._pbx_3cx.Event_ChangeIsHold_3CX = function (IsHold,currentExtension) {\r\n                    dispatch({type:'call/changeStatus',code:1,status:IsHold});\r\n                }\r\n                //sự kiện mute cuộc gọi\r\n                window._pbx_3cx.Event_ChangeIsMute_3CX= function(IsMuted,currentExtension) {\r\n                    dispatch({type:'call/changeStatus',code:2,status:IsMuted});\r\n                }\r\n\r\n                window._pbx_3cx.Event_Connect_3CX_Listen_Extension= function(currentExtension) {\r\n                    dispatch(setExtClientTool(currentExtension.Number));\r\n    \r\n                }\r\n                // setPbx_3cx_state(pbx_3cx);\r\n                window._pbx_3cx.Start(1);\r\n                // dispatch({type:\"init3CX\",pbx_3cx})\r\n            }\r\n        }\r\n    },[load3CXScript])\r\n\r\n    useEffect(() => {\r\n        load3CX(()=>{\r\n            setLoad3CXScript(true);\r\n        })\r\n    },[])\r\n\r\n    return {_activeCall,_endCall,_holdCall,_mute,seconds,minutes,_start, _transfer, _updateTrackHistoryCall};\r\n}","import { get, put } from './client';\r\n\r\nlet { REACT_APP_BASE_URL } = process.env;\r\nif(window?.BASE_API_CALL){\r\n    REACT_APP_BASE_URL = window.BASE_API_CALL;\r\n}\r\n\r\nexport const getListLeadDealPrescreenRlistings = async (phone) => {\r\n    return await get(REACT_APP_BASE_URL, `/3cx/get-lead-deal-prescreen-rlistings-for-dropdown-label/${phone}`);\r\n};\r\n\r\nexport const updateTrackHistoryCall = async (dataPut) => {\r\n    return await put(REACT_APP_BASE_URL, '/3cx/update-track-history-call', dataPut);\r\n}; ","import { useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nexport default function Duration(){\r\n    const dispatch = useDispatch();\r\n    const intervalId = useSelector(state => state.call.counter.intervalId);\r\n\r\n    const _timeFormat = (time) => {\r\n        return time > 9 ? \"\" + time: \"0\" + time;\r\n    }\r\n\r\n    const _start =  () => {\r\n        window.setIntervalId = setInterval(() => {\r\n            dispatch({ type: 'call/setSecond' });\r\n        }, 1000);\r\n    }\r\n\r\n    const _stop = () => {\r\n        return clearInterval(window.setIntervalId);\r\n    }\r\n\r\n    return {_start,_stop,_timeFormat};\r\n}","const load3CX = (callback) => {\r\n    const existingScript = document.getElementById('3cx');\r\n    if (!existingScript) {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://api-propzy.ringbot.co/api3cx/pbx_3cx_live_v5.js';\r\n        script.id = '3cx';\r\n        document.body.appendChild(script);\r\n        script.onload = () => {\r\n            if (callback) callback();\r\n        };\r\n    }\r\n    if (existingScript && callback) callback();\r\n};\r\nexport default load3CX;"],"sourceRoot":""}